{"version":3,"file":"stellerator-embedded.js","mappings":"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A,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GAERA,EAAI,IAAM,GAAF,GAERA,EAAI,GAAM,GAAF,GAERA,EAAI,IAAM,GAAF,GAERA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IAERA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IAERA,EAAI,IAAM,GAAF,GAERA,EAAI,EAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,IACRA,EAAI,EAAM,GAAF,GACRA,EAAI,GAAM,GAAF,IAERA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GAERA,EAAI,IAAM,GAAF,IAERA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IAERA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GAERA,EAAI,IAAM,GAAF,GAERA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IACRA,EAAI,GAAM,GAAF,GACRA,EAAI,IAAM,GAAF,IAERA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,IACRA,EAAI,GAAM,GAAF,GACRA,EAAI,GAAM,GAAF,GACX,CA/RD,CAAiBH,EAAA,EAAAA,SAAA,EAAAA,OAAM,IAgS1B,CAjSD,CAAUJ,IAAAA,EAAW,KAJG,W,iFC1MxB,6BAIA,UACA,6BAiMA,UA/LA,MACIlH,YAAoBC,EAA4BC,GAA5B,KAAAD,KAAAA,EAA4B,KAAAC,KAAAA,EA2KhD,KAAAC,eAAiB,EACjB,KAAAjB,MAAQ,IAAI,UAAakB,MAEjB,KAAAG,4BAAgF,KAGhF,KAAAC,mBAAoB,EACpB,KAAAC,aAAc,EACd,KAAAqH,OAAQ,EACR,KAAAC,qCAAsC,EAEtC,KAAAlH,wBAA0B,EAK1B,KAAAmH,YAAc,IAAI/K,MAA6B,KA1LnDnE,KAAKmP,SAAU,IAAAC,MAAKpP,KAAKoG,OACzBpG,KAAKqP,QAAS,IAAAzI,KAAI5G,KAAKoG,OACvBpG,KAAKsP,QAAS,IAAA3I,KAAI3G,KAAKoG,OAEvB,MAAMmJ,EAAW,IAAI,UAASvP,KAAKoG,OACnC,IAAK,IAAIoJ,EAAK,EAAGA,EAAK,IAAKA,IACvBxP,KAAKkP,YAAYM,GAAMD,EAASE,QAAQD,GAG5CxP,KAAKkI,OACT,CAEAA,QAkBI,OAjBAlI,KAAKoG,MAAMuC,EAAI3I,KAAKoH,KAAOpH,KAAKoH,KAAKwB,IAAI,KAAQ,EACjD5I,KAAKoG,MAAMyC,EAAI7I,KAAKoH,KAAOpH,KAAKoH,KAAKwB,IAAI,KAAQ,EACjD5I,KAAKoG,MAAM0C,EAAI9I,KAAKoH,KAAOpH,KAAKoH,KAAKwB,IAAI,KAAQ,EACjD5I,KAAKoG,MAAMU,EAAI,IACf9G,KAAKoG,MAAME,EAAItG,KAAKoH,KAAOpH,KAAKoH,KAAKwB,IAAI,OAAU,EACnD5I,KAAKoG,MAAMW,MACiC,IAAvC/G,KAAKoH,KAAOpH,KAAKoH,KAAKwB,IAAI,KAAQ,GACvC5I,KAAKoG,MAAMQ,KAAM,EACjB5G,KAAKoG,MAAMO,KAAM,EAEjB3G,KAAKqH,eAAiB,EACtBrH,KAAK0H,mBAAoB,EACzB1H,KAAK2H,aAAc,EACnB3H,KAAKgP,OAAQ,EACbhP,KAAK0P,YAAc1P,KAAKmP,QAAQjH,WAAMrE,GACtC7D,KAAK+H,wBAA0B,EAExB/H,IACX,CAEAmI,aAAatC,GAGT,OAFA7F,KAAK0H,kBAAoB7B,EAElB7F,IACX,CAEAoI,cACI,OAAOpI,KAAK0H,iBAChB,CAEAf,MAGI,OAFA3G,KAAK2H,aAAc,EAEZ3H,IACX,CAEAqI,OAGI,OAFArI,KAAKgP,OAAQ,EAENhP,IACX,CAEAsI,SAGI,OAFAtI,KAAKgP,OAAQ,EAENhP,IACX,CAEAuI,SACI,OAAOvI,KAAKgP,KAChB,CAEAxG,8BAA8B7H,GAG1B,OAFAX,KAAKyH,4BAA8B9G,EAE5BX,IACX,CAEAyI,gCACI,OAAOzI,KAAKyH,2BAChB,CAEAiB,4BACI,OAAO1I,KAAK+H,uBAChB,CAEAgB,QACI,GAAI/I,KAAKgP,SAAWhP,KAAK0P,aAA8C,IAA/B1P,KAAK0P,YAAYC,WACrD,OAAO3P,KAGX,GAA4B,IAAxBA,KAAKqH,eAEL,OADArH,KAAKkJ,SACElJ,KAGX,IAAIL,EAEJ,OAAQK,KAAK0P,YAAYC,WACrB,KAAK,EACDhQ,EAAQK,KAAKmH,KAAK6B,KAAKhJ,KAAK0P,YAAYE,SACxC,MAEJ,KAAK,EACDjQ,EAAQK,KAAK0P,YAAY/P,MACzBK,KAAKmH,KAAKN,MAAM7G,KAAK0P,YAAYE,QAASjQ,GAC1C,MAEJ,QACI,MAAM,IAAI8B,MAAM,sBAexB,OAZIzB,KAAK0P,YAAYG,iBACjB7P,KAAK8P,kBAEL9P,KAAK0P,YAAYG,gBAAiB,EAClC7P,KAAKiP,qCAAsC,GAG/CjP,KAAK0P,YAAc1P,KAAK0P,YAAYK,SAASpQ,GACpB,OAArBK,KAAK0P,cACL1P,KAAKqH,eAAiB,GAGnBrH,IACX,CAEQkJ,SAOJ,IAAIO,EANAzJ,KAAKiP,qCACLjP,KAAK8P,kBAGT9P,KAAK+H,wBAA0B/H,KAAKoG,MAAME,EAG1C,MAAMmI,EAASzO,KAAKmH,KAAK6B,KAAKhJ,KAAKoG,MAAME,GAErCtG,KAAKoG,MAAMO,KACX8C,EAAYzJ,KAAKsP,OACjBtP,KAAKiP,qCAAsC,GACpCjP,KAAKoG,MAAMQ,KAClB6C,EAAYzJ,KAAKqP,OACjBrP,KAAKiP,qCAAsC,IAE3CxF,EAAYzJ,KAAKkP,YAAYT,GAC7BzO,KAAKoG,MAAME,EAAKtG,KAAKoG,MAAME,EAAI,EAAK,MACpCtG,KAAKiP,qCAAsC,GAG1CxF,GAQLzJ,KAAKqH,eAAiB,EAEtBrH,KAAK0P,YAAcjG,EAAUvB,WAAMrE,IAT3B7D,KAAKyH,6BACLzH,KAAKyH,4BAA4BzH,KAS7C,CAEQ8P,kBAGJ,GAFA9P,KAAKoG,MAAMQ,KAAM,EAEb5G,KAAK2H,YAIL,OAHA3H,KAAKoG,MAAMO,KAAM,OACjB3G,KAAK2H,aAAc,IAKnB3H,KAAK0H,mBAAsB1H,KAAKoG,MAAMO,KAA4B,EAAnB3G,KAAKoG,MAAMW,QAC1D/G,KAAKoG,MAAMQ,KAAM,EAEzB,E,eC7KJ,SAASoJ,EAAsB5J,EAA2BC,GACtDD,EAAMU,EAAKV,EAAMU,EAAI,EAAQ,IAC7BV,EAAMW,OAA8D,IAAxB,GAA7BV,EAAI2C,KAAK,IAAS5C,EAAMU,GAC3C,CAEA,SAASmJ,EAAW7J,EAA2B8J,GAC3C9J,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVmJ,GACAA,EAAU,EAAI,EACvB,CAEA,SAAgBvG,EAAMvD,EAA2BC,EAAmB6J,GAChE,GAAkB,EAAd9J,EAAMW,MAA8B,CACpC,MAAMoJ,GAAgB,GAAVD,IAA6B,GAAV9J,EAAMuC,IAA2B,EAAdvC,EAAMW,OACpDqJ,GAAMF,IAAY,IAAM9J,EAAMuC,IAAM,IAAMwH,EAAK,EAAI,EAAI,GAE3D/J,EAAMuC,EAAIwH,EAAK,GAAMC,EAAK,IAAM,EAEhChK,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,IACdyH,EAAK,EAAI,EAAuB,E,KAClC,CACH,MAAMC,EAAMjK,EAAMuC,EAAIuH,GAAyB,EAAd9J,EAAMW,OACnCuJ,EAAe,IAAND,EAEbjK,EAAMW,OAEE,IADHX,EAAMW,MAEG,IAATuJ,GACAA,EAAS,EAAI,GACbD,IAAQ,KACLH,EAAU9J,EAAMuC,IAAM2H,EAASJ,GAAW,OAAU,EAE5D9J,EAAMuC,EAAI2H,C,CAElB,CAEA,SAAgB1G,EAAMxD,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,GAAKuH,EACXD,EAAW7J,EAAOA,EAAMuC,EAC5B,CAmTA,SAAgBuD,EAAM9F,EAA2BC,EAAmB6J,GAChE,GAAkB,EAAd9J,EAAMW,MAA8B,CACpC,MAAMoJ,GAAgB,GAAV/J,EAAMuC,IAAuB,GAAVuH,IAAkC,GAAd9J,EAAMW,OACrDqJ,GAAMhK,EAAMuC,IAAM,IAAMuH,IAAY,IAAMC,EAAK,EAAI,EAAI,GAE3D/J,EAAMuC,GAAKwH,EAAK,EAAI,GAAKA,EAAKA,IAAQC,EAAK,EAAI,GAAKA,EAAKA,IAAO,EAEhEhK,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,IACdyH,EAAK,EAAI,EAAI,E,KACf,CACHF,EAAqB,KAAVA,EAEX,MAAMG,EAAMjK,EAAMuC,EAAIuH,GAAyB,EAAd9J,EAAMW,OACnCuJ,EAAe,IAAND,EAEbjK,EAAMW,OAEE,IADHX,EAAMW,MAEG,IAATuJ,GACAA,EAAS,EAAI,GACbD,IAAQ,KACLH,EAAU9J,EAAMuC,IAAM2H,EAASJ,GAAW,OAAU,EAE5D9J,EAAMuC,EAAI2H,C,CAElB,C,+lBA9WA,UA4BA,UAKA,oBAAyBlK,GACrB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAKvC,EAAMuC,GAAK,EAAK,IAE3BvC,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACd4H,IAAQ,CACjB,EAEA,oBAAyBnK,EAA2BC,EAAmB6J,GACnE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAS4Q,GAAO,EAAK,IACzBlK,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OACa,IAAdX,EAAMW,MACE,IAARpH,GACAA,EAAQ,EAAI,GACZ4Q,IAAQ,CACjB,EAEA,iBAAsBnK,EAA2BC,EAAmB6J,GAChE9J,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVmJ,GACAA,EAAU9J,EAAMuC,EAAI,EAAI,EACjC,EAEA,iBAAsBvC,EAA2BC,GAC7C,MAAMK,EAAcN,EAAME,EAAI,EAAK,MACnC,IAAIG,EAAS,MAETL,EAAMO,MACNF,EAAS,MACTL,EAAMO,KAAM,GAGhBP,EAAMO,IAAMP,EAAMQ,KAAM,EAExBP,EAAIQ,MAAMT,EAAMU,EAAI,IAASJ,IAAe,EAAK,KACjDN,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,IAC7BT,EAAIQ,MAAMT,EAAMU,EAAI,IAAqB,IAAbJ,GAC5BN,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,IAE7BT,EAAIQ,MAAMT,EAAMU,EAAI,IAAsB,GAAdV,EAAMW,OAClCX,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,IAE7BV,EAAMW,OAAS,EAEfX,EAAME,EAAID,EAAIE,SAASE,EAC3B,EAEA,iBAAsBL,GAClBA,EAAMW,QAAS,CACnB,EAEA,iBAAsBX,GAClBA,EAAMW,QAAS,CACnB,EAEA,iBAAsBX,GAClBA,EAAMW,QAAS,CACnB,EAEA,iBAAsBX,GAClBA,EAAMW,QAAS,EACnB,EAEA,iBAAsBX,EAA2BC,EAAmB6J,GAChE,MAAMM,EAAOpK,EAAMuC,GAAgB,KAAVuH,GAAkB,EAE3C9J,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,CAClB,EAEA,iBAAsBpK,EAA2BC,EAAmB6J,GAChE,MAAMM,EAAOpK,EAAMyC,GAAgB,KAAVqH,GAAkB,EAE3C9J,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,CAClB,EAEA,iBAAsBpK,EAA2BC,EAAmB6J,GAChE,MAAMM,EAAOpK,EAAM0C,GAAgB,KAAVoH,GAAkB,EAE3C9J,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,CAClB,EAEA,iBAAsBpK,EAA2BC,EAAmB6J,GAChE,MAAMvQ,EAAS0G,EAAI2C,KAAKkH,GAAW,IAAQ,IAC3C7J,EAAIQ,MAAMqJ,EAASvQ,GACnBsQ,EAAW7J,EAAOzG,EACtB,EAEA,iBAAsByG,GAClBA,EAAMyC,EAAKzC,EAAMyC,EAAI,IAAQ,IAC7BoH,EAAW7J,EAAOA,EAAMyC,EAC5B,EAEA,iBAAsBzC,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,EAAIvC,EAAMuC,EAAIuH,EACpBD,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,GAClBA,EAAM0C,EAAK1C,EAAM0C,EAAI,IAAQ,IAC7BmH,EAAW7J,EAAOA,EAAM0C,EAC5B,EAEA,iBAAsB1C,EAA2BC,EAAmB6J,GAChE,MAAMvQ,EAAS0G,EAAI2C,KAAKkH,GAAW,EAAK,IACxC7J,EAAIQ,MAAMqJ,EAASvQ,GACnBsQ,EAAW7J,EAAOzG,EACtB,EAEA,iBAAsByG,GAClBA,EAAMyC,EAAKzC,EAAMyC,EAAI,EAAQ,IAC7BoH,EAAW7J,EAAOA,EAAMyC,EAC5B,EAEA,iBAAsBzC,GAClBA,EAAM0C,EAAK1C,EAAM0C,EAAI,EAAQ,IAC7BmH,EAAW7J,EAAOA,EAAM0C,EAC5B,EAEA,iBAAsB1C,EAA2BC,EAAmB6J,GAChE9J,EAAME,EAAI4J,CACd,EAEA,iBAAsB9J,EAA2BC,EAAmB6J,GAChE,MAAMO,EAAarK,EAAME,EAAI,EAAK,MAC9BoK,EAASrK,EAAI2C,KAAK5C,EAAME,GAE5BD,EAAI2C,KAAK,IAAS5C,EAAMU,GACxBT,EAAIQ,MAAM,IAAST,EAAMU,EAAG2J,IAAc,GAC1CrK,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,IAC7BT,EAAIQ,MAAM,IAAST,EAAMU,EAAe,IAAZ2J,GAC5BrK,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,IAE7BV,EAAME,EAAIoK,EAAUrK,EAAI2C,KAAM5C,EAAME,EAAI,EAAK,QAAW,CAC5D,EAEA,iBACIF,EACAC,EACA6J,EACA5G,GAEAlD,EAAMuC,EAAuB,IAAnBW,EAA0D4G,EAAU7J,EAAI2C,KAAKkH,GACvFD,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBACIvC,EACAC,EACA6J,EACA5G,GAEAlD,EAAMyC,EAAuB,IAAnBS,EAA0D4G,EAAU7J,EAAI2C,KAAKkH,GACvFD,EAAW7J,EAAOA,EAAMyC,EAC5B,EAEA,iBACIzC,EACAC,EACA6J,EACA5G,GAEAlD,EAAM0C,EAAuB,IAAnBQ,EAA0D4G,EAAU7J,EAAI2C,KAAKkH,GACvFD,EAAW7J,EAAOA,EAAM0C,EAC5B,EAEA,oBAAyB1C,GACrB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAIvC,EAAMuC,IAAM,EAEtBvC,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACR,EAAN4H,CACT,EAEA,oBAAyBnK,EAA2BC,EAAmB6J,GACnE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAQ4Q,IAAQ,EACpBlK,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OACa,IAAdX,EAAMW,MACE,IAARpH,GACAA,EAAQ,EAAI,GACN,EAAN4Q,CACT,EAEA,mBAA+B,EAE/B,iBAAsBnK,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,GAAKuH,EACXD,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,EAA2BC,GAC7CA,EAAIQ,MAAM,IAAST,EAAMU,EAAiB,GAAdV,EAAMW,OAClCX,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,GACjC,EAEA,iBAAsBV,EAA2BC,GAC7C2J,EAAsB5J,EAAOC,EACjC,EAEA,iBAAsBD,EAA2BC,GAC7CA,EAAIQ,MAAM,IAAST,EAAMU,EAAGV,EAAMuC,GAClCvC,EAAMU,EAAKV,EAAMU,EAAI,IAAQ,GACjC,EAEA,iBAAsBV,EAA2BC,GAC7CD,EAAMU,EAAKV,EAAMU,EAAI,EAAQ,IAC7BV,EAAMuC,EAAItC,EAAI2C,KAAK,IAAS5C,EAAMU,GAClCmJ,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,oBAAyBvC,GACrB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAMvC,EAAMuC,GAAK,EAAK,IAAuB,EAAdvC,EAAMW,MAE3CX,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACd4H,IAAQ,CACjB,EAEA,oBAAyBnK,EAA2BC,EAAmB6J,GACnE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAU4Q,GAAO,EAAK,IAAuB,EAAdnK,EAAMW,MACzCV,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OACa,IAAdX,EAAMW,MACE,IAARpH,GACAA,EAAQ,EAAI,GACZ4Q,IAAQ,CACjB,EAEA,oBAAyBnK,GACrB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAKvC,EAAMuC,IAAM,GAAqB,EAAdvC,EAAMW,QAAiC,EAErEX,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACR,EAAN4H,CACT,EAEA,oBAAyBnK,EAA2BC,EAAmB6J,GACnE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAS4Q,IAAQ,GAAqB,EAAdnK,EAAMW,QAAiC,EACnEV,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OACa,IAAdX,EAAMW,MACE,IAARpH,GACAA,EAAQ,EAAI,GACN,EAAN4Q,CACT,EAEA,iBAAsBnK,EAA2BC,GAC7C,IAAIoK,EAEJT,EAAsB5J,EAAOC,GAE7BD,EAAMU,EAAKV,EAAMU,EAAI,EAAK,IAC1B2J,EAAYpK,EAAI2C,KAAK,IAAS5C,EAAMU,GACpCV,EAAMU,EAAKV,EAAMU,EAAI,EAAK,IAC1B2J,GAAapK,EAAI2C,KAAK,IAAS5C,EAAMU,IAAM,EAE3CV,EAAME,EAAImK,CACd,EAEA,iBAAsBrK,EAA2BC,GAC7C,IAAIoK,EAEJpK,EAAI2C,KAAK,IAAS5C,EAAMU,GACxBV,EAAMU,EAAKV,EAAMU,EAAI,EAAK,IAC1B2J,EAAYpK,EAAI2C,KAAK,IAAS5C,EAAMU,GACpCV,EAAMU,EAAKV,EAAMU,EAAI,EAAK,IAC1B2J,GAAapK,EAAI2C,KAAK,IAAS5C,EAAMU,IAAM,EAE3CV,EAAME,EAAKmK,EAAY,EAAK,KAChC,EAEA,UA8BA,iBAAsBrK,GAClBA,EAAMW,OAAS,CACnB,EAEA,iBAAsBX,GAClBA,EAAMW,OAAS,CACnB,EAEA,iBAAsBX,GAClBA,EAAMW,OAAS,CACnB,EAEA,iBAAsBX,EAA2BC,EAAmB6J,GAChE7J,EAAIQ,MAAMqJ,EAAS9J,EAAMuC,EAC7B,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE7J,EAAIQ,MAAMqJ,EAAS9J,EAAMyC,EAC7B,EAEA,iBAAsBzC,EAA2BC,EAAmB6J,GAChE7J,EAAIQ,MAAMqJ,EAAS9J,EAAM0C,EAC7B,EAEA,iBAAsB1C,GAClBA,EAAMyC,EAAIzC,EAAMuC,EAChBsH,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,GAClBA,EAAM0C,EAAI1C,EAAMuC,EAChBsH,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,GAClBA,EAAMyC,EAAIzC,EAAMU,EAChBmJ,EAAW7J,EAAOA,EAAMyC,EAC5B,EAEA,iBAAsBzC,GAClBA,EAAMuC,EAAIvC,EAAMyC,EAChBoH,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,GAClBA,EAAMU,EAAIV,EAAMyC,CACpB,EAEA,iBAAsBzC,GAClBA,EAAMuC,EAAIvC,EAAM0C,EAChBmH,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE,MAAMrK,EAAIO,EAAMuC,EAAIuH,EACpB9J,EAAMuC,EAAI9C,IAAM,EAEhBO,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACV,EAAJ9C,CACT,EAEA,iBAAsBO,EAA2BC,EAAmB6J,GAChE,MAAMvQ,GAASyG,EAAMuC,EAAIvC,EAAMyC,IAAiB,KAAVqH,GAAkB,EAExD9J,EAAMyC,EAAY,IAARlJ,EAEVyG,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMyC,GACI,IAAVzC,EAAMyC,EAAW,EAAI,GACrBlJ,IAAU,CACnB,EAEA,iBAAsByG,EAA2BC,EAAmB6J,GAChE,MAAMvQ,EAAS0G,EAAI2C,KAAKkH,GAAW,IAAQ,IAC3C7J,EAAIQ,MAAMqJ,EAASvQ,GAEnB,MAAM6Q,EAAOpK,EAAMuC,GAAc,KAARhJ,GAAgB,EAEzCyG,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,CAClB,EAEA,iBAAsBpK,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,EAAIuH,EACV9J,EAAMyC,EAAIqH,EACVD,EAAW7J,EAAO8J,EACtB,EAEA,iBAAsB9J,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,GAAMvC,EAAMuC,EAAIuH,KAAa,GAAoB,EAAd9J,EAAMW,MAA+B,IAAO,GAErFX,EAAMW,OACa,IAAdX,EAAMW,OACK,GAAVX,EAAMuC,KAAc,GACrBvC,EAAMuC,EAAI,EAAI,GACJ,IAAVvC,EAAMuC,EACK,GAAVvC,EAAMuC,GAAwB,GAAVvC,EAAMuC,IAAa,CACjD,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE,IAAIvQ,EAAQ0G,EAAI2C,KAAKkH,GACrB9J,EAAMW,OAAuB,EAAdX,EAAMW,MAAkCpH,IAAU,EACjEA,EAASA,GAAS,EAAK,IAEvB0G,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMuC,EAAIvC,EAAMuC,EAAIhJ,EACpBsQ,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE,MAAMvQ,EAAQyG,EAAMyC,EAAIzC,EAAMuC,EAC9BtC,EAAIQ,MAAMqJ,EAASvQ,GACnBsQ,EAAW7J,EAAOzG,EACtB,EAEA,iBAAsByG,EAA2BC,EAAmB6J,GAChE9J,EAAMU,EAAIV,EAAMuC,EAAIvC,EAAMyC,EAAIzC,EAAMU,EAAIoJ,EACxCD,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE,MAAMvQ,EAAS0G,EAAI2C,KAAKkH,GAAW,EAAK,IACxC7J,EAAIQ,MAAMqJ,EAASvQ,GAEnBuM,EAAM9F,EAAOC,EAAK1G,EACtB,EAEA,iBAAsByG,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,GAAKuH,EACXD,EAAW7J,EAAOA,EAAMuC,GACxBvC,EAAMW,OAAuB,EAAdX,EAAMW,OAA6C,IAAVX,EAAMuC,KAAc,CAChF,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE9J,EAAMuC,GAAKuH,EACX9J,EAAMyC,EAAIzC,EAAMuC,EAChBsH,EAAW7J,EAAOA,EAAMuC,EAC5B,EAEA,iBAAsBvC,EAA2BC,EAAmB6J,GAChE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAS4Q,IAAQ,GAAqB,EAAdnK,EAAMW,QAAiC,EACnEV,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OAAuB,EAAdX,EAAMW,MAAwC,EAANwJ,EAEvD5G,EAAMvD,EAAOC,EAAK1G,EACtB,EAEA,iBAAsByG,EAA2BC,EAAmB6J,GAChE,MAAMK,EAAMlK,EAAI2C,KAAKkH,GACjBvQ,EAAU4Q,GAAO,EAAK,IAAuB,EAAdnK,EAAMW,MACzCV,EAAIQ,MAAMqJ,EAASvQ,GAEnByG,EAAMW,OAAuB,EAAdX,EAAMW,MAAkCwJ,IAAQ,EAE/D3G,EAAMxD,EAAOC,EAAK1G,EACtB,C,iFCniBA,4BACA,UAYA,UACA,0BACA,SAEA,UA2ZA,UAzZA,MACIuH,YAA6ByJ,GAAA,KAAAA,OAAAA,CAA6B,CAE1DlB,QAAQD,GACJ,MAAMrG,EAAc,UAAYC,QAAQoG,GAExC,OAAQrG,EAAYM,WAChB,KAAK,EACD,OAAOzJ,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAImH,IAAK,CAC/DC,OAAO,IAGf,KAAK,EACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMuC,EAAIvC,EAAMuC,EAAIuH,KACtE,CACIY,OAAO,IAInB,KAAK,EACD,OAAsC,IAA/B3H,EAAYG,gBACb,IAAA2H,iBAAgBjR,KAAK2Q,OAAQjH,EAAIwH,cACjClR,KAAK4Q,kBACDzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAI0H,QAAQlJ,MACzC,CAAEmJ,SAAS,IAGzB,KAAK,EACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAI4H,IAAK,CAC/DR,OAAO,IAGf,KAAK,GACD,OAAO,IAAAS,KAAIvR,KAAK2Q,QAEpB,KAAK,GACD,OAAO3Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,KAAO4C,EAAI8H,IAAIT,EAAGjK,GAAGV,GAASA,EAAMuC,IAAI,OAC5C,CACImI,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,KAAO4C,EAAI8H,IAAIT,EAAGjK,GAAGV,GAASA,EAAMyC,IAAI,OAC5C,CACIiI,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,KAAO4C,EAAI8H,IAAIT,EAAGjK,GAAGV,GAASA,EAAM0C,IAAI,OAC5C,CACIgI,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,QAAQ,CAAC7J,EAAGiK,IAAMrH,EAAI+H,OAAO3K,EAAGiK,GAAGlI,GAAMA,EAAI,EAAK,QAAOX,MAC9E,CACImJ,SAAS,IAIrB,KAAK,GACD,OAAO,IAAAJ,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMyC,EAAKzC,EAAMyC,EAAI,EAAK,QAEnG,KAAK,GACD,OAAO,IAAAoI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAM0C,EAAK1C,EAAM0C,EAAI,EAAK,QAEnG,KAAK,GACD,OAAO9I,KAAK4Q,kBACRzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,QAAQ,CAAC7J,EAAGiK,IAAMrH,EAAI+H,OAAO3K,EAAGiK,GAAGlI,GAAMA,EAAI,EAAK,QAAOX,MAC9E,CACImJ,SAAS,IAIrB,KAAK,GACD,OAAO,IAAAJ,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMyC,EAAKzC,EAAMyC,EAAI,EAAK,QAEnG,KAAK,GACD,OAAO,IAAAoI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAM0C,EAAK1C,EAAM0C,EAAI,EAAK,QAEnG,KAAK,GACD,OAAO9I,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMuC,EAAIvC,EAAMuC,EAAIuH,KACtE,CACIY,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,CAACyH,EAAGjK,KAAQA,EAAER,EAAIyK,EAAI,QAEpF,KAAK,GACD,OAAO,IAAAY,KAAI3R,KAAK2Q,QAEpB,KAAK,GACD,OAAO3Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMuC,EAAIuH,KAC5D,CACIY,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMyC,EAAIqH,KAC5D,CACIY,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAM0C,EAAIoH,KAC5D,CACIY,OAAO,IAInB,KAAK,GACD,OAAsC,IAA/B3H,EAAYG,gBACb,IAAA2H,iBAAgBjR,KAAK2Q,OAAQjH,EAAIkI,cACjC5R,KAAK4Q,kBACDzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAImI,QAAQ3J,MACzC,CAAEmJ,SAAS,IAGzB,KAAK,GACD,OAAO,IAAAJ,iBAAgBjR,KAAK2Q,QAAQ,KAAe,IAEvD,KAAK,GACD,OAAO3Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMuC,GAAKuH,KAC7D,CAAEY,OAAO,IAGjB,KAAK,GACD,OAAO,IAAAhP,MAAK9B,KAAK2Q,QAAQ7J,GAAKA,EAAE6B,IAEpC,KAAK,GACD,OAAO,IAAA7G,MAAK9B,KAAK2Q,QAAQ7J,GAAe,GAAVA,EAAEC,QAEpC,KAAK,GACD,OAAO,IAAA+K,MAAK9R,KAAK2Q,QAAQ,CAAC7J,EAAGiK,IAAMrH,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMuC,EAAIoI,MAE7E,KAAK,GACD,OAAO,IAAAe,MAAK9R,KAAK2Q,QAAQ,CAAC7J,EAAGiK,IAAOjK,EAAEC,OAAqC,IAAxB,GAAJgK,KAEnD,KAAK,GACD,OAAsC,IAA/B5H,EAAYG,gBACb,IAAA2H,iBAAgBjR,KAAK2Q,OAAQjH,EAAIqI,cACjC/R,KAAK4Q,kBACDzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIsI,QAAQ9J,MACzC,CAAEmJ,SAAS,IAGzB,KAAK,GACD,OAAsC,IAA/BlI,EAAYG,gBACb,IAAA2H,iBAAgBjR,KAAK2Q,OAAQjH,EAAIuI,cACjCjS,KAAK4Q,kBACDzH,EAAYG,gBACZ,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIwI,QAAQhK,MACzC,CAAEmJ,SAAS,IAGzB,KAAK,GACD,OAAO,IAAAc,KAAInS,KAAK2Q,QAEpB,KAAK,GACD,OAAO,IAAAyB,KAAIpS,KAAK2Q,QAEpB,KAAK,GACD,OAAO3Q,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAI2I,IAAK,CAC/DvB,OAAO,IAGf,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAAzC,OAAM7G,KAAK2Q,QAAQ7J,GAAKA,EAAE+B,IAAGX,MAAO,CAC1FmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAAzC,OAAM7G,KAAK2Q,QAAQ7J,GAAKA,EAAEgC,IAAGZ,MAAO,CAC1FmJ,SAAS,IAGjB,KAAK,GACD,OAAO,IAAAJ,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMyC,EAAIzC,EAAMuC,MAEzF,KAAK,GACD,OAAO,IAAAsI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAM0C,EAAI1C,EAAMuC,MAEzF,KAAK,GACD,OAAO,IAAAsI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMyC,EAAIzC,EAAMU,MAEzF,KAAK,GACD,OAAO,IAAAmK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMuC,EAAIvC,EAAMyC,MAEzF,KAAK,GACD,OAAO,IAAAoI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEA,EAAIA,EAAE+B,IAEtD,KAAK,GACD,OAAO,IAAAoI,iBAAgBjR,KAAK2Q,QAAQ7J,GAAK4C,EAAIgI,WAAW5K,GAAGV,GAAUA,EAAMuC,EAAIvC,EAAM0C,MAIzF,KAAK,EACD,OAAO,IAAAwJ,QAAOtS,KAAK2Q,QAAQ5J,GAA4C,IAA1B,EAARA,KAEzC,KAAK,EACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,IAAkB,EAARA,GAAgC,IAEzE,KAAK,EACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,GAA4C,IAA1B,EAARA,KAEzC,KAAK,EACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,IAAkB,EAARA,GAAgC,IAEzE,KAAK,EACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,GAA4C,IAA1B,IAARA,KAEzC,KAAK,EACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,IAAkB,IAARA,GAAgC,IAEzE,KAAK,GACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,GAA4C,IAA1B,GAARA,KAEzC,KAAK,GACD,OAAO,IAAAuL,QAAOtS,KAAK2Q,QAAQ5J,IAAkB,GAARA,GAAgC,IAIzE,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,OAAS,IAEzD,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,OAAS,IAEzD,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,OAAS,IAEzD,KAAK,GACD,OAAO/G,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAAzC,OAAM7G,KAAK2Q,QAAQ7J,GAAKA,EAAE6B,IAAGT,MAAO,CAC1FmJ,SAAS,IAGjB,KAAK,GACD,OAAO,IAAAJ,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,QAAS,IAEzD,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,QAAS,IAEzD,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,QAAS,IAEzD,KAAK,GACD,OAAO,IAAAkK,iBAAgBjR,KAAK2Q,QAAQ7J,GAAMA,EAAEC,QAAS,KAIzD,KAAK,GACL,KAAK,GACD,OAAO/G,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAM,MAAM,CAAEwH,OAAO,IAEnF,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAI6I,KAElE,KAAK,GACD,OAAOvS,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAAzC,OAAM7G,KAAK2Q,OAAQjH,EAAI8I,KAAKtK,MAAO,CACzFmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAI+I,IAAK,CAC/D3B,OAAO,IAGf,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,CAACyH,EAAGjK,KAAO4C,EAAIgJ,IAAI3B,EAAGjK,GAAI,OAAO,CACvFgK,OAAO,IAGf,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,eAAgBI,EAAIiJ,IAAK,CAC/D7B,OAAO,IAGf,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMyC,EAAIzC,EAAMuC,EAAIvC,EAAMuC,EAAIuH,KAChF,CACIY,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIkJ,KAAK1K,MAAO,CACnGmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAImJ,KAAK3K,MAAO,CACnGmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMuC,EAAIvC,EAAMyC,EAAIqH,KACtE,CACIY,OAAO,IAInB,KAAK,GACD,OAAO9Q,KAAK4Q,kBACRzH,EAAYG,gBACZ,CAACyH,EAAGjK,IAAM4C,EAAIsH,SAASD,EAAGjK,GAAG,CAACoJ,EAAS9J,IAAWA,EAAMU,EAAIV,EAAMyC,EAAIzC,EAAMuC,EAAIvC,EAAMU,EAAIoJ,KAC1F,CAAEY,OAAO,IAGjB,KAAK,GACD,OAAO9Q,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIoJ,KAAK5K,MAAO,CACnGmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIqJ,KAAK7K,MAAO,CACnGmJ,SAAS,IAGjB,KAAK,GACD,OAAOrR,KAAK4Q,kBAAkBzH,EAAYG,gBAAgB,IAAA6H,iBAAgBnR,KAAK2Q,OAAQjH,EAAIsJ,KAAK9K,MAAO,CACnGmJ,SAAS,IAGjB,QACI,OAAO,KAEnB,CAEQT,kBACJtH,EACA2J,GACA,MAAEnC,GAAQ,EAAK,QAAEO,GAAU,GAAU,CAAC,GAMtC,OAJIP,GAA4B,IAAnBxH,IACT2J,GAAO,IAAA1J,aAAYvJ,KAAK2Q,OAAQsC,GAAM/K,OAGlCoB,GACJ,KAAK,EACD,OAAO,IAAA4J,WAAUlT,KAAK2Q,OAAQsC,GAElC,KAAK,EACD,OAAO,IAAAE,UAASnT,KAAK2Q,OAAQsC,GAEjC,KAAK,EACD,OAAO,IAAAG,UAASpT,KAAK2Q,OAAQsC,GAEjC,KAAK,EACD,OAAO,IAAAI,WAAUrT,KAAK2Q,OAAQsC,GAElC,KAAK,EACD,OAAO,IAAAK,WAAUtT,KAAK2Q,OAAQsC,GAElC,KAAK,EACD,OAAO,IAAAM,WAAUvT,KAAK2Q,OAAQsC,EAAM5B,GAExC,KAAK,GACD,OAAO,IAAAmC,WAAUxT,KAAK2Q,OAAQsC,EAAM5B,GAExC,KAAK,EACD,OAAO,IAAAoC,kBAAiBzT,KAAK2Q,OAAQsC,GAEzC,KAAK,GACD,OAAO,IAAAS,kBAAiB1T,KAAK2Q,OAAQsC,EAAM5B,GAE/C,KAAK,EACD,OAAO,IAAAsC,UAAS3T,KAAK2Q,OAAQsC,GAEjC,QACI,MAAM,IAAIxR,MAAM,2BAA2B6H,KAEvD,E,gECxYJ,UAjCA,MACIpC,cAyBA,KAAAyI,UAAY,EACZ,KAAAC,QAAU,EACV,KAAAjQ,MAAQ,EACR,KAAAkQ,gBAAiB,EACjB,KAAAE,SAAuC,IA7BxB,CAEf/G,KAAK+G,EAAsCH,GAKvC,OAJA5P,KAAK2P,UAAY,EACjB3P,KAAK4P,QAAUA,EACf5P,KAAK+P,SAAWA,EAET/P,IACX,CAEA6G,MAAMkJ,EAAsCH,EAAiBjQ,GAMzD,OALAK,KAAK2P,UAAY,EACjB3P,KAAK4P,QAAUA,EACf5P,KAAKL,MAAQA,EACbK,KAAK+P,SAAWA,EAET/P,IACX,CAEA4T,KAAKA,GAGD,OAFA5T,KAAK6P,eAAiB+D,EAEf5T,IACX,E,mGC1BJ,6BACA,6BAEA,UAGA,MAAM6T,EACF3M,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+T,SAAU/T,KAAK2Q,OAAOrK,GAG5F,KAAAyN,SAAYpU,IAChBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKgU,SAAUhU,KAAK2Q,OAAOrK,IAIhD,KAAA0N,SAAYrU,IAChBK,KAAK8H,UAAYnI,GAAS,EAC1BK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EAES,KAAAgM,QAAU,IAAI,UA1BtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,mEAQD,cAAC,EAAAA,U,mEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAAf,SAAW,CAAChN,EAA2B6M,IAAmB,IAAIY,EAASzN,EAAO6M,E,+GCxC3F,6BACA,6BAGA,UAGA,MAAMmB,EACF,YACIhO,EACAiO,EACApB,EAAiB,KAAM,MACvB5B,GAAU,GAoBH,KAAAnJ,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+T,SAAU/T,KAAK2Q,OAAOrK,GAG5F,KAAAyN,SAAYpU,IAChBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKgU,SAAUhU,KAAK2Q,OAAOrK,IAIhD,KAAA0N,SAAYrU,IAChBK,KAAK8H,UAAYnI,GAAS,EAC1BK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAEtC,MAAMgO,EAAQtU,KAAKuU,gBAAgBvU,KAAK2Q,QAIxC,OAHA3Q,KAAKwU,QAA0B,IAAhBxU,KAAK8H,UAAmBwM,EAAQ,IAC/CtU,KAAK8H,SAA4B,MAAhB9H,KAAK8H,SAAuB9H,KAAK8H,SAAWwM,EAAS,IAE/DtU,KAAKwU,QAAUxU,KAAKyU,SACrBzU,KAAK8T,QAAQ9K,KAAKhJ,KAAK0U,qBAAsB1U,KAAK8H,UAClD9H,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,OAAO,EAIxC,KAAA+D,qBAAwB/U,IACxBK,KAAKwU,SACLxU,KAAK8H,SAAY9H,KAAK8H,SAAW,IAAU,OAGxC9H,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EACX,KAAA0M,QAAS,EAEW,KAAAV,QAAU,IAAI,UAtDtC9T,KAAK2Q,OAASvK,EACdpG,KAAKuU,gBAAkBF,EACvBrU,KAAKiU,MAAQhB,EACbjT,KAAKyU,SAAWpD,GAEhB,IAAA6C,kBAAiBlU,KACrB,CAGO,iBAAUoG,EAA2B6M,EAAgB5B,GACxD,OAAO,IAAI+C,EAAgBhO,GAAOU,GAAKA,EAAE+B,GAAGoK,EAAM5B,EACtD,CAGO,iBAAUjL,EAA2B6M,EAAgB5B,GACxD,OAAO,IAAI+C,EAAgBhO,GAAOU,GAAKA,EAAEgC,GAAGmK,EAAM5B,EACtD,EAEA,cAAC,EAAA8C,U,gEAED,cAAC,EAAAA,U,mEAQD,cAAC,EAAAA,U,mEAcD,cAAC,EAAAA,U,+EAYD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,4EACD,cAAC,EAAAA,U,kEACD,cAAC,EAAAA,U,oEAlDM,cADN,EAAAA,U,uEACuB,UAAa7M,MAAO,SAAF,U,iCAAqC8M,I,oBAKxE,cADN,EAAAD,U,uEACuB,UAAa7M,MAAO,SAAF,U,iCAAqC8M,I,oBAsDtE,EAAAb,UAAY,CAACnN,EAA2B6M,EAAgB5B,IACjE+C,EAAgBb,UAAUnN,EAAO6M,EAAM5B,GAE9B,EAAAmC,UAAY,CAACpN,EAA2B6M,EAAgB5B,IACjE+C,EAAgBZ,UAAUpN,EAAO6M,EAAM5B,E,sGCrF3C,6BACA,UAEA,6BAEA,MAAMsD,EACFzN,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAASgI,GAAkDlQ,KAAK8T,QAAQ9K,KAAKhJ,KAAKiI,aAAciI,GAGnG,KAAAjI,aAAgBtI,GAAuDK,KAAKiU,MAAMtU,EAAOK,KAAK2Q,QAE1E,KAAAmD,QAAU,IAAI,UAXtC9T,KAAKiU,MAAQhB,EACbjT,KAAK2Q,OAASvK,GAEd,IAAA8N,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,uEAGD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAA5K,YAAc,CAACnD,EAA2B6M,IAAmB,IAAI0B,EAAYvO,EAAO6M,E,oGCzBjG,6BAEA,6BACA,UAGA,MAAM2B,EACF1N,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK6U,cAAe7U,KAAK2Q,OAAOrK,GAGjG,KAAAuO,cAAiBlV,IACrBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EAES,KAAAgM,QAAU,IAAI,UAlBtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,wEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAAjB,UAAY,CAAC9M,EAA2B6M,IAAmB,IAAI2B,EAAUxO,EAAO6M,E,+MChC7F,cAAS,0EAAAG,QAAQ,IACjB,aAAS,2EAAAG,SAAS,IAAE,2EAAAC,SAAS,IAC7B,cAAS,6EAAAjK,WAAW,IACpB,cAAS,2EAAA2J,SAAS,IAClB,cAAS,kFAAAO,gBAAgB,IACzB,cAAS,kFAAAC,gBAAgB,IACzB,cAAS,0EAAAP,QAAQ,IACjB,cAAS,2EAAAE,SAAS,IAAE,2EAAAC,SAAS,G,2GCP7B,6BACA,6BAEA,UAGA,MAAMwB,EACF5N,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+U,cAAe/U,KAAK2Q,OAAOrK,GAGjG,KAAAyO,cAAiBpV,IACrBK,KAAKgV,SAAWrV,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKiV,UAAWjV,KAAKgV,WAI1C,KAAAC,UAAatV,IACjBK,KAAKgV,SAAYhV,KAAKgV,SAAWhV,KAAK2Q,OAAO9H,EAAK,IAE3C7I,KAAK8T,QAAQ9K,KAAKhJ,KAAK+T,SAAU/T,KAAKgV,WAIzC,KAAAjB,SAAYpU,IAChBK,KAAK8H,SAAWnI,EAChBK,KAAKgV,SAAYhV,KAAKgV,SAAW,EAAK,IAE/BhV,KAAK8T,QAAQ9K,KAAKhJ,KAAKgU,SAAUhU,KAAKgV,WAIzC,KAAAhB,SAAYrU,IAChBK,KAAK8H,UAAYnI,GAAS,EAEnBK,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EACX,KAAAkN,SAAW,EAES,KAAAlB,QAAU,IAAI,UAzCtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,wEAQD,cAAC,EAAAA,U,oEAOD,cAAC,EAAAA,U,mEAQD,cAAC,EAAAA,U,mEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAAV,iBAAmB,CAACrN,EAA2B6M,IAAmB,IAAI6B,EAAiB1O,EAAO6M,E,kGCvD3G,6BACA,6BAEA,UAGA,MAAMiC,EACFhO,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAKmV,gBAAiBnV,KAAK2Q,OAAOrK,GAGnG,KAAA6O,gBAAmBxV,IACvBK,KAAKgV,SAAWrV,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKoV,gBAAiBpV,KAAK2Q,OAAOrK,IAIvD,KAAA8O,gBAAmBzV,IACvBK,KAAKgV,UAAYrV,GAAS,EAC1BK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAK+T,SAAU/T,KAAKgV,WAIzC,KAAAjB,SAAYpU,IAChBK,KAAK8H,SAAWnI,EAEe,MAAV,IAAhBK,KAAKgV,UACNhV,KAAKgV,UAAY,MAEjBhV,KAAKgV,SAAYhV,KAAKgV,SAAW,EAAK,MAGnChV,KAAK8T,QAAQ9K,KAAKhJ,KAAKgU,SAAUhU,KAAKgV,WAIzC,KAAAhB,SAAYrU,IAChBK,KAAK8H,UAAYnI,GAAS,EAEnBK,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EACX,KAAAkN,SAAW,EAES,KAAAlB,QAAU,IAAI,UA/CtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,0EAQD,cAAC,EAAAA,U,0EAQD,cAAC,EAAAA,U,mEAaD,cAAC,EAAAA,U,mEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAAR,SAAW,CAACvN,EAA2B6M,IAAmB,IAAIiC,EAAS9O,EAAO6M,E,2GC7D3F,6BACA,6BAEA,UAGA,MAAMoC,EACFnO,YAAYd,EAA2B6M,EAAiB,KAAM,MAAM5B,GAQzD,KAAAnJ,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+U,cAAe/U,KAAK2Q,OAAOrK,GAGjG,KAAAyO,cAAiBpV,IACrBK,KAAKgV,SAAWrV,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAK+T,SAAU/T,KAAKgV,WAIzC,KAAAjB,SAAYpU,IAChBK,KAAK8H,SAAWnI,EAChBK,KAAKgV,SAAYhV,KAAKgV,SAAW,EAAK,IAE/BhV,KAAK8T,QAAQ9K,KAAKhJ,KAAKgU,SAAUhU,KAAKgV,WAIzC,KAAAhB,SAAYrU,IAChBK,KAAK8H,UAAYnI,GAAS,EAE1BK,KAAKwU,QAA0B,IAAhBxU,KAAK8H,UAAmB9H,KAAK2Q,OAAO7H,EAAI,IACvD9I,KAAK8H,SAA4B,MAAhB9H,KAAK8H,SAAuB9H,KAAK8H,SAAW9H,KAAK2Q,OAAO7H,EAAK,IAEvE9I,KAAKwU,QAAUxU,KAAKyU,SACrBzU,KAAK8T,QAAQ9K,KAAKhJ,KAAK0U,qBAAsB1U,KAAK8H,UAClD9H,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAIjC,KAAA+D,qBAAwB/U,IACxBK,KAAKwU,SACLxU,KAAK8H,SAAY9H,KAAK8H,SAAW,IAAU,OAGxC9H,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EACX,KAAAkN,SAAW,EACX,KAAAR,QAAS,EAEW,KAAAV,QAAU,IAAI,UAlDtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,EACbjT,KAAKyU,SAAWpD,GAEhB,IAAA6C,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,wEAQD,cAAC,EAAAA,U,mEAQD,cAAC,EAAAA,U,mEAYD,cAAC,EAAAA,U,+EAaD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEACD,cAAC,EAAAA,U,oEAGQ,EAAAT,iBAAmB,CAACtN,EAA2B6M,EAAgB5B,IACxE,IAAIgE,EAAiBjP,EAAO6M,EAAM5B,E,mGClEtC,6BACA,6BAEA,UAGA,MAAMiE,EACFpO,YAAYd,EAA2B6M,EAAiB,KAAM,OAOnD,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+U,cAAe/U,KAAK2Q,OAAOrK,GAGjG,KAAAyO,cAAiBpV,IACrBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EAES,KAAAgM,QAAU,IAAI,UAlBtC9T,KAAK2Q,OAASvK,EACdpG,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,wEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEAGQ,EAAAhB,SAAW,CAAC/M,EAA2B6M,IAAmB,IAAIqC,EAASlP,EAAO6M,E,gHChC3F,6BACA,6BAEA,UAGA,MAAMsC,EACF,YAAoBnP,EAA2BiO,EAAgDpB,GAgBpF,KAAA/K,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK+U,cAAe/U,KAAK2Q,OAAOrK,GAGjG,KAAAyO,cAAiBpV,IACrBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKiV,UAAWjV,KAAK8H,WAI1C,KAAAmN,UAAatV,IACjBK,KAAK8H,SAAY9H,KAAK8H,SAAW9H,KAAKuU,gBAAgBvU,KAAK2Q,QAAW,IAE/D3Q,KAAKiU,MAAMjU,KAAK8H,SAAU9H,KAAK2Q,SAGlC,KAAA7I,SAAW,EAES,KAAAgM,QAAU,IAAI,UAlCtC9T,KAAK2Q,OAASvK,EACdpG,KAAKuU,gBAAkBF,EACvBrU,KAAKiU,MAAQhB,GAEb,IAAAiB,kBAAiBlU,KACrB,CAEAwV,iBAAiBpP,EAA2B6M,EAAiB,KAAM,OAC/D,OAAO,IAAIsC,EAAgBnP,GAAOU,GAAKA,EAAE+B,GAAGoK,EAChD,CAEAuC,iBAAiBpP,EAA2B6M,EAAiB,KAAM,OAC/D,OAAO,IAAIsC,EAAgBnP,GAAOU,GAAKA,EAAEgC,GAAGmK,EAChD,EAEA,cAAC,EAAAkB,U,gEAED,cAAC,EAAAA,U,wEAQD,cAAC,EAAAA,U,oEASD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,kEACD,cAAC,EAAAA,U,4EASQ,EAAAd,UAAY,CAACjN,EAA2B6M,IAAmBsC,EAAgBlC,UAAUjN,EAAO6M,GAE5F,EAAAK,UAAY,CAAClN,EAA2B6M,IAAmBsC,EAAgBjC,UAAUlN,EAAO6M,E,gGCxDzG,6BACA,6BACA,UAEA,MAAMwC,EACFvO,YAAYd,EAA2BsP,GAQvC,KAAAxN,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK2V,aAAc3V,KAAK2Q,OAAOrK,GAAGsN,MAAK,GAG7F,KAAA+B,aAAgBhW,IACpBK,KAAK8H,SAAWnI,EAChBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK4V,WAAW5V,KAAK2Q,OAAO5J,OAAS/G,KAAK8T,QAAQ9K,KAAKhJ,KAAK6V,gBAAiB7V,KAAK2Q,OAAOrK,GAAK,MAIjG,KAAAuP,gBAAmBlW,IACvBK,KAAK8V,QAAW9V,KAAK2Q,OAAOrK,GAAqB,IAAhBtG,KAAK8H,SAAkB9H,KAAK8H,SAAW,IAAM9H,KAAK8H,UAAa,OAE5E,MAAf9H,KAAK8V,WAAuC,MAAhB9V,KAAK2Q,OAAOrK,IACzCtG,KAAK2Q,OAAOrK,EAAItG,KAAK8V,QACd,MAGJ9V,KAAK8T,QAAQ9K,KAAKhJ,KAAK+V,iBAAmC,MAAhB/V,KAAK2Q,OAAOrK,EAA8B,IAAftG,KAAK8V,SAAmBlC,MAAK,IAIrG,KAAAmC,iBAAoBpW,IACxBK,KAAK2Q,OAAOrK,EAAItG,KAAK8V,QACd,MAGH,KAAAA,QAAU,EACV,KAAAhO,SAAW,EAES,KAAAgM,QAAU,IAAI,UAtCtC9T,KAAK2Q,OAASvK,EACdpG,KAAK4V,WAAaF,GAElB,IAAAxB,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAGD,cAAC,EAAAA,U,uEAQD,cAAC,EAAAA,U,0EAYD,cAAC,EAAAA,U,2EASD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAA7B,OAAS,CAAClM,EAA2BsP,IAAgC,IAAID,EAAOrP,EAAOsP,E,8JCzDpG,aAAS,wEAAApD,MAAM,IACf,cAAS,qEAAAX,GAAG,IACZ,cAAS,iFAAAR,eAAe,IACxB,cAAS,qEAAAiB,GAAG,IACZ,cAAS,iFAAAnB,eAAe,IACxB,aAAS,sEAAAa,IAAI,IACb,cAAS,sEAAAhQ,IAAI,IACb,aAAS,qEAAAqQ,GAAG,IACZ,cAAS,uEAAAtL,KAAK,G,8FCPd,6BACA,6BACA,UAEA,MAAMmP,EACF9O,YAAYd,GAMZ,KAAA8B,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAKiW,UAAWjW,KAAK2Q,OAAOrK,GAGlF,KAAA2P,UAAatW,IACjBK,KAAKkW,WAAavW,EAClBK,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/BtG,KAAK8T,QAAQ9K,KAAKhJ,KAAKmW,gBAAiB,IAASnW,KAAK2Q,OAAO7J,IAIhE,KAAAqP,gBAAkB,IACtBnW,KAAK8T,QAAQjN,MAAM7G,KAAKoW,SAAU,IAASpW,KAAK2Q,OAAO7J,EAAG9G,KAAK2Q,OAAOrK,IAAM,GAGxE,KAAA8P,SAAW,KACfpW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQjN,MAAM7G,KAAKqW,SAAU,IAASrW,KAAK2Q,OAAO7J,EAAmB,IAAhB9G,KAAK2Q,OAAOrK,IAIzE,KAAA+P,SAAW,KACfrW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKsW,UAAWtW,KAAK2Q,OAAOrK,IAIjD,KAAAgQ,UAAa3W,IACjBK,KAAK2Q,OAAOrK,EAAItG,KAAKkW,WAAcvW,GAAS,EAErC,MAGH,KAAAuW,WAAa,EAEO,KAAApC,QAAU,IAAI,UA1CtC9T,KAAK2Q,OAASvK,GAEd,IAAA8N,kBAAiBlU,KACrB,EAIA,cAAC,EAAAmU,U,oEAQD,cAAC,EAAAA,U,0EAID,cAAC,EAAAA,U,mEAOD,cAAC,EAAAA,U,mEAOD,cAAC,EAAAA,U,oEASD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BAGxC,EAAAqK,IAAOvL,GAA8B,IAAI4P,EAAI5P,E,0GCrD1D,6BACA,6BACA,UAEA,MAAMmQ,EACFrP,YAAYd,EAA2BqD,GAO5B,KAAAvB,MAAQ,IAAMlI,KAAK8T,QAAQ9K,KAAKhJ,KAAKwW,kBAAmBxW,KAAK2Q,OAAOrK,GAAGsN,MAAK,GAG/E,KAAA4C,kBAAoB,KACxBxW,KAAK6O,WAAW7O,KAAK2Q,QAEd,MAGiB,KAAAmD,QAAU,IAAI,UAftC9T,KAAK2Q,OAASvK,EACdpG,KAAK6O,WAAapF,GAElB,IAAAyK,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,4EAOD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAAlD,gBAAkB,CAAC7K,EAA2BqD,IACvD,IAAI8M,EAAgBnQ,EAAOqD,E,8FCnC/B,UAEA,6BACA,6BAEA,MAAMgN,EACFvP,YAAYd,EAA2BqD,GAO5B,KAAAvB,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK0W,WAAY1W,KAAK2Q,OAAOrK,GAAGsN,MAAK,GAGtG,KAAA8C,WAAa,IACjB1W,KAAK8T,QAAQ9K,KAAKhJ,KAAK2W,YAAa,IAAS3W,KAAK2Q,OAAO7J,GAGrD,KAAA6P,YAAc,KAClB3W,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAK4W,MAAO,IAAS5W,KAAK2Q,OAAO7J,IAG3C,KAAA8P,MAASjX,IAAyBK,KAAK6O,WAAW7O,KAAK2Q,OAAQhR,GAAQ,MAE9D,KAAAmU,QAAU,IAAI,UArBtC9T,KAAK2Q,OAASvK,EACdpG,KAAK6O,WAAapF,GAElB,IAAAyK,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,qEAID,cAAC,EAAAA,U,sEAOD,cAAC,EAAAA,U,gEAED,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAArC,KAAO,CAAC1L,EAA2BqD,IAA8B,IAAIgN,EAAKrQ,EAAOqD,E,+FCxC9F,UACA,6BAEA,6BAEA,MAAMoN,EACF3P,YAAYd,EAA2BqD,GAO5B,KAAAvB,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK0W,WAAY1W,KAAK2Q,OAAOrK,GAG9F,KAAAoQ,WAAa,IACjB1W,KAAK8T,QAAQjN,MAAM7G,KAAK8W,MAAO,IAAS9W,KAAK2Q,OAAO7J,EAAG9G,KAAK6O,WAAW7O,KAAK2Q,SAGxE,KAAAmG,MAAQ,KACZ9W,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B,MAGiB,KAAAgN,QAAU,IAAI,UAnBtC9T,KAAK2Q,OAASvK,EACdpG,KAAK6O,WAAapF,GAElB,IAAAyK,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,qEAID,cAAC,EAAAA,U,gEAOD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAArS,KAAO,CAACsE,EAA2BqD,IAA8B,IAAIoN,EAAKzQ,EAAOqD,E,0GCrC9F,6BACA,6BACA,UAEA,MAAMsN,EACF7P,YAAYd,EAA2BqD,GAQvC,KAAAvB,MAAS0H,IACL5P,KAAKgV,SAAWpF,EAET5P,KAAK8T,QAAQ9K,KAAKhJ,KAAKgX,MAAOpH,IAIjC,KAAAoH,MAASrX,IACbK,KAAK8H,SAAWnI,EAETK,KAAK8T,QAAQjN,MAAM7G,KAAKiX,YAAajX,KAAKgV,SAAUhV,KAAK8H,WAI5D,KAAAmP,YAAetX,GACnBK,KAAK8T,QAAQjN,MAAM7G,KAAKkX,OAAQlX,KAAKgV,SAAUhV,KAAK6O,WAAW7O,KAAK8H,SAAU9H,KAAK2Q,SAEpE,KAAAuG,OAAS,IAAY,KAKZ,KAAApD,QAAU,IAAI,UA7BtC9T,KAAK2Q,OAASvK,EACdpG,KAAK6O,WAAapF,GAElB,IAAAyK,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAOD,cAAC,EAAAA,U,gEAOD,cAAC,EAAAA,U,sEAID,cAAC,EAAAA,U,iEAKD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAAhD,gBAAkB,CAAC/K,EAA2BqD,IACvD,IAAIsN,EAAgB3Q,EAAOqD,E,6FChD/B,6BACA,6BACA,UAEA,MAAM0N,EACFjQ,YAAYd,GAMD,KAAA8B,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAKoX,kBAAmBpX,KAAK2Q,OAAOrK,GAGrG,KAAA8Q,kBAAoB,IACxBpX,KAAK8T,QAAQ9K,KAAKhJ,KAAKmW,gBAAiB,IAASnW,KAAK2Q,OAAO7J,GAGzD,KAAAqP,gBAAkB,KACtBnW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKqX,MAAO,IAASrX,KAAK2Q,OAAO7J,IAItD,KAAAuQ,MAAS1X,IACbK,KAAK2Q,OAAO5J,OAAyC,IAAxB,GAARpH,GACrBK,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKsX,QAAS,IAAStX,KAAK2Q,OAAO7J,IAIxD,KAAAwQ,QAAW3X,IACfK,KAAK2Q,OAAOrK,EAAqB,MAAhBtG,KAAK2Q,OAAOrK,EAAc3G,EAC3CK,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKuX,QAAS,IAASvX,KAAK2Q,OAAO7J,IAIxD,KAAAyQ,QAAW5X,IACfK,KAAK2Q,OAAOrK,EAAqB,IAAhBtG,KAAK2Q,OAAOrK,EAAa3G,GAAS,EAE5C,MAGiB,KAAAmU,QAAU,IAAI,UAzCtC9T,KAAK2Q,OAASvK,GAEd,IAAA8N,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,4EAID,cAAC,EAAAA,U,0EAOD,cAAC,EAAAA,U,gEAQD,cAAC,EAAAA,U,kEAQD,cAAC,EAAAA,U,kEAOD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BAGxC,EAAA6K,IAAO/L,GAA8B,IAAI+Q,EAAI/Q,E,8FCpD1D,6BACA,6BACA,UAEA,MAAMoR,EACFtQ,YAAYd,GAMD,KAAA8B,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAKoX,kBAAmBpX,KAAK2Q,OAAOrK,GAGrG,KAAA8Q,kBAAoB,IACxBpX,KAAK8T,QAAQ9K,KAAKhJ,KAAKmW,gBAAiB,IAASnW,KAAK2Q,OAAO7J,GAGzD,KAAAqP,gBAAkB,KACtBnW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKsX,QAAS,IAAStX,KAAK2Q,OAAO7J,IAIxD,KAAAwQ,QAAW3X,IACfK,KAAK2Q,OAAOrK,EAAqB,MAAhBtG,KAAK2Q,OAAOrK,EAAc3G,EAC3CK,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKuX,QAAS,IAASvX,KAAK2Q,OAAO7J,IAIxD,KAAAyQ,QAAW5X,IACfK,KAAK2Q,OAAOrK,EAAqB,IAAhBtG,KAAK2Q,OAAOrK,EAAa3G,GAAS,EAE5CK,KAAK8T,QAAQ9K,KAAKhJ,KAAKyX,YAAazX,KAAK2Q,OAAOrK,IAInD,KAAAmR,YAAc,KAClBzX,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,MAE/B,MAGiB,KAAAwN,QAAU,IAAI,UAxCtC9T,KAAK2Q,OAASvK,GAEd,IAAA8N,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,4EAID,cAAC,EAAAA,U,0EAOD,cAAC,EAAAA,U,kEAQD,cAAC,EAAAA,U,kEAOD,cAAC,EAAAA,U,sEAOD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BAGxC,EAAA8K,IAAOhM,GAA8B,IAAIoR,EAAIpR,E,gGCnD1D,6BACA,6BACA,UAEA,MAAMsR,EACFxQ,YAAYd,EAA2BqD,GAQvC,KAAAvB,MAASgI,GACLlQ,KAAK8T,QAAQjN,OAAM,IAAM,MAAMqJ,EAASlQ,KAAK6O,WAAW7O,KAAK2Q,SAErC,KAAAmD,QAAU,IAAI,UAVtC9T,KAAK2Q,OAASvK,EACdpG,KAAK6O,WAAapF,GAElB,IAAAyK,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAID,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,uEASQ,EAAAtN,MAAQ,CAACT,EAA2BqD,IAA+B,IAAIiO,EAAMtR,EAAOqD,E,eC3BjG,SAASwG,EAAWC,EAAiB9J,GACjCA,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVmJ,GACAA,EAAU,EAAI,EACvB,CAuBA,SAAgBW,EAAIX,EAAiB9J,GACjC,GAAkB,EAAdA,EAAMW,MAA8B,CACpC,MAAMoJ,GAAgB,GAAVD,IAA6B,GAAV9J,EAAMuC,IAA2B,EAAdvC,EAAMW,OACpDqJ,GAAMF,IAAY,IAAM9J,EAAMuC,IAAM,IAAMwH,EAAK,EAAI,EAAI,GAE3D/J,EAAMuC,EAAIwH,EAAK,GAAMC,EAAK,IAAM,EAEhChK,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,IACdyH,EAAK,EAAI,EAAuB,E,KAClC,CACH,MAAMC,EAAMjK,EAAMuC,EAAIuH,GAAyB,EAAd9J,EAAMW,OACnCuJ,EAAe,IAAND,EAEbjK,EAAMW,OAEE,IADHX,EAAMW,MAEG,IAATuJ,GACAA,EAAS,EAAI,GACbD,IAAQ,KACLH,EAAU9J,EAAMuC,IAAM2H,EAASJ,GAAW,OAAU,EAE5D9J,EAAMuC,EAAI2H,C,CAGd,OAAO,IACX,CAgDA,SAAgB+B,EAAInC,EAAiB9J,GACjC,GAAkB,EAAdA,EAAMW,MAA8B,CACpC,MAAMoJ,GAAgB,GAAV/J,EAAMuC,IAAuB,GAAVuH,IAAkC,GAAd9J,EAAMW,OACrDqJ,GAAMhK,EAAMuC,IAAM,IAAMuH,IAAY,IAAMC,EAAK,EAAI,EAAI,GAE3D/J,EAAMuC,GAAKwH,EAAK,EAAI,GAAKA,EAAKA,IAAQC,EAAK,EAAI,GAAKA,EAAKA,IAAO,EAEhEhK,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,IACdyH,EAAK,EAAI,EAAI,E,KACf,CACHF,EAAqB,KAAVA,EAEX,MAAMG,EAAMjK,EAAMuC,EAAIuH,GAAyB,EAAd9J,EAAMW,OACnCuJ,EAAe,IAAND,EAEbjK,EAAMW,OAEE,IADHX,EAAMW,MAEG,IAATuJ,GACAA,EAAS,EAAI,GACbD,IAAQ,KACLH,EAAU9J,EAAMuC,IAAM2H,EAASJ,GAAW,OAAU,EAE5D9J,EAAMuC,EAAI2H,C,CAGd,OAAO,IACX,C,6QA/HA,kBAAuBJ,EAAiB9J,EAA2BqD,GAC/D,MAAM6G,EAAS7G,EAAUyG,GAGzB,OAFAD,EAAWK,EAAQlK,GAEZkK,CACX,EAEA,sBAA2BlK,EAA2BqD,GAClDwG,EAAWxG,EAAUrD,GAAQA,EACjC,EAEA,oBACI8J,EACA9J,EACAqD,GAIA,OAFAwG,EAAWxG,EAAUyG,EAAS9J,GAAQA,GAE/B,IACX,EAEA,QA8BA,wBAA6BA,GACzB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAKvC,EAAMuC,GAAK,EAAK,IAE3BvC,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACd4H,IAAQ,CACjB,EAEA,kBAAuBL,EAAiB9J,GACpC,MAAMkK,EAAUJ,GAAW,EAAK,IAQhC,OANA9J,EAAMW,OACa,IAAdX,EAAMW,MACG,IAATuJ,GACAA,EAAS,EAAI,GACbJ,IAAY,EAEVI,CACX,EAEA,eAAoBJ,EAAiB9J,GAMjC,OALAA,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVmJ,GACAA,EAAU9J,EAAMuC,EAAI,EAAI,GAEtB,IACX,EAEA,eACIuH,EACA9J,EACAuR,GAEA,MAAMnH,EAAOmH,EAAYvR,IAAqB,KAAV8J,GAAkB,EAEtD9J,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,CAClB,EAEA,QAgCA,wBAA6BpK,GACzB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAIvC,EAAMuC,IAAM,EAEtBvC,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACR,EAAN4H,CACT,EAEA,kBAAuBL,EAAiB9J,GACpC,MAAMkK,EAASJ,IAAY,EAQ3B,OANA9J,EAAMW,OACa,IAAdX,EAAMW,MACG,IAATuJ,GACAA,EAAS,EAAI,GACH,EAAVJ,EAEEI,CACX,EAEA,wBAA6BlK,GACzB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAMvC,EAAMuC,GAAK,EAAK,IAAuB,EAAdvC,EAAMW,MAE3CX,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACd4H,IAAQ,CACjB,EAEA,kBAAuBL,EAAiB9J,GACpC,MAAMkK,EAAWJ,GAAW,EAAK,IAAuB,EAAd9J,EAAMW,MAQhD,OANAX,EAAMW,OACa,IAAdX,EAAMW,MACG,IAATuJ,GACAA,EAAS,EAAI,GACbJ,IAAY,EAEVI,CACX,EAEA,wBAA6BlK,GACzB,MAAMmK,EAAMnK,EAAMuC,EAClBvC,EAAMuC,EAAKvC,EAAMuC,IAAM,GAAqB,EAAdvC,EAAMW,QAAiC,EAErEX,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACR,EAAN4H,CACT,EAEA,kBAAuBL,EAAiB9J,GACpC,MAAMkK,EAAUJ,IAAY,GAAqB,EAAd9J,EAAMW,QAAiC,EAQ1E,OANAX,EAAMW,OACa,IAAdX,EAAMW,MACG,IAATuJ,GACAA,EAAS,EAAI,GACH,EAAVJ,EAEEI,CACX,EAIA,eAAoBJ,EAAiB9J,GACjCA,EAAMuC,GAAMvC,EAAMuC,EAAIuH,KAAa,GAAoB,EAAd9J,EAAMW,MAA+B,IAAO,GAErFX,EAAMW,OACa,IAAdX,EAAMW,OACK,GAAVX,EAAMuC,KAAc,GACrBvC,EAAMuC,EAAI,EAAI,GACJ,IAAVvC,EAAMuC,EACK,GAAVvC,EAAMuC,GAAwB,GAAVvC,EAAMuC,IAAa,CACjD,EAEA,eAAoBuH,EAAiB9J,GACjC,MAAMP,EAAIO,EAAMuC,EAAIuH,EASpB,OARA9J,EAAMuC,EAAI9C,IAAM,EAEhBO,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMuC,GACNvC,EAAMuC,EAAI,EAAI,GACV,EAAJ9C,EAEE,IACX,EAEA,eAAoBqK,EAAiB9J,GACjC,MAAMkK,EAAUJ,EAAU,IAAQ,IAC5BM,EAAOpK,EAAMuC,GAAe,KAAT2H,GAAiB,EAQ1C,OANAlK,EAAMW,OACa,IAAdX,EAAMW,MACC,IAAPyJ,GACO,IAAPA,EAAc,EAAI,GAClBA,IAAS,EAEPF,CACX,EAEA,eAAoBJ,EAAiB9J,GACjC,MAAMzG,GAASyG,EAAMuC,EAAIvC,EAAMyC,IAAiB,KAAVqH,GAAkB,EAUxD,OARA9J,EAAMyC,EAAY,IAARlJ,EAEVyG,EAAMW,OACa,IAAdX,EAAMW,MACI,IAAVX,EAAMyC,GACI,IAAVzC,EAAMyC,EAAW,EAAI,GACrBlJ,IAAU,EAER,IACX,EAEA,eAAoBuQ,EAAiB9J,GACjC,MAAMkK,EAAUJ,IAAY,GAAqB,EAAd9J,EAAMW,QAAiC,EAM1E,OAJAX,EAAMW,OAAuB,EAAdX,EAAMW,MAA4C,EAAVmJ,EAEvDW,EAAIP,EAAQlK,GAELkK,CACX,EAEA,eAAoBJ,EAAiB9J,GACjC,MAAMkK,EAAWJ,GAAW,EAAK,IAAuB,EAAd9J,EAAMW,MAMhD,OAJAX,EAAMW,OAAuB,EAAdX,EAAMW,MAAkCmJ,IAAY,EAEnED,EAAY7J,EAAMuC,GAAK2H,EAASlK,GAEzBkK,CACX,EAEA,eAAoBJ,EAAiB9J,GACjCA,EAAMW,OAAuB,EAAdX,EAAMW,MAAkCmJ,IAAY,EACnE,MAAMI,EAAUJ,GAAW,EAAK,IAKhC,OAHA9J,EAAMuC,EAAIvC,EAAMuC,EAAI2H,EACpBL,EAAW7J,EAAMuC,EAAGvC,GAEbkK,CACX,EAEA,eAAoBlK,GAChB,MAAMkK,EAASlK,EAAMuC,EAAIvC,EAAMyC,EAG/B,OAFAoH,EAAWK,EAAQlK,GAEZkK,CACX,EAEA,eAAoBJ,EAAiB9J,GACjC,MAAMkK,EAAUJ,EAAU,EAAK,IAI/B,OAFAmC,EAAI/B,EAAQlK,GAELkK,CACX,EAEA,eAAoBJ,EAAiB9J,GAKjC,OAJAA,EAAMuC,GAAKuH,EACXD,EAAW7J,EAAMuC,EAAGvC,GACpBA,EAAMW,OAAuB,EAAdX,EAAMW,OAA6C,IAAVX,EAAMuC,KAAc,EAErE,IACX,C,+FCtTA,6BACA,6BACA,UAEA,MAAMiP,EACF1Q,YAAYd,GAMD,KAAA8B,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK6X,UAAW,KAEtE,KAAAA,UAAY,IAAoC7X,KAAK8T,QAAQ9K,KAAKhJ,KAAK8X,UAAW,KAElF,KAAAA,UAAY,IAAoC9X,KAAK8T,QAAQ9K,KAAKhJ,KAAK+X,YAAa,KAEpF,KAAAA,YAAc,IAAoC/X,KAAK8T,QAAQ9K,KAAKhJ,KAAKgY,YAAa,KAGjG,KAAAA,YAAc,KAClBhY,KAAK2Q,OAAO7J,EAAI,IACT9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKiY,YAAa,MAIvC,KAAAA,YAAc,IAAoCjY,KAAK8T,QAAQ9K,KAAKhJ,KAAKkY,kBAAmB,OAG5F,KAAAA,kBAAqBhI,IACzBlQ,KAAKmY,eAAiBjI,EACflQ,KAAK8T,QAAQ9K,KAAKhJ,KAAKoY,kBAAmB,QAI7C,KAAAA,kBAAqBlI,IACzBlQ,KAAKmY,gBAAkBjI,GAAW,EAClClQ,KAAK2Q,OAAOrK,EAAItG,KAAKmY,eAEd,MAGH,KAAAA,eAAiB,EAEG,KAAArE,QAAU,IAAI,UAtCtC9T,KAAK2Q,OAASvK,GAEd,IAAA8N,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,oEAED,cAAC,EAAAA,U,oEAED,cAAC,EAAAA,U,sEAED,cAAC,EAAAA,U,sEAMD,cAAC,EAAAA,U,sEAGD,cAAC,EAAAA,U,4EAMD,cAAC,EAAAA,U,4EAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BAGxC,EAAA8H,KAAQhJ,GAA8B,IAAIwR,EAAKxR,E,kGClD5D,cAAS,sEAAAgJ,IAAI,IACb,cAAS,qEAAAmC,GAAG,IAAE,qEAAA5K,GAAG,IAAE,qEAAAC,GAAG,G,0GCAtB,6BACA,6BACA,UAEA,MAAMyR,EACFnR,YAAYd,EAA2BkS,EAAuBC,GAQnD,KAAArQ,MAAQ,IAAoClI,KAAK8T,QAAQ9K,KAAKhJ,KAAK0W,WAAY1W,KAAK2Q,OAAOrK,GAG9F,KAAAoQ,WAAa,KACb1W,KAAKwY,SACLxY,KAAK2Q,OAAOrK,EAAKtG,KAAK2Q,OAAOrK,EAAI,EAAK,OAGnCtG,KAAK8T,QAAQjN,MAAM7G,KAAKoW,SAAU,IAASpW,KAAK2Q,OAAO7J,EAAG9G,KAAK2Q,OAAOrK,IAAM,IAI/E,KAAA8P,SAAW,KACfpW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQjN,MAAM7G,KAAKqW,SAAU,IAASrW,KAAK2Q,OAAO7J,EAAmB,IAAhB9G,KAAK2Q,OAAOrK,GAAUsN,MAAK,IAIxF,KAAAyC,SAAW,KACfrW,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IACtC9G,KAAKyY,QAAUzY,KAAK2Q,OAAOhK,IAAM,MAAS3G,KAAK0Y,eAExC1Y,KAAK8T,QAAQjN,MAChB7G,KAAK2Y,WACL,IAAS3Y,KAAK2Q,OAAO7J,EACrB9G,KAAKwY,OAA6B,GAApBxY,KAAK2Q,OAAO5J,OAAmD,GAApB/G,KAAK2Q,OAAO5J,QAKrE,KAAA4R,WAAa,KACjB3Y,KAAK2Q,OAAO7J,EAAK9G,KAAK2Q,OAAO7J,EAAI,EAAK,IAE/B9G,KAAK8T,QAAQ9K,KAAKhJ,KAAKiW,UAAWjW,KAAKyY,UAI1C,KAAAxC,UAAatW,IACjBK,KAAK2Q,OAAO5J,OAAS,EACrB/G,KAAK2Q,OAAOrK,EAAI3G,EAETK,KAAK8T,QAAQ9K,KAAKhJ,KAAKsW,YAAatW,KAAKyY,UAI5C,KAAAnC,UAAa3W,IACjBK,KAAK2Q,OAAOrK,EAAItG,KAAK2Q,OAAOrK,EAAK3G,GAAS,EAC1CK,KAAK2Q,OAAOhK,IAAM3G,KAAK2Q,OAAO/J,KAAM,EAE7B,MAGH,KAAA6R,QAAU,EAEU,KAAA3E,QAAU,IAAI,UA9DtC9T,KAAK2Q,OAASvK,EACdpG,KAAK0Y,eAAiBJ,EACtBtY,KAAKwY,OAASD,GAEd,IAAArE,kBAAiBlU,KACrB,EAEA,cAAC,EAAAmU,U,gEAED,cAAC,EAAAA,U,qEASD,cAAC,EAAAA,U,mEAOD,cAAC,EAAAA,U,mEAYD,cAAC,EAAAA,U,qEAOD,cAAC,EAAAA,U,oEAQD,cAAC,EAAAA,U,oEAUD,cAAC,EAAAA,U,kEAED,cAAC,EAAAA,U,2BAAmC,UAAa7M,Q,6BACjD,cAAC,EAAA6M,U,yEACD,cAAC,EAAAA,U,kEAGQ,EAAA5C,IAAOnL,GAA8B,IAAIiS,EAAUjS,EAAO,OAAQ,GAClE,EAAAQ,IAAOR,GAA8B,IAAIiS,EAAUjS,EAAO,OAAQ,GAClE,EAAAO,IAAOP,GAA8B,IAAIiS,EAAUjS,EAAO,OAAQ,E,wEC7E/E,E,OAAA,yBAGA,8BAqBY,KAAAwS,MAAQ,IAAI,UACZ,KAAAC,OAAS,IAAI,UACb,KAAAC,IAAM,IAAI,UACV,KAAAC,MAAQ,IAAI,UAEZ,KAAAC,MAAQ,IAAI,SACxB,CA1BIC,UACI,OAAOjZ,KAAK4Y,KAChB,CAEAM,WACI,OAAOlZ,KAAK6Y,MAChB,CAEAM,QACI,OAAOnZ,KAAK8Y,GAChB,CAEAM,UACI,OAAOpZ,KAAK+Y,KAChB,CAEAM,UACI,OAAOrZ,KAAKgZ,KAChB,E,wECvBJ,E,OAAA,yBAIA,gBAEI9R,cAaQ,KAAAoS,MAAQ,IAAInV,MAAqB,GAZrC,IAAK,IAAIoV,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAC9BvZ,KAAKsZ,MAAMC,GAAO,IAAIpV,MAAc,GACpC,IAAK,IAAIqV,EAAM,EAAGA,EAAM,EAAGA,IACvBxZ,KAAKsZ,MAAMC,GAAKC,GAAO,IAAI,S,CAGvC,CAEAC,OAAOF,EAAaC,GAChB,OAAOxZ,KAAKsZ,MAAMC,GAAKC,EAC3B,E,iFCjBJ,UAEA,6BAGA,8BAcI,KAAAE,aAAe,IAAI,EAAAhV,MAET,KAAAiV,YAAc,IAAI,UAClB,KAAAzY,OAAS,EACvB,CAjBIiB,SAASxC,GACLK,KAAKkB,OAASvB,EACdK,KAAK0Z,aAAajU,SAAS9F,EAC/B,CAEAuC,WACI,OAAOlC,KAAKkB,MAChB,CAEAmY,UACI,OAAOrZ,KAAK2Z,WAChB,E,kECjBJ,gBAIA,gBACIzS,YAAoByJ,GAAkB,GAAlB,KAAAA,OAAAA,EAoBpB,KAAAiJ,aAAe,IAAI,EAAAlV,MACnB,KAAAmV,WAAa,IAAI,EAAAnV,KArB6B,CAE9CsE,OAEI,OADAhJ,KAAK6Z,WAAWpU,SAASzF,MAClBA,KAAK2Q,MAChB,CAEAmJ,OACI,OAAO9Z,KAAK2Q,MAChB,CAEAoJ,OAAO3T,GACCpG,KAAK2Q,SAAWvK,IAIpBpG,KAAK2Q,OAASvK,EACdpG,KAAK4Z,aAAanU,SAASW,GAC/B,E,yFCvBJ,E,OAAA,yBAcA,IAAU4T,GAAV,SAAUA,GAaU,EAAAjM,OAAhB,SAAuBkM,EAA0B,CAAC,GAC9C,OAAO,OAAP,QACIC,OAAQ,EACRC,aAAa,EACbC,YAAa,EACbC,gBAAgB,EAChBC,YAAa,EACbC,UAAU,EACVC,QAAS,UAAWvM,KAAKC,aACzBuM,gBAAiB,EACjBC,gBAAiB,GAEdT,EAEX,EAEgB,EAAAU,WAAhB,SAA2BV,GACvB,OAAQA,EAAOC,QACX,KAAK,EACD,OAAO,QAEX,KAAK,EACL,KAAK,EACD,OAAO,QAEnB,CACH,CAvCD,CAAUF,IAAAA,EAAM,KAyCG,W,yFCvDnB,E,OAAA,yBAgCyB,UA5BzB,oBAqBY,KAAAY,cAAgB,IAAI,UACpB,KAAAC,aAAe,IAAI,UACnB,KAAAC,aAAe,IAAI,UACnB,KAAAC,cAAgB,IAAI,UACpB,KAAAC,cAAgB,IAAI,SAChC,CAzBIC,kBACI,OAAOjb,KAAK4a,aAChB,CAEAM,iBACI,OAAOlb,KAAK6a,YAChB,CAEAM,iBACI,OAAOnb,KAAK8a,YAChB,CAEAM,wBACI,OAAOpb,KAAK+a,aAChB,CAEAM,wBACI,OAAOrb,KAAKgb,aAChB,E,eCvBJ,IAAUM,E,kEAAV,SAAUA,GACN,IAAYC,GAAZ,SAAYA,GACR,0BACA,0BAEA,sCAEA,sCACA,sCACA,sCACA,sCACA,sCACA,wCACA,0DACA,sCAEA,wCAEA,wCACA,wCAEA,kCAEA,wCAEA,wCACA,wCAEA,gCACA,oDACA,4CACA,kCAEA,mBACH,CAjCD,CAAYA,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KAmCT,EAAAC,YAAhB,WACI,MAAO,CACHD,EAAcE,WACdF,EAAcG,WACdH,EAAcI,iBACdJ,EAAcK,iBACdL,EAAcM,iBACdN,EAAcO,iBACdP,EAAcQ,iBACdR,EAAcS,iBACdT,EAAcU,2BACdV,EAAcW,iBACdX,EAAcY,kBACdZ,EAAca,kBACdb,EAAcc,kBACdd,EAAce,kBACdf,EAAcgB,eACdhB,EAAciB,kBACdjB,EAAckB,cACdlB,EAAcmB,kBACdnB,EAAcoB,kBACdpB,EAAcqB,wBACdrB,EAAcsB,oBACdtB,EAAcuB,eACdvB,EAAcwB,QAEtB,EAEgB,EAAAC,sBAAhB,SAAsCC,GAClC,OAAQA,GACJ,KAAK1B,EAAcE,WACf,MAAO,WAEX,KAAKF,EAAcG,WACf,MAAO,WAEX,KAAKH,EAAcI,iBACf,MAAO,uBAEX,KAAKJ,EAAcK,iBACf,MAAO,qCAEX,KAAKL,EAAcM,iBACf,MAAO,4CAEX,KAAKN,EAAcO,iBACf,MAAO,2CAEX,KAAKP,EAAcQ,iBACf,MAAO,0CAEX,KAAKR,EAAcS,iBACf,MAAO,wCAEX,KAAKT,EAAcW,iBACf,MAAO,uCAEX,KAAKX,EAAcY,kBACf,MAAO,oCAEX,KAAKZ,EAAca,kBACf,MAAO,wBAEX,KAAKb,EAAcU,2BACf,MAAO,uCAEX,KAAKV,EAAcc,kBACf,MAAO,sCAEX,KAAKd,EAAce,kBACf,MAAO,0CAEX,KAAKf,EAAcgB,eACf,MAAO,kDAEX,KAAKhB,EAAciB,kBACf,MAAO,sCAEX,KAAKjB,EAAckB,cACf,MAAO,6CAEX,KAAKlB,EAAcmB,kBACf,MAAO,wCAEX,KAAKnB,EAAcoB,kBACf,MAAO,kDAEX,KAAKpB,EAAcqB,wBACf,MAAO,4BAEX,KAAKrB,EAAcsB,oBACf,MAAO,oBAEX,KAAKtB,EAAcuB,eACf,MAAO,mBAEX,KAAKvB,EAAcwB,QACf,MAAO,UAEnB,CACH,CAxID,CAAUzB,IAAAA,EAAa,KA0IG,W,kGC7H1B,6BACA,6BACA,UAEM4B,GAAsB,IAAAC,QAAa,4BAGnCC,EAAQ,IAAIC,UAAU,CAAC,IAGvBC,EAAQ,IAAID,UAAU,CAAC,EAAG,IAG1BE,EAAQ,IAAIF,UAAU,CAAC,GAAI,KAG3BG,GAAQ,IAAAL,QAAa,gBAGrBM,GAAQ,IAAAN,QAAa,4BAGrBO,GAAQ,IAAAP,QACV,4VAQEQ,GAAS,IAAAR,QAAa,4BAStBS,EAAQ,CACVR,EACAI,EACAA,GATY,IAAAL,QACZ,gLAUAG,EACAA,EACAC,EACAE,EACAC,EACAD,EACAF,EACAH,EACAE,EACAA,EACAC,EACAI,GAoEsB,UAjE1B,MACIzW,YAAoB2W,GAAA,KAAAA,QAAAA,CAAmB,CAEvCC,UAAU7D,GACNja,KAAK6d,QAAU5D,CACnB,CAEAR,OAAOsE,EAAcC,GAGjB,OAAIJ,EAAMG,KAAUT,GAASJ,EAAoBa,IAASC,EAAY,IAAO,EAClE,EAGHD,GAAQ,EAAKC,CACzB,CAEAC,UAAUC,GACN,MAAMH,EAAQG,IAAQ,EAAK,GACvBF,EAAkB,GAANE,EAEVC,EAAOP,EAAMG,GAEnB,IAAIxY,EAAS,EACb,IAAK,IAAIM,EAAI,EAAGA,EAAIsY,EAAK5Y,OAAQM,IAC7BN,GAAU4Y,EAAKtY,GAGnBN,EAASA,EAAS2X,EAAoBa,IAASC,EAAY,GAE3D,MAAMI,EAAU,IAAIC,aAAa9Y,GAE3B+Y,EAAa,UAAO3D,WAAW3a,KAAK6d,SAAW,IAErD,IAAIU,EAAI,EACJC,EAAQ,EACRC,EAAS,EACTrY,GAAQ,EAEZ,IAAK,IAAIP,EAAI,EAAGA,EAAIN,EAAQM,IACxB0Y,IAEIA,IAAMrB,EAAoBa,IAASC,EAAY,KAC/CO,EAAI,EACJC,IAEIA,IAAUL,EAAKM,KACfA,IACAD,EAAQ,EAEJL,EAAK5Y,SAAWkZ,IAChBA,EAAS,IAIjBrY,IAAmB,EAATqY,IAGdL,EAAQvY,GAAKO,EAAQ,GAAK,EAG9B,OAAO,IAAI,UAAkBgY,EAASE,EAC1C,E,iFClH0B,UApB9B,MACIpX,YAAoBwX,EAAgCC,GAAhC,KAAAD,SAAAA,EAAgC,KAAAC,YAAAA,CAAsB,CAE1EC,YACI,OAAO5e,KAAK0e,SAASnZ,MACzB,CAEAsZ,aACI,OAAO7e,KAAK0e,QAChB,CAEAI,gBACI,OAAO9e,KAAK2e,WAChB,CAEAI,wBAAwBC,GACpBhf,KAAK0e,SAAWM,CACpB,E,mFCjBJ,gBAqEuB,UAnEvB,MACI9X,YAAoB+X,GAAA,KAAAA,UAAAA,EA2DpB,KAAAC,MAAQ,IAAI,EAAAxa,MAEJ,KAAAya,MAAQ,EACR,KAAAC,OAAS,EA7Dbpf,KAAKqf,QAAU,IAAIlb,MAASnE,KAAKif,WAEjC,IAAK,IAAIpZ,EAAI,EAAGA,EAAI7F,KAAKif,UAAWpZ,IAChC7F,KAAKqf,QAAQxZ,GAAK,IAE1B,CAEAyZ,OACI,OAAOtf,KAAKmf,KAChB,CAEAI,MACI,GAAmB,IAAfvf,KAAKmf,MACL,OAGJ,MAAMK,EAAOxf,KAAKqf,QAAQrf,KAAKof,QAM/B,OALApf,KAAKqf,QAAQrf,KAAKof,QAAU,KAE5Bpf,KAAKof,QAAUpf,KAAKof,OAAS,GAAKpf,KAAKif,UACvCjf,KAAKmf,QAEEK,CACX,CAEA1d,KAAK0d,GAOD,OANIxf,KAAKmf,QAAUnf,KAAKif,WACpBjf,KAAKkf,MAAMzZ,SAASzF,KAAKuf,OAG7Bvf,KAAKqf,SAASrf,KAAKof,OAASpf,KAAKmf,SAAWnf,KAAKif,WAAaO,EAEvDxf,IACX,CAEAoC,QAAQqd,GACJ,IAAK,IAAI5Z,EAAI,EAAGA,EAAI7F,KAAKmf,MAAOtZ,IAC5B4Z,EAAGzf,KAAKqf,SAASrf,KAAKof,OAASvZ,GAAK7F,KAAKif,YAG7C,OAAOjf,IACX,CAEA0f,QACI,IAAK,IAAI7Z,EAAI,EAAGA,EAAI7F,KAAKif,UAAWpZ,IAChC7F,KAAKqf,QAAQxZ,GAAK,KAMtB,OAHA7F,KAAKmf,MAAQ,EACbnf,KAAKof,OAAS,EAEPpf,IACX,CAEA2f,WACI,OAAO3f,KAAKif,SAChB,E,yFC5DJ,MACIW,EAAY,IAAIC,WAAW,KAe/B,SAASC,EAAWC,EAAc3a,GAC9B,MAAMzF,EAAQigB,EAAUG,EAAKC,WAAW5a,IAExC,GAAIzF,EAAQ,GACR,MAAM,IAAI8B,MAAM,6BAA+Bse,EAAK3a,GAAO,cAAgBA,GAG/E,OAAOzF,CACX,CAEA,SAASsgB,EAAaF,EAAc3a,GAChC,OACK0a,EAAWC,EAAM3a,IAAQ,KACzB0a,EAAWC,EAAM3a,EAAM,IAAM,KAC7B0a,EAAWC,EAAM3a,EAAM,IAAM,GAC9B0a,EAAWC,EAAM3a,EAAM,EAE/B,EA9BA,SAAiBoJ,GACb,IAAI3I,EAEJ,IAAKA,EAAI,EAAGA,EAAI,IAAKA,IACjB+Z,EAAU/Z,GAAK,IAEnB,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAChB+Z,EAVgB,mEAUUI,WAAWna,IAAMA,EAG/C+Z,EAAU,IAAII,WAAW,IAAM,CAClC,CAXD,CAAiB,EAAAxR,SAAA,EAAAA,OAAM,KA2CvB,kBAAuBuR,GACnB,GAAIA,EAAKxa,OAAS,GAAM,EACpB,MAAM,IAAI9D,MAAM,+CAGpB,MAAMye,EAAUH,EAAKxa,OAAS,EAC1B4a,EAAwB,EAAVD,EAjBtB,SAAoBH,GAChB,IAAIK,EAAU,EACVhb,EAAM2a,EAAKxa,OAAS,EAExB,KAAOH,GAAO,GAAqB,MAAhB2a,EAAK3a,MACpBgb,IAGJ,OAAOA,CACX,CAQoCC,CAAWN,GACvCO,EAAU,IAAIT,WAAWM,GAE7B,IAAI/a,EAAM,EAEV,IAAK,IAAIS,EAAI,EAAGA,EAAIqa,EAASra,IAAK,CAC9B,MAAM0a,EAASN,EAAaF,EAAU,EAAJla,GAElC,IAAK,IAAI6I,EAAI,EAAGA,EAAI,GAAKtJ,EAAM+a,EAAazR,IACxC4R,EAAQlb,KAAUmb,IAAY,GAAK,EAAI7R,GAAO,G,CAItD,OAAO4R,CACX,C,0FClEa,EAAAE,SAAW,WAAYC,OACvB,EAAAC,QACPC,UAAUC,SAASC,MAAM,qBACH,aAAvBF,UAAUC,UAA2BD,UAAUG,eAAiB,C,sGCHrE,MAAMC,EAAaC,OAAO,wBAE1B,4BAAiCC,GAC7B,MAAMC,EAAsBD,EAAOF,GACnC,GAAKG,EAIL,IAAK,MAAMC,KAAQD,EACfzhB,OAAOC,eAAeuhB,EAAQE,EAAM,CAAEC,UAAU,EAAOC,cAAc,GAE7E,EAEA,qBAA0BJ,EAAaE,GAC9BF,EAAOF,IACRthB,OAAOC,eAAeuhB,EAAQF,EAAY,CAAEphB,MAAO,GAAIyhB,UAAU,EAAOhe,YAAY,IAGxF6d,EAAOF,GAAYjf,KAAKqf,EAC5B,C,kGCnBA,UAEA,6BA8EiB,UA3EjB,MACIja,YAAoBoa,GAAA,KAAAA,SAAAA,EA0DpB,KAAAC,MAAQ,CACJzgB,QAAS,IAAI,EAAA4D,MACb8c,QAAS,IAAI,EAAA9c,OAGT,KAAA+c,MAA8B,GAE9B,KAAAC,UAAY,CAjEqC,CAEzDre,MACI,IAAIse,EAEJ,GAAuB,IAAnB3hB,KAAK0hB,UAAiB,CACtB,MAAME,EAAU5hB,KAAKshB,WAErBK,EAAS,IAAI,UACTC,GACCC,GAA0B7hB,KAAK8hB,eAAeD,KAC9CA,GAA0B7hB,KAAK+hB,eAAeF,I,MAGnDF,EAAS3hB,KAAKyhB,QAAQzhB,KAAK0hB,WAC3BC,EAAOK,cAAe,EAG1B,OAAOL,CACX,CAEQG,eAAeD,GACnB,GAAIA,EAAOG,aACP,MAAM,IAAIvgB,MAAM,qDAGpB,GAAIogB,EAAOI,YACP,MAAM,IAAIxgB,MAAM,qDAGpB,MAAMygB,EAAWliB,KAAK0hB,YAEtB1hB,KAAKyhB,MAAMS,GAAYL,EAEvBA,EAAOG,cAAe,EACtBH,EAAOM,cAAgBD,EAEvBliB,KAAKuhB,MAAMzgB,QAAQ2E,SAASoc,EAAOxe,MACvC,CAEQ0e,eAAeF,GACnB,GAAIA,EAAOI,YACP,MAAM,IAAIxgB,MAAM,wDAGhBogB,EAAOG,eACHhiB,KAAK0hB,UAAY,IACjB1hB,KAAKyhB,MAAMI,EAAOM,eAAiBniB,KAAKyhB,MAAMzhB,KAAK0hB,UAAY,IAGnE1hB,KAAK0hB,aAGTG,EAAOI,aAAc,EAErBjiB,KAAKuhB,MAAMC,QAAQ/b,SAASoc,EAAOxe,MACvC,E,iFChCmB,UA5BvB,MACI6D,YACYhG,EACAkhB,EACAC,GAFA,KAAAnhB,OAAAA,EACA,KAAAkhB,WAAAA,EACA,KAAAC,WAAAA,EAmBL,KAAAL,cAAe,EACf,KAAAC,aAAc,CAnBlB,CAEHK,MAAMrB,GACFjhB,KAAKkB,OAAS+f,CAClB,CAEA5d,MACI,OAAOrD,KAAKkB,MAChB,CAEAJ,UACId,KAAKoiB,WAAWpiB,KACpB,CAEAwhB,UACIxhB,KAAKqiB,WAAWriB,KACpB,E,iECvBJ,gBAIA,MAAMuiB,EAAN,cAiCI,KAAAC,QAAU,IAAI,EAAA9d,MAEN,KAAA+d,IAAwB,IACpC,CAnCI1c,KAAK2c,GACG1iB,KAAKyiB,MAILC,GACAA,EAAGF,QAAQzd,WAAWwd,EAAQI,kBAAmB3iB,MAGrDA,KAAKyiB,IAAMC,EACf,CAEAE,SACS5iB,KAAKyiB,MAIVziB,KAAKyiB,IAAID,QAAQrd,cAAcod,EAAQI,kBAAmB3iB,MAE1DA,KAAKyiB,IAAM,KACf,CAEAI,KAAKL,GACGxiB,KAAKyiB,KACLziB,KAAKyiB,IAAII,KAAKL,EAEtB,CAEQhN,yBAAyBgN,EAA4BhjB,GACzDA,EAAKgjB,QAAQ/c,SAAS+c,EAC1B,EAOJ,UAAeD,C,wEC1Cf,E,OAAA,yBAKMO,EAFN,QAEuBpC,MAGvB,gBACIxZ,YACY6b,EACAC,EAAU,IACVC,EAAmB,0BAFnB,KAAAF,aAAAA,EACA,KAAAC,QAAAA,EACA,KAAAC,iBAAAA,EA2GJ,KAAAC,gBAAkB,KAClBljB,KAAKmjB,gBAITnjB,KAAKmjB,cAAgBjf,YAAW,KAC5BlE,KAAKmjB,cAAgB,KACrBnjB,KAAKojB,0BAA0B,GAChC,KAAI,EAGH,KAAAD,cAAqB,KAErB,KAAAE,gBAA8BrjB,KAAKsjB,UAAUvd,KAAK/F,MAElD,KAAAujB,UAAW,CAzHhB,CAEHC,SACQxjB,KAAKujB,WAITvjB,KAAKujB,UAAW,EAEZT,IAAmB,WACnB9iB,KAAKojB,2BACL3C,OAAOgD,iBAAiB,SAAUzjB,KAAKkjB,iBACvCljB,KAAKujB,UAAW,IAEhB,UAAWG,GAAG,SAAU1jB,KAAKqjB,iBAC7B,UAAWM,QAAQ3jB,KAAK+iB,aAAaa,cAE7C,CAEAC,YACS7jB,KAAKujB,WAINT,IAAmB,WACnB9iB,KAAK8jB,aACLrD,OAAOsD,oBAAoB,SAAU/jB,KAAKkjB,iBAC1CljB,KAAKujB,UAAW,GAEhB,UAAWS,OAEnB,CAEAjK,SACQ/Z,KAAKujB,SACLvjB,KAAK6jB,YAEL7jB,KAAKwjB,QAEb,CAEAS,YACI,OAAOjkB,KAAKujB,QAChB,CAEQD,YACC,YAID,UAAWY,cACXzD,OAAOgD,iBAAiB,SAAUzjB,KAAKkjB,iBACvCljB,KAAKojB,6BAELpjB,KAAK8jB,aACLrD,OAAOsD,oBAAoB,SAAU/jB,KAAKkjB,iBAC1C,UAAWiB,IAAI,SAAUnkB,KAAKqjB,iBAE9BrjB,KAAKujB,UAAW,GAExB,CAEQO,aACJ,MAAMM,EAAUpkB,KAAK+iB,aAAaa,YAE9B5jB,KAAKmjB,gBACL9e,aAAarE,KAAKmjB,eAClBnjB,KAAKmjB,cAAgB,MAGzBiB,EAAQC,MAAMC,MAAQ,GACtBF,EAAQC,MAAME,OAAS,GACvBH,EAAQC,MAAMG,SAAW,GACzBJ,EAAQC,MAAMI,UAAY,GAEtB3B,IACAsB,EAAQC,MAAMnC,SAAW,GACzBkC,EAAQC,MAAMK,IAAM,GACpBN,EAAQC,MAAMM,KAAO,GACrBP,EAAQC,MAAMO,OAAS,IAG3BC,SAASC,KAAKC,UAAUC,OAAOhlB,KAAKijB,kBAEpC/e,YAAW,IAAMlE,KAAK+iB,aAAakC,UAAU,EACjD,CAEQ7B,2BACJ,MAAMgB,EAAUpkB,KAAK+iB,aAAaa,YAElC5jB,KAAK+iB,aAAakC,OAAOxE,OAAOyE,WAAYzE,OAAO0E,aACnDf,EAAQC,MAAMC,MAAQ7D,OAAOyE,WAAa,KAC1Cd,EAAQC,MAAME,OAAS9D,OAAO0E,YAAc,KAC5Cf,EAAQC,MAAMG,SAAW/D,OAAOyE,WAAa,KAC7Cd,EAAQC,MAAMI,UAAYhE,OAAO0E,YAAc,KAE3CrC,IACAsB,EAAQC,MAAMnC,SAAW,QACzBkC,EAAQC,MAAMK,IAAM,IACpBN,EAAQC,MAAMM,KAAO,IACrBP,EAAQC,MAAMO,OAAS,GAAK5kB,KAAKgjB,SAGrC6B,SAASC,KAAKC,UAAUK,IAAIplB,KAAKijB,iBACrC,E,sHCrHJ,UAEA,6BAIA,UAkBA,SAASoC,EAAWC,GAChB,MAAyB,iBAAXA,EAAsBA,EAAOC,QAAUD,EAAS,EAClE,CAhBa,EAAAE,gBAAiC,C,4DAYjC,EAAAC,WAA4B,CAAC,QAAD,kBAMzC,MAAqBC,EACjBxe,cA+OQ,KAAAye,kBAAoB,IAAM3lB,KAAK4lB,gBAE/B,KAAAC,qBAAuB,IAAM7lB,KAAK4lB,gBAE1C,KAAAE,oBAAsB,IAAI,EAAAphB,MAElB,KAAAqhB,SAAmD,KACnD,KAAAC,UAAY,IAAIC,IAChB,KAAAC,eAAiB,IAAIC,QACrB,KAAAC,gBAAkB,IAAID,QAEtB,KAAAE,QAAS,EACT,KAAAC,WAA8C,GAC9C,KAAAC,aAA4D,CAAC,EAE7D,KAAAC,cAAgB,EAChB,KAAAC,UAAY,EA9PhBzmB,KAAK0mB,WAAW,EAAAC,eACpB,CAEAnR,2BACI,IAAIoR,EAAM,EAEV,MAAMC,EAAWlG,UAAUmG,cAE3B,IAAK,IAAIjhB,EAAI,EAAGA,EAAIghB,EAASthB,OAAQM,IAC7BghB,EAAShhB,IACT+gB,IAIR,OAAOA,CACX,CAEAG,OACI,IAAKpG,UAAUmG,YACX,MAAM,IAAIrlB,MAAM,6BAGpBzB,KAAK4lB,gBACLnF,OAAOgD,iBAAiB,mBAAoBzjB,KAAK2lB,mBACjDlF,OAAOgD,iBAAiB,sBAAuBzjB,KAAK6lB,qBACxD,CAEAmB,SACIhnB,KAAK4iB,SAELnC,OAAOsD,oBAAoB,mBAAoB/jB,KAAK2lB,mBACpDlF,OAAOsD,oBAAoB,sBAAuB/jB,KAAK6lB,qBAC3D,CAEA9f,KACIkhB,EAA6C,GAC7CC,EAA2D,CAAC,GAExDlnB,KAAKqmB,SAGTrmB,KAAKqmB,QAAS,EAEdrmB,KAAKsmB,WAAaW,EAClBjnB,KAAKumB,aAAeW,EACpBlnB,KAAKqmB,QAAS,EAEdrmB,KAAK+lB,SAAW,IAAII,QAEpBnmB,KAAKmnB,sBAAsB/kB,SAAQglB,IAC/B,MAAMC,EAAS,IAAI,UAEnBrnB,KAAK+lB,SAASpX,IAAIyY,EAAOC,GACzBA,EAAOC,SAASF,EAAMpe,QAEtBoe,EAAMvN,WAAW9U,WAAW2gB,EAAc6B,oBAAqBvnB,KAAK,IAE5E,CAEA4iB,SACS5iB,KAAKqmB,SAIVrmB,KAAKmnB,sBAAsB/kB,SAAQglB,GAC/BA,EAAMvN,WAAW1U,cAAcugB,EAAc6B,oBAAqBvnB,QAGtEA,KAAK+lB,SAAW,KAChB/lB,KAAKumB,aAAe,CAAC,EACrBvmB,KAAKsmB,WAAa,GAElBtmB,KAAKqmB,QAAS,EAClB,CAEAmB,kBACI,OAAOxnB,KAAKwmB,aAChB,CAEAE,WAAWe,EAAyBC,QACd,IAAPA,GACP1nB,KAAKgmB,UAAUrX,IAAI+Y,EAAID,GAG3B,MAAME,EAAS,IAAI1B,IACb2B,EAAyB,GAE/B,IAAK,MAAMC,KAAKJ,EACRG,EAAQE,QAAQD,EAAE5G,UAClB2G,EAAQ9lB,KAAK+lB,EAAE5G,QACf0G,EAAOhZ,IAAIkZ,EAAE5G,QAAQ,IAI7BjhB,KAAKkmB,eAAevX,IAAI8Y,EAASE,GACjC3nB,KAAKomB,gBAAgBzX,IAAI8Y,EAASG,EACtC,CAEAG,aAAaL,GACT1nB,KAAKgmB,UAAUgC,OAAON,EAC1B,CAEA9T,OACI5T,KAAKioB,eACT,CAEQzS,2BAA2B4R,EAAwB5nB,GACvDA,EAAKoU,MACT,CAEQgS,gBACJ,MAAMgB,EAAMlB,EAAcwC,oBAEtBtB,IAAQ5mB,KAAKwmB,gBACbxmB,KAAKwmB,cAAgBI,EACrB5mB,KAAK8lB,oBAAoBrgB,SAASzF,KAAKwmB,eAE/C,CAEQ2B,oBAAoBlH,EAAgBmH,EAAqC,MAC7E,GAAIpoB,KAAKumB,aAAatF,GAClB,OAAOjhB,KAAKumB,aAAatF,GAG7B,IAAKmH,EACD,OAAO,KAGX,OAAQnH,GACJ,IAAK,KACD,OAAOmH,EAASjP,QAEpB,IAAK,OACD,OAAOiP,EAAShP,UAEpB,IAAK,OACD,OAAOgP,EAASnP,UAEpB,IAAK,QACD,OAAOmP,EAASlP,WAEpB,IAAK,OACD,OAAOkP,EAAS/O,UAEpB,QACI,OAAO,KAEnB,CAEQ8N,sBACJ,MAAMkB,EAAmC,IAClC5oB,OAAO6oB,KAAKtoB,KAAKumB,cAAcgC,KAAItH,GAAUjhB,KAAKumB,aAAatF,MAGtE,IAAK,MAAMmH,KAAYpoB,KAAKsmB,WACxB+B,EAASvmB,KACLsmB,EAASnP,UACTmP,EAASlP,WACTkP,EAASjP,QACTiP,EAAShP,UACTgP,EAAS/O,WAIjB,OAAOgP,CACX,CAEQJ,gBACJ,MAAMO,EAAMC,KAAKD,MAEjB,GAA2B,IAAvBxoB,KAAKwmB,eAAuBgC,EAAMxoB,KAAKymB,UAhMzB,GAiMd,OAGJzmB,KAAKymB,UAAY+B,EAEjB,MAAM3B,EAAWlG,UAAUmG,cAE3B,IAAI4B,EAAgB,EAEpB,IAAK,IAAI7iB,EAAI,EAAGA,EAAIghB,EAASthB,OAAQM,IAAK,CACtC,MAAM8iB,EAAU9B,EAAShhB,GAEzB,IAAK8iB,EACD,SAGJ,MAAMlB,EAAUznB,KAAKgmB,UAAU3iB,IAAIslB,EAAQjB,KAAO,EAAAf,eAE5CgB,EAAS3nB,KAAKkmB,eAAe7iB,IAAIokB,GACjCG,EAAU5nB,KAAKomB,gBAAgB/iB,IAAIokB,GAEzC,IAAK,MAAMxG,KAAU2G,EACjBD,EAAOhZ,IAAIsS,GAAQ,GAGvB,IAAK,MAAM2H,KAAgBnB,EACvB,OAAQmB,EAAaC,MACjB,IAAK,SACD,MAAMvD,EAASqD,EAAQG,QAAQF,EAAatU,YAEtB,IAAXgR,GAA0BD,EAAWC,IAC5CqC,EAAOhZ,IAAIia,EAAa3H,QAAQ,GAGpC,MAEJ,IAAK,OACD,MAAM8H,EAAOJ,EAAQK,KAAKJ,EAAatU,YAGnB,IAATyU,IACgB,aAAtBH,EAAaK,KAAyBF,EAAO,GAAMA,GAAQ,KAE5DpB,EAAOhZ,IAAIia,EAAa3H,QAAQ,GAOhD,IAAK,MAAMA,KAAU2G,EAAS,CAC1B,MAAMR,EAAQpnB,KAAKmoB,oBAAoBlH,EAAQjhB,KAAKsmB,WAAWoC,IAC/D,IAAKtB,EACD,SAGJ,MAAMC,EAASrnB,KAAK+lB,SAAS1iB,IAAI+jB,GAEjCC,EAAOtN,OAAO4N,EAAOtkB,IAAI4d,IAEzBoG,EAAO5jB,KAAK2jB,E,CAGhBsB,G,CAER,EA9OJ,W,gEC1BA,8BAyCY,KAAAQ,IAAM,EACN,KAAAC,UAAqCnpB,KAAKopB,qBAAqBrjB,KAAK/F,KAChF,CA1CI+F,KAAKsjB,GACGrpB,KAAKspB,UAITtpB,KAAKspB,QAAUD,EACfrpB,KAAKkpB,IAAM,EAEXrE,SAASpB,iBAAiB,YAAazjB,KAAKmpB,WAChD,CAEAvG,SACS5iB,KAAKspB,UAIVzE,SAASd,oBAAoB,YAAa/jB,KAAKmpB,WAC/CnpB,KAAKspB,QAAU,KACnB,CAEQF,qBAAqBG,GACzB,GAAIvpB,KAAKkpB,IAAM,EAAG,CACd,MAAMM,EAAKD,EAAEE,QAAUzpB,KAAKkpB,GAC5B,IAAIvpB,EAAQK,KAAKspB,QAAQpnB,WAEzBvC,IAAU6pB,EAAK/I,OAAOyE,WAAa,GAC/BvlB,EAAQ,IACRA,EAAQ,GAERA,EAAQ,IACRA,EAAQ,GAGZK,KAAKspB,QAAQnnB,SAASxC,E,CAG1BK,KAAKkpB,GAAKK,EAAEE,OAChB,E,iFCvCJ,UACA,6BAEA,6BACA,6BACA,6BACA,6BACA,6BAEA,UAIA,MAAMC,EACFxiB,YAAoByiB,EAA4B1P,EAAgC,CAAC,GAA7D,KAAA0P,QAAAA,EAiZZ,KAAAC,eAAkBL,IACtBA,EAAEM,iBAEF7pB,KAAK8pB,IAAM,KACX9pB,KAAK+pB,aAAe,KACpB/pB,KAAKgqB,wBAA0B,KAC/BhqB,KAAKiqB,yBAA2B,KAChCjqB,KAAKkqB,eAAiB,KACtBlqB,KAAKmqB,mBAAqB,KAC1BnqB,KAAKoqB,eAAiB,KACtBpqB,KAAKqqB,yBAA2B,KAChCrqB,KAAKsqB,mBAAqB,KAE1BtqB,KAAKuqB,YAAc,EAAE,EAGjB,KAAAC,mBAAqB,KACzBxqB,KAAKyqB,uBACLzqB,KAAK+mB,MAAM,EAGP,KAAAlJ,QAAwB,KACxB,KAAAiM,IAA6B,KAC7B,KAAAY,OAAiC,KACjC,KAAAC,cAA8B,KAE9B,KAAAZ,aAAwB,KACxB,KAAAC,wBAAuC,KACvC,KAAAC,yBAAwC,KACxC,KAAAC,eAA+B,KAE/B,KAAAU,sBAAwB,EAExB,KAAAT,mBAAwC,KACxC,KAAAC,eAAgC,KAChC,KAAAE,mBAAwC,KACxC,KAAAD,yBAAoD,KACpD,KAAAE,YAAgC,GAEhC,KAAAM,eAAiB,IAAI,UAA2C,GAChE,KAAAC,uBAAyB,EACzB,KAAAC,WAAY,EAjbhB/qB,KAAK6d,QAAU,OAAH,wBARwB,CAChCmN,MAAO,EACPC,YAAa,MACbC,cAAe,GACfC,cAAe,GACfC,YAAa,cAKVnR,GAGPja,KAAKyqB,uBAELzqB,KAAK2pB,QAAQlG,iBAAiB,mBAAoBzjB,KAAK4pB,gBACvD5pB,KAAK2pB,QAAQlG,iBAAiB,uBAAwBzjB,KAAKwqB,oBAE3DxqB,KAAK6qB,eAAe3L,MAAMna,YAAYsmB,GAAUA,EAAMvqB,WAC1D,CAEAimB,OACI,OAAK/mB,KAAK8pB,KAEV9pB,KAAKmqB,mBAAqB,IAAI,UAAkBnqB,KAAK8pB,IAAK9pB,KAAK2qB,eAC/D3qB,KAAKoqB,eAAiB,IAAI,UAAcpqB,KAAK8pB,IAAK9pB,KAAK2qB,eACvD3qB,KAAKsqB,mBAAqB,IAAI,UAAkBtqB,KAAK8pB,IAAK9pB,KAAK2qB,eAC/D3qB,KAAKqqB,yBAA2B,IAAI,UAAwBrqB,KAAK8pB,IAAK9pB,KAAK2qB,eAE3E3qB,KAAKsrB,oBAELtrB,KAAK+pB,aAAe,UAAQta,QACxBzP,KAAK8pB,IACL,EAAAyB,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eACtB,EAAAe,IAAIC,cAAcF,OAAOzrB,KAAK2qB,gBAGlC3qB,KAAK+pB,aAAa6B,MAClB5rB,KAAK+pB,aAAa8B,UAAU,aAAuC,GAEnE7rB,KAAK8rB,gCACL9rB,KAAK+rB,iCACL/rB,KAAKgsB,0BAELhsB,KAAKisB,sBAEEjsB,MAxBeA,IAyB1B,CAEAksB,QACI,MAAMC,EAAKnsB,KAAK8pB,IAKhB,GAHA9pB,KAAKosB,cACLpsB,KAAK4iB,SAEDuJ,EAWA,OAVAnsB,KAAK+pB,aAAa/B,SAClBmE,EAAGE,aAAarsB,KAAKgqB,yBACrBmC,EAAGE,aAAarsB,KAAKiqB,0BACrBkC,EAAGG,cAActsB,KAAKkqB,gBAEtBlqB,KAAKoqB,eAAemC,UACpBvsB,KAAKmqB,mBAAmBoC,UACxBvsB,KAAKsqB,mBAAmBiC,UACxBvsB,KAAKqqB,yBAAyBkC,UAEvBvsB,KAGXA,KAAK2pB,QAAQ5F,oBAAoB,mBAAoB/jB,KAAK4pB,gBAC1D5pB,KAAK2pB,QAAQ5F,oBAAoB,uBAAwB/jB,KAAKwqB,oBAE9DxqB,KAAK6qB,eAAezoB,SAASmc,GAAMA,EAAEzd,WACzC,CAEAmkB,OAAOX,EAAgBC,GAWnB,OAVAvkB,KAAKsrB,kBAAkBhH,EAAOC,GAC9BvkB,KAAKwsB,sBAEDxsB,KAAK0qB,SACL1qB,KAAKysB,uBACLzsB,KAAK0sB,iBAGL1sB,KAAK+qB,WAAW/qB,KAAK2sB,QAElB3sB,IACX,CAEA4jB,YACI,OAAO5jB,KAAK2pB,OAChB,CAEA5jB,KAAK6mB,GACD,OAAI5sB,KAAK0qB,SAIT1qB,KAAK0qB,OAASkC,EACd5sB,KAAK0qB,OAAOmC,SAAS9nB,WAAW2kB,EAAMoD,cAAe9sB,MAErDA,KAAKysB,uBAELzsB,KAAK0sB,iBARM1sB,IAWf,CAEA4iB,SACI,OAAK5iB,KAAK0qB,QAIV1qB,KAAKosB,cACLpsB,KAAK0qB,OAAOmC,SAAS1nB,cAAcukB,EAAMoD,cAAe9sB,MACxDA,KAAK0qB,OAAS,KAEd1qB,KAAK6qB,eAAezoB,SAASmc,GAAMA,EAAEzd,YACrCd,KAAK6qB,eAAenL,QAEb1f,MAVIA,IAWf,CAEA+sB,YACI,OAAO/sB,KAAK6d,OAChB,CAEAmP,aAAa/S,GACT,OAAOja,IACX,CAEQwV,qBAAqByX,EAAqDztB,GAC1EA,EAAKqrB,eAAevL,SAAW9f,EAAKqrB,eAAelL,aACnDngB,EAAKqrB,eAAezoB,SAASmc,GAAMA,EAAEzd,YACrCtB,EAAKqrB,eAAenL,SAGxBlgB,EAAKqrB,eAAe/oB,KAAKmrB,GAEzBztB,EAAKktB,eACT,CAEQjC,uBACJ,MAAMyC,EAAyC,CAC3CC,OAAO,EACPC,OAAO,EACPC,WAAW,GAOf,GAJArtB,KAAK8pB,IACD9pB,KAAK2pB,QAAQ2D,WAAW,QAASJ,IAChCltB,KAAK2pB,QAAQ2D,WAAW,qBAAsBJ,IAE9CltB,KAAK8pB,IACN,MAAM,IAAIroB,MAAM,mCAGpBzB,KAAK2qB,eAAgB,IAAA4C,QAAOvtB,KAAK8pB,IACrC,CAEQ4C,gBAC+B,IAA/B1sB,KAAK4qB,wBAIT5qB,KAAK4qB,sBAAwB4C,uBAAsB,IAAMxtB,KAAKytB,sBAClE,CAEQrB,cAC+B,IAA/BpsB,KAAK4qB,uBACL8C,qBAAqB1tB,KAAK4qB,uBAG9B5qB,KAAK4qB,sBAAwB,CACjC,CAEQ6C,oBACJ,MAAMtB,EAAKnsB,KAAK8pB,IAGhB,GAFA9pB,KAAK4qB,sBAAwB,EAEM,IAA/B5qB,KAAK6qB,eAAevL,OAKpB,YAJItf,KAAK8qB,0BAzLc,GA0LnB9qB,KAAK0sB,iBAMb1sB,KAAK8qB,uBAAyB,EAC9B9qB,KAAK0sB,gBAEL,MAAMrB,EAAQrrB,KAAK6qB,eAAetL,MAE7B4M,IAELA,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAY9tB,KAAKkqB,gBACnCiC,EAAG4B,WAAW5B,EAAG2B,WAAY,EAAG3B,EAAG6B,KAAM7B,EAAG6B,KAAM7B,EAAG8B,cAAe5C,EAAMhoB,OAE1EgoB,EAAMvqB,UAENd,KAAK+qB,WAAY,EAEjB/qB,KAAK2sB,QACT,CAEQA,QACJ,IAAK3sB,KAAK8pB,IAAK,OAEf,MAAMqC,EAAKnsB,KAAK8pB,IAEhB,IAAIoE,EAAUluB,KAAKkqB,eAEnB,IAAK,MAAMiE,KAAanuB,KAAKuqB,YACzB4D,EAAUC,OAAOF,GACjBA,EAAUC,EAAUE,aAGxBlC,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAE9B/B,EAAGmC,cACCnC,EAAG2B,WACH3B,EAAGoC,mBAC0B,SAA7BvuB,KAAK6d,QAAQoN,YAAyCkB,EAAGqC,QAAUrC,EAAGsC,QAE1EtC,EAAGmC,cACCnC,EAAG2B,WACH3B,EAAGuC,mBAC0B,SAA7B1uB,KAAK6d,QAAQoN,YAAyCkB,EAAGqC,QAAUrC,EAAGsC,QAG1EzuB,KAAK+pB,aAAa6B,MAClB5rB,KAAK+pB,aAAa4E,sBAAsB,mBAEpC3uB,KAAKgqB,wBACL,EACAmC,EAAGyC,OACH,EACA,EACA,GAGJ5uB,KAAK+pB,aAAa4E,sBAAsB,sBAEpC3uB,KAAKiqB,yBACL,EACAkC,EAAGyC,OACH,EACA,EACA,GAGJzC,EAAG0C,gBAAgB1C,EAAG2C,YAAa,MACnC3C,EAAG4C,SAAS,EAAG,EAAG5C,EAAG6C,mBAAoB7C,EAAG8C,qBAC5C9C,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGzM,MAAMyM,EAAGgD,kBAEZhD,EAAGiD,WAAWjD,EAAGkD,eAAgB,EAAG,EACxC,CAEQvD,gCACJ,IAAK9rB,KAAK8pB,IAAK,OAEf,MAAMqC,EAAKnsB,KAAK8pB,IACZwF,EAAcnD,EAAG6C,mBACjBO,EAAepD,EAAG8C,oBAClBO,EAASF,EAAc,EAAI,EAAIA,EAAc,EAC7CG,EAASF,EAAe,EAAI,EAAIA,EAAe,EAEnD,IAAIjL,EAAeC,EAAgBmL,EAAcC,EAE5C,EAAI,EAAKJ,GAAgBD,GAC1B/K,EAAS,EACTD,EAAS,EAAI,EAAKiL,EAAeC,EACjCG,EAAQ,EACRD,EAAQE,KAAKC,OAAQ,EAAI,EAAKN,GAAgB,EAAKC,IAEnDjL,EAAU+K,GAAe,EAAI,GAAMG,EACnCnL,EAAQ,EACRqL,EAASC,KAAKC,MAAMP,GAAe,EAAI,IAAM,EAAKG,EAClDC,GAAQ,GAGZ,MAAMI,EAAa,CAACJ,EAAOpL,EAAOqL,EAAOD,EAAMC,EAAOD,EAAOpL,EAAOqL,EAAQpL,EAAQmL,EAAMC,EAAQpL,GAElGvkB,KAAKgqB,wBAA0BmC,EAAG4D,eAClC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKgqB,yBACpCmC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAayR,GAAa3D,EAAGgE,YACpE,CAEQ3D,sBACCxsB,KAAK8pB,MAEV9pB,KAAK8pB,IAAIuC,aAAarsB,KAAKgqB,yBAC3BhqB,KAAK8rB,gCACT,CAEQC,iCACJ,IAAK/rB,KAAK8pB,IAAK,OAEf,MAAMqC,EAAKnsB,KAAK8pB,IAGhB9pB,KAAKiqB,yBAA2BkC,EAAG4D,eACnC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKiqB,0BACpCkC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAJL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAIoB8N,EAAGgE,YAC/E,CAEQ7E,kBAAkBhH,EAAgBC,QACjB,IAAVD,QAA2C,IAAXC,IACvCD,EAAQtkB,KAAK4jB,YAAYwM,YACzB7L,EAASvkB,KAAK4jB,YAAYyM,cAG9B,MAAMC,EAAa7P,OAAO8P,kBAAoB,EAE9CvwB,KAAK4jB,YAAYU,MAAQA,EAAQgM,EACjCtwB,KAAK4jB,YAAYW,OAASA,EAAS+L,CACvC,CAEQtE,0BACJ,IAAKhsB,KAAK8pB,IAAK,OAEf,MAAMqC,EAAKnsB,KAAK8pB,IAEX9pB,KAAKkqB,iBACNlqB,KAAKkqB,eAAiBiC,EAAGqE,iBAG7BrE,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAY9tB,KAAKkqB,gBAEnCiC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGsE,eAAgBtE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGwE,eAAgBxE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAGyE,YAAYzE,EAAG0E,oBAAqB,EAC3C,CAEQpE,uBACJ,IAAKzsB,KAAK0qB,SAAW1qB,KAAK8pB,IAAK,OAM/B,OAJA9pB,KAAKmqB,mBAAmB2G,UAAU9wB,KAAK6d,QAAQqN,eAC/ClrB,KAAKsqB,mBAAmBwG,UAAU9wB,KAAK6d,QAAQsN,eAC/CnrB,KAAKqqB,yBAAyByG,UAAU9wB,KAAK8pB,IAAIkF,mBAAoBhvB,KAAK8pB,IAAImF,qBAEtEjvB,KAAK6d,QAAQuN,aACjB,IAAK,YACDprB,KAAKoqB,eAAe0G,UAAU,aAC9B,MAEJ,IAAK,SACD9wB,KAAKoqB,eAAe0G,UAAU,UAItC,IAAIxM,EAAQtkB,KAAK0qB,OAAOqG,WACpBxM,EAASvkB,KAAK0qB,OAAOsG,YAEzB,IAAK,MAAM7C,KAAanuB,KAAKuqB,YACzB4D,EAAUlJ,OAAOX,EAAOC,GAExBD,EAAQ6J,EAAU4C,WAClBxM,EAAS4J,EAAU6C,WAE3B,CAEQ/E,sBACCjsB,KAAK8pB,MAEV9pB,KAAK+pB,aAAa6B,MAClB5rB,KAAK+pB,aAAakH,UAAU,UAAiCjxB,KAAK6d,QAAQmN,OAE1EhrB,KAAKuqB,YAAc,GAEc,SAA7BvqB,KAAK6d,QAAQuN,cACbprB,KAAKoqB,eAAerD,OACpB/mB,KAAKuqB,YAAYzoB,KAAK9B,KAAKoqB,iBAG3BpqB,KAAK6d,QAAQqN,cAAgB,IAC7BlrB,KAAKmqB,mBAAmBpD,OACxB/mB,KAAKuqB,YAAYzoB,KAAK9B,KAAKmqB,qBAG3BnqB,KAAK6d,QAAQsN,cAAgB,IAC7BnrB,KAAKsqB,mBAAmBvD,OACxB/mB,KAAKuqB,YAAYzoB,KAAK9B,KAAKsqB,qBAGE,QAA7BtqB,KAAK6d,QAAQoN,cACbjrB,KAAKqqB,yBAAyBtD,OAC9B/mB,KAAKuqB,YAAYzoB,KAAK9B,KAAKqqB,2BAG/BrqB,KAAKysB,uBACT,EAoEJ,UAAe/C,C,kGClef,UAGA,6BACA,6BAKMwH,EAAqB,CAAC,aAAc,QAAS,WAU7CC,EAAmB1Q,OAAO2Q,cAAgB3Q,OAAO4Q,mBAEvD,SAASC,EAAWC,EAAqB5tB,EAAkB,KACvD,OAAO,IAAIhC,SAAS6vB,IAChBD,EAAQjtB,MAAK,IAAMktB,MACnBttB,WAAWstB,EAAG7tB,EAAQ,GAE9B,CAEA,MAAM8tB,EACFvqB,cACI,GAmBI,KAAAwqB,qBAAuB,KAC3B,MAAMltB,EAAUxE,KAAKwE,QAErBxE,KAAK2xB,qBAAsB,EAC3BT,EAAmB9uB,SAASmf,GAAUsD,SAASd,oBAAoBxC,EAAOvhB,KAAK0xB,wBAE/E1xB,KAAK4xB,MAAMlxB,cAAa,IAAY,EAAD,0CAG/B,aAFM4wB,EAAQ9sB,EAAQ8D,UAEf,IAAI3G,SAAe6vB,GACtBttB,YAAW,IAAY,EAAD,gDACZotB,EAAQ9sB,EAAQqtB,WACtBL,GACJ,KAAG,MAEX,KAAE,EAGU,KAAAI,MAAQ,IAAI,EAAA9xB,MACZ,KAAA0E,QAAwB,KACjC,KAAAmtB,qBAAsB,EAvCpBR,EAAL,CAIAnxB,KAAKwE,QAAU,IAAI2sB,EAEnB,IACInxB,KAAKwE,QAAQstB,YAAYC,aAAe,C,CAC1C,MAAOxI,GACLyI,QAAQC,KAAK,4C,CAGjBf,EAAmB9uB,SAASmf,GAAUsD,SAASpB,iBAAiBlC,EAAOvhB,KAAK0xB,uB,CAChF,CAEAQ,gBACIhB,EAAmB9uB,SAASmf,GAAUsD,SAASd,oBAAoBxC,EAAOvhB,KAAK0xB,uBACnF,EAyBJ,IAAIS,EAAsB,IAAIV,EAwIH,UAtI3B,MACIvqB,YAAYkrB,EAAmB,EAAGC,EAAc,EAAGC,GA0G3C,KAAAC,eAAiB,KACrBrB,EAAmB9uB,SAASmf,GAAUsD,SAASd,oBAAoBxC,EAAOvhB,KAAKuyB,gBAAgB,KAE1FvyB,KAAKwyB,WAIVxyB,KAAKwyB,SAASlqB,SAEdpE,YAAW,KACPlE,KAAKyyB,OAAO/xB,cAAa,IAAOV,KAAK0yB,WAAa1yB,KAAKwyB,SAASX,UAAY7xB,KAAKwyB,SAASlqB,UAAU,GACrG,IAAG,EAGF,KAAAkqB,SAAyB,KACzB,KAAAG,QAA6B,KAC7B,KAAAC,kBAA4C,KAC5C,KAAAC,aAAkC,KAClC,KAAAC,UAAqC,KACrC,KAAAC,OAAS,IAAI9M,IACb,KAAAwM,OAAS,IAAI,EAAA3yB,MAEb,KAAA4yB,YAAa,EAEb,KAAAM,UAAW,EAjIfhzB,KAAK4yB,kBAAoB,IAAIzuB,MAAuBiuB,GACpDpyB,KAAK6yB,aAAe,IAAI1uB,MAAkBkuB,GAE1C,IAAK,IAAIxsB,EAAI,EAAGA,EAAIusB,EAAkBvsB,IAClC7F,KAAK4yB,kBAAkB/sB,GAAK,IAAI,UAAgB7F,KAAK+yB,QAGzD,IAAK,IAAIltB,EAAI,EAAGA,EAAIwsB,EAAaxsB,IAC7B7F,KAAK6yB,aAAahtB,GAAK,IAAI,UAAWysB,GAG1CtyB,KAAK8yB,UAAY,IAAI9yB,KAAK4yB,qBAAsB5yB,KAAK6yB,aACzD,CAEA9L,OACI,MAAMzgB,EAAI6rB,EACVA,EAAsB,IAAIV,EAE1BzxB,KAAKwyB,SAAWlsB,EAAE9B,QAClB8B,EAAE4rB,gBAEFlyB,KAAKyyB,OAASnsB,EAAEsrB,MAEZtrB,EAAEqrB,qBACFT,EAAmB9uB,SAASmf,GAAUsD,SAASpB,iBAAiBlC,EAAOvhB,KAAKuyB,gBAAgB,KAGhGvyB,KAAK2yB,QAAU3yB,KAAKwyB,SAASS,oBAAoBjzB,KAAK8yB,UAAUvtB,QAChEvF,KAAK2yB,QAAQO,QAAQlzB,KAAKwyB,SAASV,aAEnC9xB,KAAK8yB,UAAU1wB,SAAS+wB,GAAYA,EAAQpM,KAAK/mB,KAAKwyB,SAAUxyB,KAAK2yB,UACzE,CAEA5sB,KACIqtB,EAAuD,GACvDC,EAA+C,IAE/C,IAAIrzB,KAAKgzB,SAAT,CAIA,GAAII,EAAgB7tB,SAAWvF,KAAK4yB,kBAAkBrtB,OAClD,MAAM,IAAI9D,MACN,gDAAgDzB,KAAK4yB,kBAAkBrtB,eAAe6tB,EAAgB7tB,UAI9G,GAAI8tB,EAAW9tB,SAAWvF,KAAK6yB,aAAattB,OACxC,MAAM,IAAI9D,MACN,gDAAgDzB,KAAK6yB,aAAattB,eAAe8tB,EAAW9tB,UAIpGvF,KAAK4yB,kBAAkBxwB,SAAQ,CAAC+wB,EAASttB,IAAMstB,EAAQptB,KAAKqtB,EAAgBvtB,MAC5E7F,KAAK6yB,aAAazwB,SAAQ,CAAC+wB,EAASttB,IAAMstB,EAAQptB,KAAKstB,EAAWxtB,MAElE7F,KAAKgzB,UAAW,EAEhBhzB,KAAKsI,Q,CACT,CAEAsa,SACS5iB,KAAKgzB,WAIVhzB,KAAK8yB,UAAU1wB,SAAS+wB,GAAYA,EAAQvQ,WAE5C5iB,KAAKgzB,UAAW,EAEhBhzB,KAAKszB,QACT,CAEAC,gBAAgBJ,EAAiBK,GAC7BxzB,KAAK8yB,UAAUK,GAASI,gBAAgBC,EAC5C,CAEAF,QACI,OAAOtzB,KAAKyyB,OAAO/xB,cAAa,IAAY,EAAD,0CACnCV,KAAK0yB,aAIT1yB,KAAK0yB,YAAa,QAEZpB,EAAQtxB,KAAKwyB,SAASX,WAChC,KACJ,CAEAvpB,SACI,OAAOtI,KAAKyyB,OAAO/xB,cAAa,IAAY,EAAD,0CAClCV,KAAK0yB,aAIV1yB,KAAK0yB,YAAa,QAEZpB,EAAQtxB,KAAKwyB,SAASlqB,UAChC,KACJ,CAEA4jB,QACIlsB,KAAKyyB,OAAO/xB,cAAa,IAAMV,KAAKwyB,SAAStG,SACjD,E,iFCpIwB,UA7C5B,MACIhlB,cAqCQ,KAAAmY,QAAU,IAAIhB,aAAa,GAC3B,KAAAoV,iBAAmB,EACnB,KAAAC,YAAa,EAEb,KAAAC,OAAS,EAxCb3zB,KAAKkI,MAAM,EAAG,EAClB,CAEAA,MAAM0rB,EAAoBC,GACtB7zB,KAAK2zB,OAASC,EAAaC,EAC3B7zB,KAAK0zB,YAAa,EAClB1zB,KAAKyzB,iBAAmB,EAExB,IAAK,IAAI5tB,EAAI,EAAGA,EAAI,EAAGA,IACnB7F,KAAKqf,QAAQxZ,GAAK,CAE1B,CAEAxC,MACI,MAAMwF,GAAK,EAAI7I,KAAKyzB,kBAAoBzzB,KAAKqf,QAAQ,GAAKrf,KAAKyzB,iBAAmBzzB,KAAKqf,QAAQ,GAQ/F,OANArf,KAAKyzB,kBAAoBzzB,KAAK2zB,OAC1B3zB,KAAKyzB,iBAAmB,IACxBzzB,KAAKyzB,kBAAoB,EACzBzzB,KAAK0zB,YAAa,GAGf7qB,CACX,CAEA/G,KAAKgyB,GACD9zB,KAAKqf,QAAQ,GAAKrf,KAAKqf,QAAQ,GAC/Brf,KAAKqf,QAAQ,GAAKyU,EAElB9zB,KAAK0zB,YAAa,CACtB,CAEAK,YACI,OAAO/zB,KAAK0zB,UAChB,E,kGCnCJ,6BAEA,6BAEA,MAAMM,EACF9sB,YAAoB+sB,EAAoB,MAApB,KAAAA,kBAAAA,EA2IZ,KAAAC,kBAAoB,EACpB,KAAAC,YAAc,EACd,KAAAC,QAAU,EAEV,KAAAC,MAAkB,KAClB,KAAAC,WAAkC,KAClC,KAAAC,iBAAkB,EAElB,KAAAC,cAA+D,KAE/D,KAAAC,cAAgB,EAChB,KAAAC,iBAAmB,EACnB,KAAAC,eAAiB,EACjB,KAAAC,iBAAsD,KACtD,KAAAC,cAAmD,KAInD,KAAAC,WAAiC,IAAI,SA7JE,CAE/C/N,KAAKviB,EAAuByc,GACxBjhB,KAAKk0B,kBAAoB1vB,EAAQ8Z,WAEjCte,KAAKq0B,MAAQ7vB,EAAQuwB,aACrB/0B,KAAKq0B,MAAMW,KAAKr1B,MAAQK,KAAKo0B,QAC7Bp0B,KAAKq0B,MAAMnB,QAAQjS,GAEnBjhB,KAAKs0B,WAAa9vB,EAAQywB,sBAAsBj1B,KAAKi0B,kBAAmB,EAAG,GAC3Ej0B,KAAKm0B,YAAcn0B,KAAKs0B,WAAWY,WAEnCl1B,KAAKs0B,WAAWpB,QAAQlzB,KAAKq0B,OAC7Br0B,KAAKs0B,WAAWa,eAAiB5L,GAAKvpB,KAAKo1B,cAAc7L,GAE1C/kB,EAAQurB,aAAa,EAAG,EAAGvrB,EAAQ8Z,YAC3C+W,eAAe,GAAG1mB,IAAI,CAAC,GAClC,CAEA5I,KAAKuvB,GACDt1B,KAAK4iB,SAEL5iB,KAAKu1B,OAASD,EACdt1B,KAAKy0B,cAAgBa,EAAME,eAC3Bx1B,KAAK00B,iBAAmBY,EAAMxW,gBAC9B9e,KAAK20B,eAAiB,EACtB30B,KAAK60B,cAAgB,KACrB70B,KAAKu0B,iBAAkB,EACvBv0B,KAAKw0B,cAAgB,IAAI,UACrB5E,KAAK6F,KAAO,EAAIz1B,KAAKm0B,YAAen0B,KAAKk0B,kBAAoBl0B,KAAKy0B,cAAiBz0B,KAAK00B,mBAE5F10B,KAAKw0B,cAActV,MAAMna,YAAW2wB,GAAKA,EAAE50B,YAE3Cd,KAAKu1B,OAAO1I,SAAS9nB,WAAWivB,EAAW2B,eAAgB31B,MAE3DA,KAAK80B,WAAW5sB,MAAMlI,KAAK00B,iBAAkB10B,KAAKk0B,kBACtD,CAEAtR,SACS5iB,KAAKu1B,SAIVv1B,KAAKu1B,OAAO1I,SAAS1nB,cAAc6uB,EAAW2B,eAAgB31B,MAE1DA,KAAK60B,gBACL70B,KAAK60B,cAAc/zB,UACnBd,KAAK60B,cAAgB,MAGrB70B,KAAK40B,mBACL50B,KAAK40B,iBAAiB9zB,UACtBd,KAAK40B,iBAAmB,MAGxB50B,KAAKw0B,gBACLx0B,KAAKw0B,cAAcpyB,SAAQszB,GAAKA,EAAE50B,YAClCd,KAAKw0B,cAAc9U,QACnB1f,KAAKw0B,cAAgB,MAE7B,CAEAjB,gBAAgBC,GACZxzB,KAAKo0B,QAAUZ,CACnB,CAEQhe,sBAAsBogB,EAA6Cp2B,GACvEA,EAAKg1B,cAAc1yB,KAAK8zB,GAEnBp2B,EAAKo1B,mBACNp1B,EAAKo1B,iBAAmBp1B,EAAKg1B,cAAcjV,MAC3C/f,EAAKm1B,eAAiB,EAE9B,CAEQS,cAAc7L,GAClB,IAAKvpB,KAAKu1B,OACN,OAGJ,MAAMM,EAAetM,EAAEsM,aAAaR,eAAe,GACnD,IAAIS,EAAc,EAElB,MAAMC,EAAcC,IAChB,MAAMC,EAAyBj2B,KAAK60B,eAAiB70B,KAAK60B,cAAcxxB,MAExE,KAAOyyB,EAAcE,GACbh2B,KAAK80B,WAAWf,cAChB/zB,KAAK80B,WAAWhzB,KACX9B,KAAKu1B,QAAUv1B,KAAKu1B,OAAOW,aAAgBD,EACtC,EACAA,EAAuBj2B,KAAK20B,kBAAoB30B,KAAKo0B,SAG3Dp0B,KAAK20B,gBAAkB30B,KAAKy0B,gBAC5Bz0B,KAAK20B,eAAiB,IAI9BkB,EAAaC,KAAiB91B,KAAK80B,WAAWzxB,K,EAKlDrD,KAAK40B,kBAAoB50B,KAAKu0B,kBAC9BwB,EAAW/1B,KAAKm0B,cAAgB,GAChCn0B,KAAKu0B,iBAAkB,GAG3B,IAAI4B,EAAiBn2B,KAAK40B,kBAAoB50B,KAAK40B,iBAAiBvxB,MAEpE,KAAOyyB,EAAc91B,KAAKm0B,aAAen0B,KAAK40B,kBACtC50B,KAAK80B,WAAWf,cAChB/zB,KAAK80B,WAAWhzB,KAAKq0B,EAAen2B,KAAK20B,kBAAoB30B,KAAKo0B,SAE9Dp0B,KAAK20B,gBAAkB30B,KAAKy0B,gBAC5Bz0B,KAAK20B,eAAiB,EAElB30B,KAAK60B,eACL70B,KAAK60B,cAAc/zB,UAGvBd,KAAK60B,cAAgB70B,KAAK40B,iBAC1B50B,KAAK40B,iBAAmB50B,KAAKw0B,cAAcjV,MAE3C4W,EAAiBn2B,KAAK40B,kBAAoB50B,KAAK40B,iBAAiBvxB,QAIxEwyB,EAAaC,KAAiB91B,KAAK80B,WAAWzxB,MAG9CyyB,EAAc91B,KAAKm0B,cACnBn0B,KAAKu0B,iBAAkB,GAG3BwB,EAAW/1B,KAAKm0B,YACpB,EAuBmB,W,iFCrKvB,MAAMiC,EACFlvB,YAAoB6rB,GAAA,KAAAA,OAAAA,EAqFZ,KAAAP,SAAyB,KACzB,KAAA6D,QAAiC,KACjC,KAAAhC,MAAkB,KAClB,KAAAkB,OAAuC,KAEvC,KAAAnB,QAAU,EACV,KAAAkC,cAAgB,CA3F+B,CAEvDvP,KAAKviB,EAAuByc,GACxBjhB,KAAKwyB,SAAWhuB,EAEhBxE,KAAKq0B,MAAQr0B,KAAKwyB,SAASuC,aAC3B/0B,KAAKq0B,MAAMnB,QAAQjS,EACvB,CAEAlb,KAAKkb,GACGjhB,KAAKu1B,SAITv1B,KAAKu1B,OAAStU,EACdjhB,KAAKo0B,QAAUp0B,KAAKu1B,OAAOgB,YAC3Bv2B,KAAKw2B,cAELx2B,KAAKu1B,OAAOkB,cAAc1xB,WAAWqxB,EAAgBM,iBAAkB12B,MACvEA,KAAKu1B,OAAOoB,cAAc5xB,WAAWqxB,EAAgBQ,iBAAkB52B,MACvEA,KAAKu1B,OAAOsB,KAAK9xB,WAAWqxB,EAAgBU,QAAS92B,MACzD,CAEA4iB,SACS5iB,KAAKu1B,SAIVv1B,KAAKu1B,OAAOkB,cAActxB,cAAcixB,EAAgBM,iBAAkB12B,MAC1EA,KAAKu1B,OAAOoB,cAAcxxB,cAAcixB,EAAgBQ,iBAAkB52B,MAC1EA,KAAKu1B,OAAOsB,KAAK1xB,cAAcixB,EAAgBU,QAAS92B,MAEpDA,KAAKq2B,UACLr2B,KAAKq2B,QAAQQ,OACb72B,KAAKq2B,QAAU,MAGnBr2B,KAAKu1B,OAAS,KAClB,CAEAhC,gBAAgBC,GACZxzB,KAAKs2B,cAAgB9C,EACrBxzB,KAAKw2B,aACT,CAEQhhB,wBAAwBge,EAAgBh0B,GAC5CA,EAAK40B,QAAUZ,EACfh0B,EAAKg3B,aACT,CAEQhhB,wBAAwB0I,EAAa1e,GACzC,IAAKA,EAAKuzB,OAAOgE,IAAI7Y,GAAM,CACvB,MAAM8Y,EAAex3B,EAAK+1B,OAAOtX,UAAUC,GACvC+Y,EAAcz3B,EAAKgzB,SAASzC,aAAa,EAAGiH,EAAapY,YAAaoY,EAAalY,iBAEvFmY,EAAY5B,eAAe,GAAG1mB,IAAIqoB,EAAanY,cAC/Crf,EAAKuzB,OAAOpkB,IAAIuP,EAAK+Y,E,CAGzB,MAAMjY,EAASxf,EAAKuzB,OAAO1vB,IAAI6a,GAC3BuN,EAASjsB,EAAKgzB,SAAS0E,qBAEvB13B,EAAK62B,SACL72B,EAAK62B,QAAQQ,OAGjBpL,EAAO0L,MAAO,EACd1L,EAAOzM,OAASA,EAChByM,EAAOyH,QAAQ1zB,EAAK60B,OACpB5I,EAAO2L,QAEP53B,EAAK62B,QAAU5K,CACnB,CAEQjW,eAAe/Q,EAAejF,GAC9BA,EAAK62B,UACL72B,EAAK62B,QAAQQ,OACbr3B,EAAK62B,QAAU,KAEvB,CAEQG,cACJx2B,KAAKq0B,MAAMW,KAAKr1B,MAAQK,KAAKo0B,QAAUp0B,KAAKs2B,aAChD,EAWwB,W,uFC5D5B,kBAAuBhiB,EAAe2M,GAClC,MAAO,CACH4H,KAAM,SACNvU,QACA2M,SAER,EAEA,gBAAqB3M,EAAe2U,EAAYhI,GAC5C,MAAO,CACH4H,KAAM,OACNvU,QACA2U,OACAhI,SAER,C,gECzBA,UA1BA,oBAsBY,KAAAtQ,QAAS,EACT,KAAA0mB,QAAS,CACrB,CAvBItd,OAAO3T,GACCA,IAAUpG,KAAK2Q,SAInB3Q,KAAK2Q,OAASvK,EACdpG,KAAKq3B,QAAS,EAClB,CAEA/P,SAASlhB,GACLpG,KAAK2Q,OAASvK,EACdpG,KAAKq3B,QAAS,CAClB,CAEA5zB,KAAK2jB,GACGpnB,KAAKq3B,SACLjQ,EAAMrN,OAAO/Z,KAAK2Q,QAClB3Q,KAAKq3B,QAAS,EAEtB,E,0FCtBJ,gBAEa,EAAA1Q,eAAiC,EAC1C,IAAArB,QAAO,GAAI,OACX,IAAAA,QAAO,GAAI,SACX,IAAAA,QAAO,GAAI,SACX,IAAAA,QAAO,GAAI,UAEX,IAAAA,QAAO,EAAG,WACV,IAAAA,QAAO,EAAG,YAEP,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAIiD,KAAI1iB,IAAK,IAAAyf,QAAOzf,EAAG,aACxC,CAAC,EAAG,EAAG,EAAG,GAAG0iB,KAAI1iB,IAAK,IAAAyf,QAAOzf,EAAG,YAEnC,IAAAkjB,MAAK,EAAG,WAAF,SACN,IAAAA,MAAK,EAAG,WAAF,UACN,IAAAA,MAAK,EAAG,WAAF,OACN,IAAAA,MAAK,EAAG,WAAF,SAEN,IAAAA,MAAK,EAAG,WAAF,SACN,IAAAA,MAAK,EAAG,WAAF,UACN,IAAAA,MAAK,EAAG,WAAF,OACN,IAAAA,MAAK,EAAG,WAAF,SAGV,UAAe,EAAApC,c,eClBf,SAAS2Q,EAA8BnL,EAA2BtD,GAC9D,MAAMqF,EAAU/B,EAAGqE,gBACb+G,EAAcpL,EAAGqL,oBAEvBrL,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAG4B,WAAW5B,EAAG2B,WAAY,EAAG3B,EAAG6B,KAAM,GAAI,GAAI,EAAG7B,EAAG6B,KAAMnF,EAAM,MAEnEsD,EAAG0C,gBAAgB1C,EAAG2C,YAAayI,GACnCpL,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAYI,EAAS,GAEtF,MAAMyJ,EAAWxL,EAAGyL,uBAAuBzL,EAAG2C,aAK9C,OAHA3C,EAAG0L,kBAAkBN,GACrBpL,EAAGG,cAAc4B,GAEVyJ,IAAaxL,EAAG2L,oBAC3B,CAEA,SAASC,EAA0B5L,GAE/B,OADAA,EAAG6L,aAAa,8BACX7L,EAAG6L,aAAa,sBAEdV,EAA8BnL,EAAIA,EAAGyC,MAChD,CAEA,SAASqJ,EAA8B9L,GACnCA,EAAG6L,aAAa,+BAEhB,MAAME,EAAe/L,EAAG6L,aAAa,0BACrC,QAAKE,GAIEZ,EAA8BnL,EAAI+L,EAAaC,eAC1D,CAEA,SAASC,EAAwBjM,EAA2BkM,EAAoBC,GAC5E,MAAMC,EAASpM,EAAGqM,yBAAyBH,EAAYC,GAEvD,QAASC,GAAUA,EAAOE,UAAY,CAC1C,C,iEAIA,kBAAuBtM,EAA4B,MAC/C,IAAKA,EAAI,CACL,MAAMuM,EAAS7T,SAAS8T,cAAc,UACtCD,EAAOpU,MAAQ,GACfoU,EAAOnU,OAAS,GAEhB4H,EAAKuM,EAAOpL,WAAW,UAAaoL,EAAOpL,WAAW,qB,CAG1D,OAAKnB,EAEE,CACHyM,cAAeb,EAA0B5L,GACzC0M,kBAAmBZ,EAA8B9L,GACjD2M,WAAYV,EAAwBjM,EAAIA,EAAG4M,gBAAiB5M,EAAG6M,YAC/DC,WAAYb,EAAwBjM,EAAIA,EAAG+M,cAAe/M,EAAG6M,aANjD,IAQpB,C,wECpEA,E,OAAA,yBACA,UAkKA,UA/JA,MACI9xB,YAAoB4iB,EAAoCa,GAApC,KAAAb,IAAAA,EAAoC,KAAAa,cAAAA,EA6IhD,KAAAwO,OAAS,EACT,KAAAC,QAAU,EAEV,KAAAC,WAAa,EACb,KAAAC,YAAc,EACd,KAAAC,SAAW,EACX,KAAAC,UAAY,EAEZ,KAAAC,SAAyB,KACzB,KAAAC,SAAoB,KACpB,KAAAC,aAAiC,KACjC,KAAA3P,wBAAuC,KACvC,KAAAC,yBAAwC,KAExC,KAAA2P,cAAe,CA3J+D,CAEtF7S,OACI,GAAI/mB,KAAK45B,aAAc,OAEvB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK25B,aAAexN,EAAGqL,oBACvBx3B,KAAK05B,SAAW,UAAQjqB,QAAQ0c,EAAI,EAAAZ,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eAAgB,EAAAe,IAAImO,KAAKpO,OAAOzrB,KAAK2qB,gBAE/F3qB,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAAS7N,UAAU,aAA8B,GAEtD7rB,KAAKgqB,wBAA0BmC,EAAG4D,eAClC/vB,KAAKiqB,yBAA2BkC,EAAG4D,eAEnC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKgqB,yBACpCmC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK8N,EAAGgE,aAElFhE,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKiqB,0BACpCkC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK8N,EAAGgE,aAE9EnwB,KAAK45B,cAAe,CACxB,CAEArN,UACI,IAAKvsB,KAAK45B,aAAc,OAExB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS1R,SACdmE,EAAG0L,kBAAkB73B,KAAK25B,cAC1BxN,EAAGE,aAAarsB,KAAKgqB,yBACrBmC,EAAGE,aAAarsB,KAAKiqB,0BAEjBjqB,KAAKy5B,UAAUtN,EAAGG,cAActsB,KAAKy5B,UAEzCz5B,KAAK45B,cAAe,CACxB,CAEAxL,OAAOF,GACH,MAAM/B,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS9N,MAEd5rB,KAAK05B,SAAS/K,sBAAsB,mBAEhC3uB,KAAKgqB,wBACL,EACAmC,EAAGyC,OACH,EACA,EACA,GAGJ5uB,KAAK05B,SAAS/K,sBAAsB,sBAEhC3uB,KAAKiqB,yBACL,EACAkC,EAAGyC,OACH,EACA,EACA,GAGJzC,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAG0C,gBAAgB1C,EAAG2C,YAAa9uB,KAAK25B,cACxCxN,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAY9tB,KAAKy5B,SAAU,GAE5FtN,EAAG4C,SAAS,EAAG,EAAG/uB,KAAKm5B,OAAQn5B,KAAKo5B,SACpCjN,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGzM,MAAMyM,EAAGgD,kBAEZhD,EAAGiD,WAAWjD,EAAGkD,eAAgB,EAAG,EACxC,CAEA0B,WACI,OAAO/wB,KAAKm5B,MAChB,CAEAnI,YACI,OAAOhxB,KAAKo5B,OAChB,CAEA/K,aACI,OAAOruB,KAAKy5B,QAChB,CAEAxU,OAAOX,EAAeC,GAClBvkB,KAAKq5B,WAAa/U,EAClBtkB,KAAKs5B,YAAc/U,EAEnBvkB,KAAK85B,cACT,CAEAhJ,UAAUiJ,EAAiBC,GACvBh6B,KAAKu5B,SAAWQ,EAChB/5B,KAAKw5B,UAAYQ,EAEjBh6B,KAAK85B,cACT,CAEQA,eACJ,GACI95B,KAAKq5B,YAAc,GACnBr5B,KAAKs5B,aAAe,GACpBt5B,KAAKu5B,UAAY,GACjBv5B,KAAKw5B,WAAa,IACjBx5B,KAAK45B,aAEN,OAEJ55B,KAAKm5B,OACDn5B,KAAKu5B,SAAWv5B,KAAKq5B,WACfzJ,KAAKC,MAAM7vB,KAAKu5B,SAAWv5B,KAAKq5B,YAAcr5B,KAAKq5B,WACnDr5B,KAAKq5B,WACfr5B,KAAKo5B,QACDp5B,KAAKw5B,UAAYx5B,KAAKs5B,YAChB1J,KAAKC,MAAM7vB,KAAKw5B,UAAYx5B,KAAKs5B,aAAet5B,KAAKs5B,YACrDt5B,KAAKs5B,YAEf,MAAMnN,EAAKnsB,KAAK8pB,IAEZ9pB,KAAKy5B,UAAUtN,EAAGG,cAActsB,KAAKy5B,UACzCz5B,KAAKy5B,SAAWtN,EAAGqE,gBAEnBrE,EAAGwB,cAAcxB,EAAGyB,UAEpBzB,EAAG0B,YAAY1B,EAAG2B,WAAY9tB,KAAKy5B,UACnCtN,EAAG4B,WAAW5B,EAAG2B,WAAY,EAAG3B,EAAG6B,KAAMhuB,KAAKm5B,OAAQn5B,KAAKo5B,QAAS,EAAGjN,EAAG6B,KAAM7B,EAAG8B,cAAe,MAElG9B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGsE,eAAgBtE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGwE,eAAgBxE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,QAC9D,E,wEChJJ,E,OAAA,yBACA,UAkNA,UA/MA,MACItnB,YAAoB4iB,EAAoCa,GAApC,KAAAb,IAAAA,EAAoC,KAAAa,cAAAA,EA0LhD,KAAAyO,QAAU,EAEV,KAAAa,cAAyB,KACzB,KAAAC,cAAyB,KACzB,KAAAC,aAA6B,KAC7B,KAAAC,aAA6B,KAC7B,KAAAT,aAAiC,KACjC,KAAA3P,wBAAuC,KACvC,KAAAC,yBAAwC,KAExC,KAAA2P,cAAe,CApM+D,CAEtF7S,OACI,GAAI/mB,KAAK45B,aAAc,OAEvB,MAAMzN,EAAKnsB,KAAK8pB,IAEhBqC,EAAG6L,aAAa,4BAChB7L,EAAG6L,aAAa,qBAEhBh4B,KAAKi6B,cAAgB,UAAQxqB,QACzB0c,EACA,EAAAZ,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eACtB,EAAAe,IAAI2O,UAAU5O,OAAOzrB,KAAK2qB,gBAE9B3qB,KAAKk6B,cAAgB,UAAQzqB,QACzB0c,EACA,EAAAZ,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eACtB,EAAAe,IAAI4O,UAAU7O,OAAOzrB,KAAK2qB,gBAG9B3qB,KAAKi6B,cAAcrO,MACnB5rB,KAAKi6B,cAAcpO,UAAU,aAAmC,GAEhE7rB,KAAKk6B,cAActO,MACnB5rB,KAAKk6B,cAAcrO,UAAU,aAAmC,GAEhE7rB,KAAK25B,aAAexN,EAAGqL,oBAEvBx3B,KAAKgqB,wBAA0BmC,EAAG4D,eAClC/vB,KAAKiqB,yBAA2BkC,EAAG4D,eAEnC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKgqB,yBACpCmC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK8N,EAAGgE,aAElFhE,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKiqB,0BACpCkC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK8N,EAAGgE,aAE9EnwB,KAAK45B,cAAe,CACxB,CAEArN,UACI,IAAKvsB,KAAK45B,aAAc,OAExB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAKi6B,cAAcjS,SACnBhoB,KAAKk6B,cAAclS,SAEnBmE,EAAG0L,kBAAkB73B,KAAK25B,cAE1BxN,EAAGG,cAActsB,KAAKm6B,cACtBhO,EAAGG,cAActsB,KAAKo6B,cAEtBjO,EAAGE,aAAarsB,KAAKgqB,yBACrBmC,EAAGE,aAAarsB,KAAKiqB,0BAErBjqB,KAAK45B,cAAe,CACxB,CAEAxL,OAAOF,GACHluB,KAAKu6B,MAAMrM,EAASluB,KAAKm6B,aAAcn6B,KAAKi6B,cAAe,KAC3Dj6B,KAAKu6B,MAAMv6B,KAAKm6B,aAAcn6B,KAAKo6B,aAAcp6B,KAAKk6B,cAAe,IACzE,CAEAnJ,WACI,OAAO,GACX,CAEAC,YACI,OAAOhxB,KAAKo5B,OAChB,CAEA/K,aACI,OAAOruB,KAAKo6B,YAChB,CAEAnV,OAAOX,EAAeC,GAClB,IAAKvkB,KAAK45B,aAAc,OAExB,GAAc,MAAVtV,EACA,MAAM,IAAI7iB,MAAM,oDAGpBzB,KAAKo5B,QAAU7U,EAEf,MAAM4H,EAAKnsB,KAAK8pB,IAEZ9pB,KAAKm6B,cAAchO,EAAGG,cAActsB,KAAKm6B,cACzCn6B,KAAKo6B,cAAcjO,EAAGG,cAActsB,KAAKo6B,cAE7Cp6B,KAAKm6B,aAAehO,EAAGqE,gBACvBxwB,KAAKo6B,aAAejO,EAAGqE,gBAEvBrE,EAAGwB,cAAcxB,EAAGyB,UAEpB,IAAK,MAAMM,IAAW,CAACluB,KAAKm6B,aAAcn6B,KAAKo6B,cAC3CjO,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAG4B,WACC5B,EAAG2B,WACH,EACA3B,EAAG6B,KACHE,IAAYluB,KAAKo6B,aAAe,IAAM,IACtC7V,EACA,EACA4H,EAAG6B,KACHE,IAAYluB,KAAKm6B,aAAen6B,KAAKw6B,eAAiBrO,EAAG8B,cACzD,MAGJ9B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGsE,eAAgBtE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGwE,eAAgBxE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGsC,QAC1DtC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGsC,OAElE,CAEAqC,UAAU2J,GACDz6B,KAAK45B,eAEV55B,KAAKi6B,cAAcrO,MAEN,cAAT6O,GACAz6B,KAAKi6B,cAAchJ,UAAU,gBAAmC,GAChEjxB,KAAKi6B,cAAchJ,UAAU,aAAgC,KAE7DjxB,KAAKi6B,cAAchJ,UAAU,gBAAmC,GAChEjxB,KAAKi6B,cAAchJ,UAAU,aAAgC,IAErE,CAEQsJ,MAAMG,EAAyBC,EAA0BC,EAAkBtW,GAC/E,MAAM6H,EAAKnsB,KAAK8pB,IAEhB8Q,EAAQhP,MAERgP,EAAQjM,sBAAsB,mBAE1B3uB,KAAKgqB,wBACL,EACAmC,EAAGyC,OACH,EACA,EACA,GAGJgM,EAAQjM,sBAAsB,sBAE1B3uB,KAAKiqB,yBACL,EACAkC,EAAGyC,OACH,EACA,EACA,GAGJzC,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAY4M,GAC9BvO,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAG0C,gBAAgB1C,EAAG2C,YAAa9uB,KAAK25B,cACxCxN,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAY6M,EAAY,GAEzFxO,EAAG4C,SAAS,EAAG,EAAGzK,EAAOtkB,KAAKo5B,SAE9BjN,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGzM,MAAMyM,EAAGgD,kBAEZhD,EAAGiD,WAAWjD,EAAGkD,eAAgB,EAAG,EACxC,CAEQmL,eACJ,MAAMrO,EAAKnsB,KAAK8pB,IAEhB,OAAI9pB,KAAK2qB,cAAciO,cACZzM,EAAGyC,MAGV5uB,KAAK2qB,cAAckO,kBACZ1M,EAAG6L,aAAa,0BAA0BG,eAG9ChM,EAAG8B,aACd,E,wEC7LJ,E,OAAA,yBACA,UAoKA,UAjKA,MACI/mB,YAAoB4iB,EAAoCa,GAApC,KAAAb,IAAAA,EAAoC,KAAAa,cAAAA,EAmJhD,KAAAwO,OAAS,EACT,KAAAC,QAAU,EAEV,KAAAyB,UAA0B,KAC1B,KAAAC,UAA0B,KAC1B,KAAAnB,aAAiC,KACjC,KAAAD,SAAoB,KACpB,KAAA1P,wBAAuC,KACvC,KAAAC,yBAAwC,KAExC,KAAA2P,cAAe,CA7J+D,CAEtF7S,OACI,GAAI/mB,KAAK45B,aAAc,OAEvB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK25B,aAAexN,EAAGqL,oBACvBx3B,KAAK05B,SAAW,UAAQjqB,QACpB0c,EACA,EAAAZ,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eACtB,EAAAe,IAAIqP,SAAStP,OAAOzrB,KAAK2qB,gBAG7B3qB,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAAS7N,UAAU,qBAAqC,GAC7D7rB,KAAK05B,SAAS7N,UAAU,0BAA0C,GAElE7rB,KAAKgqB,wBAA0BmC,EAAG4D,eAClC/vB,KAAKiqB,yBAA2BkC,EAAG4D,eAEnC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKgqB,yBACpCmC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK8N,EAAGgE,aAElFhE,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKiqB,0BACpCkC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK8N,EAAGgE,aAE9EnwB,KAAK45B,cAAe,CACxB,CAEArN,UACI,IAAKvsB,KAAK45B,aAAc,OAExB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS1R,SACdmE,EAAG0L,kBAAkB73B,KAAK25B,cAC1BxN,EAAGE,aAAarsB,KAAKgqB,yBACrBmC,EAAGE,aAAarsB,KAAKiqB,0BAEjBjqB,KAAK66B,WAAW1O,EAAGG,cAActsB,KAAK66B,WACtC76B,KAAK86B,WAAW3O,EAAGG,cAActsB,KAAK86B,WAE1C96B,KAAK45B,cAAe,CACxB,CAEAxL,OAAOF,GACH,MAAM/B,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS9N,MAEd5rB,KAAK05B,SAAS/K,sBAAsB,mBAEhC3uB,KAAKgqB,wBACL,EACAmC,EAAGyC,OACH,EACA,EACA,GAGJ5uB,KAAK05B,SAAS/K,sBAAsB,sBAEhC3uB,KAAKiqB,yBACL,EACAkC,EAAGyC,OACH,EACA,EACA,GAGJzC,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAGwB,cAAcxB,EAAG6O,UACpB7O,EAAG0B,YAAY1B,EAAG2B,WAAY9tB,KAAK66B,WACnC1O,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAG0C,gBAAgB1C,EAAG2C,YAAa9uB,KAAK25B,cACxCxN,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAY9tB,KAAK86B,UAAW,GAE7F3O,EAAG4C,SAAS,EAAG,EAAG/uB,KAAKm5B,OAAQn5B,KAAKo5B,SACpCjN,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGzM,MAAMyM,EAAGgD,kBAEZhD,EAAGiD,WAAWjD,EAAGkD,eAAgB,EAAG,GAEpC,MAAM4L,EAAIj7B,KAAK86B,UACf96B,KAAK86B,UAAY96B,KAAK66B,UACtB76B,KAAK66B,UAAYI,CACrB,CAEAlK,WACI,OAAO/wB,KAAKm5B,MAChB,CAEAnI,YACI,OAAOhxB,KAAKo5B,OAChB,CAEA/K,aACI,OAAOruB,KAAK66B,SAChB,CAEA5V,OAAOX,EAAeC,GAClB,IAAKvkB,KAAK45B,aAAc,OAExB55B,KAAKm5B,OAAS7U,EACdtkB,KAAKo5B,QAAU7U,EAEf,MAAM4H,EAAKnsB,KAAK8pB,IAEZ9pB,KAAK66B,WAAW1O,EAAGG,cAActsB,KAAK66B,WACtC76B,KAAK86B,WAAW3O,EAAGG,cAActsB,KAAK86B,WAE1C96B,KAAK66B,UAAY1O,EAAGqE,gBACpBxwB,KAAK86B,UAAY3O,EAAGqE,gBAEpBrE,EAAG0C,gBAAgB1C,EAAG2C,YAAa9uB,KAAK25B,cACxCxN,EAAG4C,SAAS,EAAG,EAAGzK,EAAOC,GACzB4H,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGwB,cAAcxB,EAAGyB,UAEpB,IAAK,MAAMM,IAAW,CAACluB,KAAK66B,UAAW76B,KAAK86B,WACxC3O,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAG4B,WAAW5B,EAAG2B,WAAY,EAAG3B,EAAG6B,KAAM1J,EAAOC,EAAQ,EAAG4H,EAAG6B,KAAM7B,EAAG8B,cAAe,MAEtF9B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGsE,eAAgBtE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGwE,eAAgBxE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAYI,EAAS,GACtF/B,EAAGzM,MAAMyM,EAAGgD,iBAEpB,CAEA2B,UAAUoK,GACDl7B,KAAK45B,eAEV55B,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAASzI,UAAU,kBAA4BiK,GACxD,E,eCvJJ,SAASC,EAAchP,EAA2BtD,EAAc4C,GAC5D,MAAM2P,EAASjP,EAAGkP,aAAaxS,GAK/B,GAHAsD,EAAGmP,aAAaF,EAAQ3P,GACxBU,EAAGgP,cAAcC,IAEZjP,EAAGoP,mBAAmBH,EAAQjP,EAAGqP,gBAClC,MAAM,IAAI/5B,MAAM,gCAAgC0qB,EAAGsP,iBAAiBL,SAAc3P,KAGtF,OAAO2P,CACX,C,iDAEA,MAAMM,EACF,YACY5R,EACA4P,EACAiC,EACAC,GAHA,KAAA9R,IAAAA,EACA,KAAA4P,SAAAA,EACA,KAAAiC,KAAAA,EACA,KAAAC,KAAAA,EA4FJ,KAAAC,oBAAsB,IAAI5V,IAC1B,KAAA6V,kBAAoB,IAAI7V,GA5F7B,CAEHzQ,eACI2W,EACA4P,EACAC,EACAC,EAAiC,CAAEC,iBAAkB,IAErD,MAAM3Q,EAAM4P,EAAchP,EAAIA,EAAG+M,cAAe6C,GAC1CrQ,EAAMyP,EAAchP,EAAIA,EAAG4M,gBAAiBiD,GAC5CpB,EAAUzO,EAAGgQ,gBAEnB,IAAK,MAAMC,KAAU38B,OAAO6oB,KAAK2T,GAC7B9P,EAAGkQ,mBAAmBzB,EAASqB,EAAOG,GAASA,GAOnD,GAJAjQ,EAAGmQ,aAAa1B,EAASrP,GACzBY,EAAGmQ,aAAa1B,EAASlP,GACzBS,EAAGoQ,YAAY3B,IAEVzO,EAAGqQ,oBAAoB5B,EAASzO,EAAGsQ,aACpC,MAAM,IAAIh7B,MAAM,8BAA8B0qB,EAAGuQ,kBAAkB9B,MAGvE,OAAO,IAAIc,EAAQvP,EAAIyO,EAASrP,EAAKG,EACzC,CAEA1D,SACI,MAAMmE,EAAKnsB,KAAK8pB,IAEhBqC,EAAGwQ,cAAc38B,KAAK05B,UACtBvN,EAAGyQ,aAAa58B,KAAK27B,MACrBxP,EAAGyQ,aAAa58B,KAAK47B,KACzB,CAEAhQ,MACI5rB,KAAK8pB,IAAI+S,WAAW78B,KAAK05B,SAC7B,CAEAoD,kBAAkBC,GACd,IAAK/8B,KAAK67B,oBAAoB9E,IAAIgG,GAAO,CACrC,MAAMC,EAAWh9B,KAAK8pB,IAAIgT,kBAAkB98B,KAAK05B,SAAUqD,GAE3D,GAAIC,EAAW,EACX,MAAM,IAAIv7B,MAAM,qBAAqBs7B,KAGzC/8B,KAAK67B,oBAAoBltB,IAAIouB,EAAMC,E,CAGvC,OAAOh9B,KAAK67B,oBAAoBx4B,IAAI05B,EACxC,CAEAE,mBAAmBF,GACf,IAAK/8B,KAAK87B,kBAAkB/E,IAAIgG,GAAO,CACnC,MAAMC,EAAWh9B,KAAK8pB,IAAImT,mBAAmBj9B,KAAK05B,SAAUqD,GAE5D,GAAiB,OAAbC,EACA,MAAM,IAAIv7B,MAAM,mBAAmBs7B,KAGvC/8B,KAAK87B,kBAAkBntB,IAAIouB,EAAMC,E,CAGrC,OAAOh9B,KAAK87B,kBAAkBz4B,IAAI05B,EACtC,CAEApO,sBACIuO,EACAle,EACAM,EACAuJ,EACAsU,EACAC,EACA3e,GAEA,MAAM0N,EAAKnsB,KAAK8pB,IAEhBqC,EAAG6D,WAAW7D,EAAG8D,aAAcjR,GAC/BmN,EAAGkR,oBAAoBr9B,KAAK88B,kBAAkBI,GAAY5d,EAAMuJ,EAAMsU,EAAYC,EAAQ3e,GAC1F0N,EAAGmR,wBAAwBt9B,KAAK88B,kBAAkBI,GACtD,CAEArR,UAAU0R,EAAiB59B,GACvBK,KAAK8pB,IAAI+B,UAAU7rB,KAAKi9B,mBAAmBM,GAAU59B,EACzD,CAEAsxB,UAAUsM,EAAiB59B,GACvBK,KAAK8pB,IAAImH,UAAUjxB,KAAKi9B,mBAAmBM,GAAU59B,EACzD,EAMJ,UAAe+7B,C,wECjHf,E,OAAA,yBACA,UAgJA,UA7IA,MACIx0B,YAAoB4iB,EAAoCa,GAApC,KAAAb,IAAAA,EAAoC,KAAAa,cAAAA,EAgIhD,KAAAwO,OAAS,EACT,KAAAC,QAAU,EAEV,KAAAK,SAAyB,KACzB,KAAAC,SAAoB,KACpB,KAAAC,aAAiC,KACjC,KAAA3P,wBAAuC,KACvC,KAAAC,yBAAwC,KAExC,KAAA2P,cAAe,CAzI+D,CAEtF7S,OACI,GAAI/mB,KAAK45B,aAAc,OAEvB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK25B,aAAexN,EAAGqL,oBACvBx3B,KAAK05B,SAAW,UAAQjqB,QACpB0c,EACA,EAAAZ,IAAIC,MAAMC,OAAOzrB,KAAK2qB,eACtB,EAAAe,IAAI8R,UAAU/R,OAAOzrB,KAAK2qB,gBAG9B3qB,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAAS7N,UAAU,aAAmC,GAE3D7rB,KAAKgqB,wBAA0BmC,EAAG4D,eAClC/vB,KAAKiqB,yBAA2BkC,EAAG4D,eAEnC5D,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKgqB,yBACpCmC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK8N,EAAGgE,aAElFhE,EAAG6D,WAAW7D,EAAG8D,aAAcjwB,KAAKiqB,0BACpCkC,EAAG+D,WAAW/D,EAAG8D,aAAc,IAAI5R,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK8N,EAAGgE,aAE9EnwB,KAAK45B,cAAe,CACxB,CAEArN,UACI,IAAKvsB,KAAK45B,aAAc,OAExB,MAAMzN,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS1R,SACdmE,EAAG0L,kBAAkB73B,KAAK25B,cAC1BxN,EAAGE,aAAarsB,KAAKgqB,yBACrBmC,EAAGE,aAAarsB,KAAKiqB,0BAEjBjqB,KAAKy5B,UAAUtN,EAAGG,cAActsB,KAAKy5B,UAEzCz5B,KAAK45B,cAAe,CACxB,CAEAxL,OAAOF,GACH,MAAM/B,EAAKnsB,KAAK8pB,IAEhB9pB,KAAK05B,SAAS9N,MAEd5rB,KAAK05B,SAAS/K,sBAAsB,mBAEhC3uB,KAAKgqB,wBACL,EACAmC,EAAGyC,OACH,EACA,EACA,GAGJ5uB,KAAK05B,SAAS/K,sBAAsB,sBAEhC3uB,KAAKiqB,yBACL,EACAkC,EAAGyC,OACH,EACA,EACA,GAGJzC,EAAGwB,cAAcxB,EAAGyB,UACpBzB,EAAG0B,YAAY1B,EAAG2B,WAAYI,GAC9B/B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DrC,EAAG0C,gBAAgB1C,EAAG2C,YAAa9uB,KAAK25B,cACxCxN,EAAGsL,qBAAqBtL,EAAG2C,YAAa3C,EAAGuL,kBAAmBvL,EAAG2B,WAAY9tB,KAAKy5B,SAAU,GAE5FtN,EAAG4C,SAAS,EAAG,EAAG/uB,KAAKm5B,OAAQ,EAAIn5B,KAAKo5B,SACxCjN,EAAG+C,WAAW,EAAG,EAAG,EAAG,GACvB/C,EAAGzM,MAAMyM,EAAGgD,kBAEZhD,EAAGiD,WAAWjD,EAAGkD,eAAgB,EAAG,EACxC,CAEA0B,WACI,OAAO/wB,KAAKm5B,MAChB,CAEAnI,YACI,OAAO,EAAIhxB,KAAKo5B,OACpB,CAEA/K,aACI,OAAOruB,KAAKy5B,QAChB,CAEAxU,OAAOX,EAAeC,GAClB,IAAKvkB,KAAK45B,aAAc,OAExB55B,KAAKm5B,OAAS7U,EACdtkB,KAAKo5B,QAAU7U,EAEf,MAAM4H,EAAKnsB,KAAK8pB,IAEZ9pB,KAAKy5B,UAAUtN,EAAGG,cAActsB,KAAKy5B,UACzCz5B,KAAKy5B,SAAWtN,EAAGqE,gBAEnBrE,EAAGwB,cAAcxB,EAAGyB,UAEpBzB,EAAG0B,YAAY1B,EAAG2B,WAAY9tB,KAAKy5B,UACnCtN,EAAG4B,WAAW5B,EAAG2B,WAAY,EAAG3B,EAAG6B,KAAM1J,EAAO,EAAIC,EAAQ,EAAG4H,EAAG6B,KAAM7B,EAAG8B,cAAe,MAE1F9B,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGsE,eAAgBtE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGwE,eAAgBxE,EAAGuE,eACtDvE,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGoC,mBAAoBpC,EAAGqC,SAC1DrC,EAAGmC,cAAcnC,EAAG2B,WAAY3B,EAAGuC,mBAAoBvC,EAAGqC,SAE1DxuB,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAASzI,UAAU,WAA8B,EAAIjxB,KAAKo5B,QACnE,CAEAtI,UAAUoK,GACDl7B,KAAK45B,eAEV55B,KAAK05B,SAAS9N,MACd5rB,KAAK05B,SAASzI,UAAU,UAA6B,EAAIiK,GAC7D,E,eClIJ,SAASuC,EAAaC,GAClB,MAAO,aAAaA,EAAazE,WAAa,QAAU,kBAC5D,C,oEAMA,SAAiB1N,GACb,IAAiBC,GAAjB,SAAiBA,GACA,EAAAC,OAAUiS,GAA+B,iBAN9D,SAAsBA,GAClB,MAAO,aAAaA,EAAazE,WAAa,QAAU,kBAC5D,CAKc0E,CAAaD,qUAiBtB,CAnBD,CAAiBlS,EAAA,EAAAA,QAAA,EAAAA,MAAK,IAoBzB,CArBD,CAAiB,EAAAD,MAAA,EAAAA,IAAG,KAuBpB,SAAiBG,GACb,IAAiBmO,EAkBAlO,EAsBAoP,EAqCAV,EAsFAC,EAuIAkD,GA1SjB,SAAiB3D,GACA,EAAApO,OAAUiS,GAA+B,iBAChDD,EAAaC,mPActB,CAhBD,CAAiB7D,EAAA,EAAAA,OAAA,EAAAA,KAAI,KAkBrB,SAAiBlO,GACA,EAAAF,OAAUiS,GAA+B,iBAChDD,EAAaC,iVAkBtB,CApBD,CAAiB/R,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KAsB9B,SAAiBoP,GACA,EAAAtP,OAAUiS,GAA+B,iBAChDD,EAAaC,+6BAiCtB,CAnCD,CAAiB3C,EAAA,EAAAA,WAAA,EAAAA,SAAQ,KAqCzB,SAAiBV,GACA,EAAA5O,OAAUiS,GAA+B,iBAChDD,EAAaC,0nBA0BXA,EAAa9E,eAAiB8E,EAAa7E,kBACrC,GACA,qkDA4CF6E,EAAa9E,eAAiB8E,EAAa7E,kBAAoB,iBAAmB,uCAUjG,CApFD,CAAiBwB,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAsF1B,SAAiBC,GACb,MAAMsD,EAAa,CACf,QACA,SACA,SACA,QACA,SACA,SACA,SACA,QACA,UACA,UACA,SACA,UACA,UACA,WACA,YACC,WACA,YACA,WACA,WACD,UACA,WACA,WACA,SACA,WACA,YAGEC,EAAe,CACjB,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,YACC,YACA,YACA,UACD,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,YAGJ,SAASC,EAAYJ,EAA4BK,GAC7C,OAAOL,EAAa9E,eAAiB8E,EAAa7E,kBAAoB,GAAGkF,QAAa,UAAUA,IACpG,CAEa,EAAAtS,OAAUiS,GAA+B,iBAChDD,EAAaC,oYAgBXA,EAAa9E,eAAiB8E,EAAa7E,kBACrC,GACA,q9BAwBAiF,EAAYJ,EAAc,kNAO9B,IAAIv5B,MAAM,IACP65B,KAAK,GACLzV,KACG,CAAC0V,EAAGp4B,IAAM,kEAEEA,EAAI,sBAAsB,GAAKA,uCACpC+3B,EAAW/3B,OAAOg4B,EAAah4B,OAAOg4B,EAAah4B,2BAG7Dq4B,KAAK,sCAEEJ,EAAYJ,EAAc,6EAC3BE,EAAW,QAAQC,EAAa,QAAQA,EAAa,+HAU3E,CArID,CAAiBvD,EAAA,EAAAA,YAAA,EAAAA,UAAS,KAuI1B,SAAiBkD,GACA,EAAA/R,OAAUiS,GAA+B,iBAChDD,EAAaC,+cAqBtB,CAvBD,CAAiBF,EAAA,EAAAA,YAAA,EAAAA,UAAS,IAwB7B,CAnUD,CAAiB,EAAA9R,MAAA,EAAAA,IAAG,I,yFChCpB,E,OAAA,wBA+D8B,UA3D9B,oBAkDY,KAAAyS,OAAS,IAAI,UACb,KAAAC,QAAU,IAAI,UACd,KAAAC,mBAAqB,IAAI,UACzB,KAAAC,mBAAqB,IAAI,UACzB,KAAAC,OAAS,IAAI,UAEb,KAAAC,mBAAyC,IACrD,CAxDIz4B,KAAK04B,GACDz+B,KAAK4iB,SAEL5iB,KAAKw+B,mBAAqBC,EAE1Bz+B,KAAKm+B,OAAOp4B,KAAK/F,KAAKw+B,mBAAmBtjB,kBACzClb,KAAKo+B,QAAQr4B,KAAK/F,KAAKw+B,mBAAmBvjB,mBAC1Cjb,KAAKq+B,mBAAmBt4B,KAAK/F,KAAKw+B,mBAAmBpjB,yBACrDpb,KAAKs+B,mBAAmBv4B,KAAK/F,KAAKw+B,mBAAmBnjB,yBACrDrb,KAAKu+B,OAAOx4B,KAAK/F,KAAKw+B,mBAAmBrjB,kBAEzCnb,KAAKq+B,mBAAmBtkB,QAAO,GAC/B/Z,KAAKs+B,mBAAmBvkB,QAAO,EACnC,CAEA6I,SACS5iB,KAAKw+B,qBAIVx+B,KAAKm+B,OAAOvb,SACZ5iB,KAAKo+B,QAAQxb,SACb5iB,KAAKq+B,mBAAmBzb,SACxB5iB,KAAKs+B,mBAAmB1b,SACxB5iB,KAAKu+B,OAAO3b,SAEZ5iB,KAAKw+B,mBAAqB,KAC9B,CAEAt2B,QACI,OAAOlI,KAAKm+B,MAChB,CAEAO,SACI,OAAO1+B,KAAKo+B,OAChB,CAEAO,oBACI,OAAO3+B,KAAKq+B,kBAChB,CAEAO,oBACI,OAAO5+B,KAAKs+B,kBAChB,CAEAO,QACI,OAAO7+B,KAAKu+B,MAChB,E,gHCrDJ,UACA,UAEA,6BACA,4BACA,6BAEA,6BAEA,6BACA,6BACA,6BACA,6BACA,4BACA,6BAEA,6BACA,6BAEA,UAGA,6BAEA,6BACA,4BAqCA,MAAaO,EAiBT53B,YACI63B,EAAsC,KACtCC,EACA/kB,EAAsC,CAAC,GA8oBnC,KAAAglB,cAA4B,KAChC,OAAQj/B,KAAKk/B,kBAAkBC,YAC3B,KAAK,UAA0B73B,MAAM83B,OACjCp/B,KAAKsI,SACL,MAEJ,KAAK,UAA0BhB,MAAM+3B,QACjCr/B,KAAKszB,Q,EA+CT,KAAAgM,WAAgC,KAChC,KAAAzhB,QAA8B,KAC9B,KAAAqhB,kBAA+C,KAC/C,KAAAK,oBAAqC,KAErC,KAAAxc,aAA4B,KAC5B,KAAAyc,iBAAqC,KACrC,KAAAC,aAA4B,KAC5B,KAAAC,YAA0B,KAC1B,KAAAC,SAAoB,KACpB,KAAAC,SAAoB,KACpB,KAAAtW,QAAkB,KAClB,KAAAuW,SAAoB,KAEpB,KAAAC,cAAgB,IAAI,UAEpB,KAAAnvB,OAASmuB,EAAYx3B,MAAMy4B,QAE3B,KAAAC,eAAiB,IAAI,UAErB,KAAAvN,OAAS,IAAI,EAAA3yB,MAttBjBE,KAAKs/B,WAAaP,EAElB/+B,KAAK6d,QAAU,OAAH,QACRmN,MAAO,EACPC,YAAa6T,EAAYmB,YAAYC,IACrC9U,YAAa0T,EAAYqB,YAAYC,OACrClV,cAAe,GACfC,cAAe,GACfmK,OAAO,EACP9B,OAAQ,GACR6M,gBAAgB,EAChBC,aAAa,EACbC,iBAAiB,EACjBC,yBAA0B,GAC1BC,eAAgB5b,SAChB6b,uBAAuB,EACvBC,gBAAgB,EAChBC,kBAAkB,EAClBC,eAAe,EACfC,oBAAoB,EACpBC,eAAe,EACfC,kBAAkB,GAEf/mB,GAGPja,KAAKk/B,kBAAoB,IAAI,UAAiBF,GAE9Ch/B,KAAKihC,gBAAkBjhC,KAAKk/B,kBAAkB+B,gBAE9C,MAAMC,EAAc,IAAI,EAAAx8B,MACxB1E,KAAKk/B,kBAAkBtlB,aAAa7U,YAAYo8B,GAAaD,EAAYz7B,SAASzF,KAAKohC,UAAUD,MACjGnhC,KAAKkhC,YAAcA,EAEnBlhC,KAAKqhC,iBAELrhC,KAAKggC,eAAesB,UAAUthC,KAAK8/B,eAAgBt7B,GAC/CxE,KAAK8/B,cAAc/5B,KAAKvB,EAAQ+8B,qBAEpCvhC,KAAKggC,eAAej6B,KAAK/F,KAAKk/B,mBAE9Bl/B,KAAKu/B,oBAAsBv/B,KAAKk/B,kBAAkBnY,OAAOziB,UAAKT,GAAY0lB,IAEtE,MADAyI,QAAQwP,IAAIjY,GACNA,CAAC,GAEf,CAOAkY,SAASzW,GAIL,OAHAhrB,KAAK6d,QAAQmN,MAAQA,EACrBhrB,KAAK0hC,qBAEE1hC,IACX,CAOA2hC,WACI,OAAO3hC,KAAK6d,QAAQmN,KACxB,CAOA4W,eAAe3W,GAIX,OAHAjrB,KAAK6d,QAAQoN,YAAcA,EAC3BjrB,KAAK0hC,qBAEE1hC,IACX,CAKA6hC,iBACI,OAAO7hC,KAAK6d,QAAQoN,WACxB,CAOA6W,eAAe1W,GAIX,OAHAprB,KAAK6d,QAAQuN,YAAcA,EAC3BprB,KAAK0hC,qBAEE1hC,IACX,CAKA+hC,iBACI,OAAO/hC,KAAK6d,QAAQuN,WACxB,CAOA4W,iBAAiB9W,GAIb,OAHAlrB,KAAK6d,QAAQqN,cAAgBA,EAC7BlrB,KAAK0hC,qBAEE1hC,IACX,CAKAiiC,mBACI,OAAOjiC,KAAK6d,QAAQqN,aACxB,CAOAgX,iBAAiB/W,GAIb,OAHAnrB,KAAK6d,QAAQsN,cAAgBA,EAC7BnrB,KAAK0hC,qBAEE1hC,IACX,CAKAmiC,mBACI,OAAOniC,KAAK6d,QAAQsN,aACxB,CAQAiX,iBAAiBC,GACb,OAAKriC,KAAKw/B,uBAIgB,IAAf6C,EACPriC,KAAKw/B,iBAAiBzlB,SAEtBsoB,EAAariC,KAAKw/B,iBAAiBhc,SAAWxjB,KAAKw/B,iBAAiB3b,YAGjE7jB,MATIA,IAUf,CAOAkkB,eACI,QAAOlkB,KAAKw/B,kBAAmBx/B,KAAKw/B,iBAAiBvb,WACzD,CAQAqe,UAAU9O,GAKN,OAJIxzB,KAAKy/B,cACLz/B,KAAKy/B,aAAalM,gBAAgB3D,KAAK2S,IAAI3S,KAAK4S,IAAIhP,EAAQ,GAAI,IAG7DxzB,IACX,CAOAyiC,eACI,QAASziC,KAAKy/B,YAClB,CAOAlJ,YACI,OAAOv2B,KAAKy/B,aAAez/B,KAAKy/B,aAAaiD,kBAAoB,CACrE,CAMAzd,SAKI,OAJIjlB,KAAK+iB,cACL/iB,KAAK+iB,aAAakC,SAGfjlB,IACX,CAOAm/B,WACI,OAAOn/B,KAAK2Q,MAChB,CAMA4wB,kBACI,OAAOvhC,KAAK8/B,aAChB,CAKA6C,qBAAqB5F,GACjB/8B,KAAK0/B,YAAYkD,cAAc,UAAWC,QAAQ9F,IAAO,EAC7D,CAKA+F,mBAAmB/F,GACf/8B,KAAK0/B,YAAYkD,cAAc,UAAWC,QAAQ9F,IAAO,EAC7D,CAEAgG,UAAUrK,GAMN,OALA14B,KAAKs/B,WAAa5G,EAElB14B,KAAK0hC,qBACL1hC,KAAKgjC,qBAEEhjC,IACX,CAEAijC,gBAMI,OALAjjC,KAAKkjC,qBACLljC,KAAKmjC,qBAELnjC,KAAKs/B,WAAa,KAEXt/B,IACX,CAoBAo3B,MACIgM,EACAlpB,EACAD,EAA+C,CAAC,GAEhD,OAAOja,KAAKyyB,OAAO/xB,cAAa,IAAY,EAAD,0CACd,iBAAd0iC,IACPA,GAAY,IAAAjmB,QAAaimB,IAG7B,MAAMC,EAAe,UAAat1B,OAAO,CACrCmM,OAAQla,KAAKsjC,eAAeppB,GAC5BK,UAAU,IAmCd,YAhCiC,IAAtBN,EAAOG,YAA8BH,EAAOG,WAAa,IAChEipB,EAAajpB,WAAaH,EAAOG,iBAGA,IAA1BH,EAAOI,iBACdgpB,EAAahpB,eAAiBJ,EAAOI,qBAGH,IAA3BJ,EAAOQ,kBACd4oB,EAAa5oB,gBAAkBza,KAAKujC,uBAAuBtpB,EAAOQ,uBAGhC,IAA3BR,EAAOS,kBACd2oB,EAAa3oB,gBAAkB1a,KAAKujC,uBAAuBtpB,EAAOS,uBAGrC,IAAtBT,EAAOK,aACd+oB,EAAa/oB,WAAaL,EAAOK,YAGrC+oB,EAAa7oB,QAxXzB,SAAiBP,EAAS6kB,EAAY0E,YAAYz6B,OAC9C,OAAQkR,GACJ,KAAK6kB,EAAY0E,YAAYz6B,MACzB,OAAO,UAAWkF,KAAKC,aAE3B,KAAK4wB,EAAY0E,YAAYr6B,YACzB,OAAO,UAAW8E,KAAKE,cAE3B,QACI,MAAM,IAAI1M,MAAM,yBAAyBwY,KAErD,CA6WmCO,CAAQP,EAAOwpB,aAED,IAAjCJ,EAAa5oB,iBACbza,KAAK0/B,YAAYgE,QAAQ,UAAWC,iBAGH,IAAjCN,EAAa3oB,iBACb1a,KAAK0/B,YAAYgE,QAAQ,UAAWE,uBAGlC5jC,KAAKu/B,oBAEHv/B,KAAK2Q,OAAS3Q,KAAKohC,gBACjBphC,KAAKk/B,kBAAkB9H,MACzBgM,EAAS,+BACJC,GAAY,CAAEQ,QAAS5pB,EAAO4pB,UACnC5pB,EAAOgD,eAGnB,KACJ,CAoBM6mB,IACFV,EACAlpB,EACAD,EAA+C,CAAC,G,mDAEhD,UAAWja,KAAKo3B,MAAMgM,EAAWlpB,EAAQD,MAAa6kB,EAAYx3B,MAAM83B,OACpE,OAAOp/B,KAAKsI,QAEpB,G,CAQMgrB,Q,mDAGF,aAFMtzB,KAAKu/B,oBAEJv/B,KAAKyyB,OAAO/xB,cACf,IAAY,EAAD,0CAAC,OAACV,KAAK2Q,OAAS3Q,KAAKohC,gBAAgBphC,KAAKk/B,kBAAkB5L,QAAS,KAExF,G,CAQMhrB,S,mDAGF,aAFMtI,KAAKu/B,oBAEJv/B,KAAKyyB,OAAO/xB,cACf,IAAY,EAAD,0CAAC,OAACV,KAAK2Q,OAAS3Q,KAAKohC,gBAAgBphC,KAAKk/B,kBAAkB52B,SAAU,KAEzF,G,CAQMuuB,O,mDAGF,aAFM72B,KAAKu/B,oBAEJv/B,KAAKyyB,OAAO/xB,cACf,IAAY,EAAD,0CAAC,OAACV,KAAK2Q,OAAS3Q,KAAKohC,gBAAgBphC,KAAKk/B,kBAAkBrI,OAAQ,KAEvF,G,CAQM3uB,Q,mDAGF,aAFMlI,KAAKu/B,oBAEJv/B,KAAKyyB,OAAO/xB,cACf,IAAY,EAAD,0CAAC,OAACV,KAAK2Q,OAAS3Q,KAAKohC,gBAAgBphC,KAAKk/B,kBAAkBh3B,QAAS,KAExF,G,CAUA67B,YACI,OAAO/jC,KAAKk/B,kBAAkB8E,cAClC,CAEAC,YAAYzhB,GAGR,OAFAxiB,KAAK2/B,SAAS9c,KAAKL,GAEZxiB,IACX,CAEQsjC,eAAeppB,GACnB,OAAQA,GACJ,KAAK4kB,EAAYoF,OAAOC,KACpB,OAAO,EAEX,KAAKrF,EAAYoF,OAAOE,IACpB,OAAO,EAEX,KAAKtF,EAAYoF,OAAOG,MACpB,OAAO,EAEX,QACI,MAAM,IAAI5iC,MAAM,oBAAoByY,MAEhD,CAEQqpB,uBAAuBe,GAC3B,OAAQA,GACJ,KAAKxF,EAAYyF,eAAenc,SAC5B,OAAO,EAEX,KAAK0W,EAAYyF,eAAeC,QAC5B,OAAO,EAEX,KAAK1F,EAAYyF,eAAeE,OAC5B,OAAO,EAEX,QACI,MAAM,IAAIhjC,MAAM,4BAA4B6iC,MAExD,CAEQjD,iBAGJ,GAFArhC,KAAK0hC,qBAED1hC,KAAK6d,QAAQyX,MACb,IACIt1B,KAAKy/B,aAAe,IAAI,UACxBz/B,KAAKy/B,aAAa1Y,OAClB/mB,KAAKy/B,aAAalM,gBAAgBvzB,KAAK6d,QAAQ2V,QAE/CxzB,KAAKggC,eAAesB,UAAUthC,KAAKy/B,cAAej7B,GAC9CxE,KAAKy/B,aAAa15B,MAAK,EAAM,CAACvB,EAAQkgC,oBAG1C1kC,KAAKk/B,kBAAkBtlB,aAAa7U,YAAYo8B,IACpCA,IACC,UAA0B75B,MAAM+3B,QACjCr/B,KAAKy/B,aAAan3B,SAIlBtI,KAAKy/B,aAAanM,O,IAIhC,MAAO/J,GACLyI,QAAQ2S,MAAM,+BAA+Bpb,GAAKA,EAAE/G,U,CAI5DxiB,KAAKgjC,qBAEDhjC,KAAK6d,QAAQwiB,iBACbrgC,KAAK0/B,YAAc,IAAI,UAAW1/B,KAAK6d,QAAQ4iB,gBAE/CzgC,KAAKggC,eAAesB,UAAUthC,KAAK0/B,aAAcl7B,GAC7CxE,KAAK0/B,YAAY35B,KACbvB,EAAQogC,YAAY,GACpBpgC,EAAQogC,YAAY,GACpBpgC,EAAQqgC,UAAU,GAClBrgC,EAAQqgC,UAAU,GAClBrgC,EAAQ+8B,qBAGZvhC,KAAK6d,QAAQ6iB,uBACb1gC,KAAK0/B,YAAY0C,iBAAiBr9B,YAC9B,IAAM/E,KAAKw/B,kBAAoBx/B,KAAKw/B,iBAAiBzlB,WAIzD/Z,KAAK6d,QAAQ+iB,kBACb5gC,KAAK0/B,YAAYoF,YAAY//B,WAAW/E,KAAKi/B,eAG7Cj/B,KAAK6d,QAAQmjB,kBACbhhC,KAAK0/B,YAAYqF,UAAUhgC,YAAW,IAAM/E,KAAKkI,WAIrDlI,KAAK6d,QAAQkjB,gBACb/gC,KAAK6/B,SAAW,IAAI,UACpB7/B,KAAK6/B,SAAS9Y,OAEd/mB,KAAKggC,eAAesB,UAAUthC,KAAK6/B,UAAWr7B,GAC1CxE,KAAK6/B,SAAS95B,KAAK,CAACvB,EAAQogC,YAAY,GAAIpgC,EAAQogC,YAAY,IAAK,CACjE,MAAgBpgC,EAAQ+8B,kBAAkBrmB,iBAC1C,OAAiB1W,EAAQ+8B,kBAAkBtmB,uBAKnDjb,KAAK6d,QAAQ8iB,iBACb3gC,KAAKspB,QAAU,IAAI,UAEnBtpB,KAAKggC,eAAesB,UAAUthC,KAAKspB,SAAU9kB,GAAYxE,KAAKspB,QAAQvjB,KAAKvB,EAAQwgC,UAAU,OAGjGhlC,KAAK2/B,SAAW,IAAI,UACpB3/B,KAAKilC,eAAiBjlC,KAAK2/B,SAASnd,QACpCxiB,KAAKggC,eAAesB,UAAUthC,KAAK2/B,UAAU,CAACn7B,EAAS0gC,IAAoBA,EAAOn/B,KAAKvB,EAAQ2gC,eACnG,CAEQjC,qBACCljC,KAAK+iB,eAIV/iB,KAAK+iB,aAAaH,SAElB5iB,KAAKggC,eAAeoF,aAAaplC,KAAK+iB,cAEtC/iB,KAAKw/B,iBAAiB3b,YAEtB7jB,KAAKw/B,iBAAmB,KACxBx/B,KAAK+iB,aAAe,KACxB,CAEQ2e,qBACA1hC,KAAK+iB,cACL/iB,KAAKkjC,qBAGJljC,KAAKs/B,aAKVt/B,KAAK+iB,aAAe,IAAI,UAAY/iB,KAAKs/B,WAAY,CACjDtU,MAAOhrB,KAAK6d,QAAQmN,MACpBC,YAAajrB,KAAK6d,QAAQoN,YAC1BG,YAAaprB,KAAK6d,QAAQuN,YAC1BF,cAAelrB,KAAK6d,QAAQqN,cAC5BC,cAAenrB,KAAK6d,QAAQsN,gBAC7BpE,OAEH/mB,KAAKggC,eAAesB,UAAUthC,KAAK+iB,cAAeve,GAAYxE,KAAK+iB,aAAahd,KAAKvB,EAAQ6gC,cAE7FrlC,KAAKw/B,iBAAmB,IAAI,UAAiBx/B,KAAK+iB,cACtD,CAEQogB,qBACCnjC,KAAK4/B,WAIV5/B,KAAK4/B,SAAShd,SAEd5iB,KAAKggC,eAAeoF,aAAaplC,KAAK4/B,UAEtC5/B,KAAK4/B,SAAW,KACpB,CAEQoD,qBACAhjC,KAAK4/B,UACL5/B,KAAKmjC,qBAELnjC,KAAK6d,QAAQyiB,cACbtgC,KAAK4/B,SAAW,IAAI,UAChB5/B,KAAKs/B,WACLt/B,KAAK6d,QAAQ2iB,yBACbxgC,KAAK6d,QAAQ0iB,iBAGjBvgC,KAAKggC,eAAesB,UAAUthC,KAAK4/B,UAAWp7B,GAC1CxE,KAAK4/B,SAAS75B,KAAKvB,EAAQogC,YAAY,GAAIpgC,EAAQ+8B,qBAGnDvhC,KAAK6d,QAAQgjB,eACb7gC,KAAK4/B,SAASkF,YAAY//B,WAAW/E,KAAKi/B,eAG1Cj/B,KAAK6d,QAAQijB,oBACb9gC,KAAK4/B,SAASwC,iBAAiBr9B,YAC3B,IAAM/E,KAAKw/B,kBAAoBx/B,KAAKw/B,iBAAiBzlB,WAIrE,CAEQqnB,UAAUh7B,GACd,OAAQA,GACJ,KAAK,UAA0BkB,MAAMy4B,QACjC,OAAOjB,EAAYx3B,MAAMy4B,QAE7B,KAAK,UAA0Bz4B,MAAM+3B,QACjC,OAAOP,EAAYx3B,MAAM+3B,QAE7B,KAAK,UAA0B/3B,MAAM83B,OACjC,OAAON,EAAYx3B,MAAM83B,OAE7B,KAAK,UAA0B93B,MAAMq9B,MACjC,OAAO7F,EAAYx3B,MAAMq9B,MAE7B,QACI,MAAM,IAAIljC,MAAM,iBAE5B,EAhqBJ,gBA4kCwB,YA7VxB,SAAiBq9B,GAmJb,IAAYoF,EAeAK,EAmBApE,EAkBAF,EAuHA34B,EAmBAk8B,GA9LZ,SAAYU,GAIR,cAIA,YAIA,eACH,CAbD,CAAYA,EAAA,EAAAA,SAAA,EAAAA,OAAM,KAelB,SAAYK,GAIR,sBAIA,oBAIA,iBACH,CAbD,CAAYA,EAAA,EAAAA,iBAAA,EAAAA,eAAc,KAmB1B,SAAYpE,GAIR,wBAIA,kBAIA,aACH,CAbD,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KAkBvB,SAAYF,GAKR,YAIA,sBAIA,aACH,CAdD,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,KA8FV,EAAA1kB,cAAgB,UAAcA,cAa9B,EAAAyB,sBACT,UAAcA,sBAML,EAAAsoB,kBAA8D,UAAc9pB,YAKzF,SAAYlU,GACR,oBAIA,kBAIA,oBAIA,eACH,CAdD,CAAYA,EAAA,EAAAA,QAAA,EAAAA,MAAK,KAmBjB,SAAYk8B,GAIR,gBAIA,2BACH,CATD,CAAYA,EAAA,EAAAA,cAAA,EAAAA,YAAW,IAU1B,CA3VD,CAAiB1E,EAAA,EAAAA,cAAA,EAAAA,YAAW,KA6VJ,W,kFC1oCxB,gBAKA,MAAMyG,EAAN,cA6CI,KAAArE,YAAc,IAAI,EAAAx8B,MAEV,KAAAiM,QAAS,EACT,KAAA60B,aAAyB,IACrC,CAhDIz/B,KAAKqhB,GACDpnB,KAAK4iB,SAEL5iB,KAAKwlC,aAAepe,EACpBpnB,KAAKwlC,aAAazrB,OAAO/Z,KAAK2Q,QAE9B3Q,KAAKwlC,aAAa5rB,aAAa7U,WAAWwgC,EAAYE,oBAAqBzlC,MAC3EA,KAAK0lC,UAAU1lC,KAAKwlC,aAAax8B,OACrC,CAEA4Z,SACS5iB,KAAKwlC,eAIVxlC,KAAKwlC,aAAa5rB,aAAazU,cAAcogC,EAAYE,oBAAqBzlC,MAC9EA,KAAKwlC,aAAe,KACxB,CAEAzrB,OAAO3T,GAOH,OANIpG,KAAKwlC,aACLxlC,KAAKwlC,aAAazrB,OAAO3T,GAEzBpG,KAAK0lC,UAAUt/B,GAGZpG,IACX,CAEAgJ,OACI,OAAOhJ,KAAK2Q,MAChB,CAEQ6E,2BAA2B2rB,EAAmB3hC,GAClDA,EAAKkmC,UAAUvE,EACnB,CAEQuE,UAAUvE,GACVA,IAAanhC,KAAK2Q,SAClB3Q,KAAK2Q,OAASwwB,EACdnhC,KAAKkhC,YAAYz7B,SAASzF,KAAK2Q,QAEvC,EAQoB,W,mFCxDxB,gBAwBA,SAASg1B,EAASve,GACd,MAAO,CACHyB,KAAM,EACNzB,QAER,CAEA,SAASwe,EAAUrkB,GACf,MAAO,CACHsH,KAAM,EACNgd,QAAStkB,EAEjB,CAEA,MAAMukB,EACF5+B,YACY4O,EAERiwB,EAAsCD,EAAWE,iBAFzC,KAAAlwB,QAAAA,EAsKZ,KAAAssB,iBAAmB,IAAI,EAAA19B,MACvB,KAAAqgC,UAAY,IAAI,EAAArgC,MAChB,KAAAogC,YAAc,IAAI,EAAApgC,MAEV,KAAAuhC,iBAA+C,KAC/C,KAAAC,eAA6C,KAE7C,KAAAC,WAAgC,KAChC,KAAAC,WAAgC,KAChC,KAAAC,SAAsC,KACtC,KAAAC,SAAsC,KACtC,KAAAxG,cAAuC,KAEvC,KAAAyG,eAAiD,CAAC,EAClD,KAAAC,kBAAoB,IAAIvgB,IAhL5BjmB,KAAKymC,iBAAiBV,EAC1B,CAEAhgC,KACI2gC,EACAC,EACAC,EACAC,EACApI,GACIz+B,KAAKmmC,aAITnmC,KAAKmmC,WAAaO,EAClB1mC,KAAKomC,WAAaO,EAClB3mC,KAAKqmC,SAAWO,EAChB5mC,KAAKsmC,SAAWO,EAChB7mC,KAAK8/B,cAAgBrB,EAErBz+B,KAAK8mC,qBAEL9mC,KAAKimC,iBAAmB1c,IACpB,IAAKvpB,KAAKwmC,kBAAkBzP,IAAIxN,EAAEwd,SAC9B,OAGJ,MAAMC,GACDzd,EAAE0d,SAAW,EAA4B,IACzC1d,EAAE2d,QAAU,EAA2B,IACvC3d,EAAE4d,OAAS,EAA0B,GAE1C,IAAKnnC,KAAKwmC,kBAAkBnjC,IAAIkmB,EAAEwd,SAAShQ,IAAIiQ,GAC3C,OAGJ,MAAMI,EAASpnC,KAAKwmC,kBAAkBnjC,IAAIkmB,EAAEwd,SAAS1jC,IAAI2jC,QAEnC,IAAXI,IACP7d,EAAEM,iBACF7pB,KAAK4iC,cAAcwE,GAAQ,G,EAInCpnC,KAAKkmC,eAAiB3c,IAClB,GAAKvpB,KAAKwmC,kBAAkBzP,IAAIxN,EAAEwd,SAIlC,IAAK,MAAMK,KAAUpnC,KAAKwmC,kBAAkBnjC,IAAIkmB,EAAEwd,SAASM,SACvD9d,EAAEM,iBACF7pB,KAAK4iC,cAAcwE,GAAQ,E,EAInCpnC,KAAK8V,QAAQ2N,iBAAiB,UAAWzjB,KAAKimC,kBAC9CjmC,KAAK8V,QAAQ2N,iBAAiB,QAASzjB,KAAKkmC,gBAChD,CAEAtD,cAAcwE,EAA2BllB,GACrC,MAAMzc,EAAWzF,KAAKumC,eAAea,GACrC,GAAI3hC,EACA,OAAQA,EAASojB,MACb,KAAK,EACDpjB,EAAS2hB,MAAMrN,OAAOmI,GACtB,MAEJ,KAAK,EACGA,GACAzc,EAASogC,QAAQpgC,cAAS5B,GAO9C,CAEA6/B,QAAQqC,GACJ/lC,KAAKymC,iBAAiBV,EAC1B,CAEAnjB,SACS5iB,KAAKmmC,aAIVnmC,KAAK8V,QAAQiO,oBAAoB,UAAW/jB,KAAKimC,kBACjDjmC,KAAK8V,QAAQiO,oBAAoB,QAAS/jB,KAAKkmC,gBAE/ClmC,KAAKmmC,WAAanmC,KAAKomC,WAAapmC,KAAKqmC,SAAWrmC,KAAKsmC,SAAWtmC,KAAK8/B,cAAgB,KACzF9/B,KAAKimC,iBAAmBjmC,KAAKkmC,eAAiB,KAClD,CAEQY,qBACJ9mC,KAAKumC,eAAe,IAAgCX,EAAU5lC,KAAKoiC,kBACnEpiC,KAAKumC,eAAe,IAA+BX,EAAU5lC,KAAK+kC,WAClE/kC,KAAKumC,eAAe,IAAiCX,EAAU5lC,KAAK8kC,aACpE9kC,KAAKumC,eAAe,GAA4BZ,EAAS3lC,KAAK8/B,cAAc7kB,mBAC5Ejb,KAAKumC,eAAe,GAA2BZ,EAAS3lC,KAAK8/B,cAAc5kB,kBAC3Elb,KAAKumC,eAAe,GAA2BZ,EAAS3lC,KAAKmmC,WAAWltB,WACxEjZ,KAAKumC,eAAe,GAA4BZ,EAAS3lC,KAAKmmC,WAAWjtB,YACzElZ,KAAKumC,eAAe,GAAyBZ,EAAS3lC,KAAKmmC,WAAWhtB,SACtEnZ,KAAKumC,eAAe,GAA2BZ,EAAS3lC,KAAKmmC,WAAW/sB,WACxEpZ,KAAKumC,eAAe,IAA2BZ,EAAS3lC,KAAKmmC,WAAW9sB,WACxErZ,KAAKumC,eAAe,GAA2BZ,EAAS3lC,KAAKomC,WAAWntB,WACxEjZ,KAAKumC,eAAe,GAA4BZ,EAAS3lC,KAAKomC,WAAWltB,YACzElZ,KAAKumC,eAAe,GAAyBZ,EAAS3lC,KAAKomC,WAAWjtB,SACtEnZ,KAAKumC,eAAe,GAA2BZ,EAAS3lC,KAAKomC,WAAWhtB,WACxEpZ,KAAKumC,eAAe,IAA2BZ,EAAS3lC,KAAKomC,WAAW/sB,WACxErZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKqmC,SAAS5sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,IACtFzZ,KAAKumC,eAAe,IAAiCZ,EAAS3lC,KAAKsmC,SAAS7sB,OAAO,EAAG,GAC1F,CAEQgtB,iBAAiBV,GACrB,MAAMuB,EAAiB,CAACF,EAA2BG,EAAiBP,KAChE,GAAwG,KAAvF,EAAZA,GACD,MAAM,IAAIvlC,MAAM,wBAAwBulC,KAGvChnC,KAAKwmC,kBAAkBzP,IAAIwQ,IAC5BvnC,KAAKwmC,kBAAkB73B,IAAI44B,EAAS,IAAIthB,KAG5CjmB,KAAKwmC,kBAAkBnjC,IAAIkkC,GAAS54B,IAAIq4B,EAAWI,EAAO,EAG9DrB,EAAS3jC,SAAQqlB,IACb,MAAM2f,EAAS3f,EAAQ2f,QACXjjC,MAAMC,QAAQqjB,EAAQ+f,MAAQ/f,EAAQ+f,KAAO,CAAC/f,EAAQ+f,OAE5DplC,SAAQolC,GACVF,EACIF,EACgB,iBAATI,EAAoBA,EAAKD,QAAUC,EAC1B,iBAATA,EAAoBA,EAAKR,UAAY,IAEnD,GAET,EA8TmB,YA1SvB,SAAUlB,GA8CO,EAAAjD,QAAkC,CAC3C,OAAU,EACV,MAAS,EACT,MAAS,EACT,OAAU,EACV,IAAO,EACP,MAAS,EACT,MAAS,EACT,OAAU,EACV,IAAO,EACP,MAAS,EACT,MAAS,GACT,MAAS,GACT,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,YAAe,GACf,WAAc,GACd,UAAa,GACb,YAAe,IAqBN,EAAAmD,gBAAkC,CAC3C,CACIoB,OAAQ,EACRI,KAAM,CACFD,QAAS,GACTP,UAAW,IAGnB,CACII,OAAQ,EACRI,KAAM,CACFD,QAAS,GACTP,UAAW,IAGnB,CACII,OAAQ,EACRI,KAAM,CACF,GACA,KAGR,CACIJ,OAAQ,EACRI,KAAM,CACF,GACA,KAGR,CACIJ,OAAQ,EACRI,KAAM,CACF,GACA,KAGR,CACIJ,OAAQ,EACRI,KAAM,CACF,GACA,KAGR,CACIJ,OAAQ,GACRI,KAAM,CACF,GACA,KAGR,CACIJ,OAAQ,EACRI,KAAM,IAEV,CACIJ,OAAQ,EACRI,KAAM,IAEV,CACIJ,OAAQ,EACRI,KAAM,IAEV,CACIJ,OAAQ,EACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,CACFD,QAAS,GACTP,UAAW,IAGnB,CACII,OAAQ,GACRI,KAAM,KAID,EAAA7D,gBAAkC,CAC3C,CACIyD,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,KAID,EAAA5D,gBAAkC,CAC3C,CACIwD,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,IAEV,CACIJ,OAAQ,GACRI,KAAM,KAEV,CACIJ,OAAQ,GACRI,KAAM,KAIjB,CAvSD,CAAU1B,IAAAA,EAAU,KA0SG,W,iFC1gBvB,UAEA,6BA+NA,MAAM2B,EACFvgC,YAAmBwgC,EAAchP,GAAd,KAAAgP,MAAAA,EAenB,KAAA7e,KAAO,UAdH,MAAM8e,EAAejP,EAAOkP,wBAE5B5nC,KAAK6I,GAAK6+B,EAAMG,QAAUF,EAAahjB,MAAQgjB,EAAarjB,MAC5DtkB,KAAK8I,GAAK4+B,EAAMI,QAAUH,EAAajjB,KAAOijB,EAAapjB,OAE3DvkB,KAAK+nC,GAAKL,EAAMG,QAChB7nC,KAAKgoC,GAAKN,EAAMI,OACpB,EAUJ,UAnOA,MACI5gC,YAAoByiB,EAAoCse,EAAuB,GAAYC,GAAc,GAArF,KAAAve,QAAAA,EAAoC,KAAAse,qBAAAA,EAAmC,KAAAC,YAAAA,EA4CnF,KAAAC,cAAiB5e,IACrB,IAAK,IAAI1jB,EAAI,EAAGA,EAAI0jB,EAAE6e,eAAe7iC,OAAQM,IAAK,CAC9C,MAAMwiC,EAAkB,IAAIZ,EAAgBle,EAAE6e,eAAe5oB,KAAK3Z,GAAI7F,KAAK2pB,SACvEjC,EAAK2gB,EAAgBX,MAAMY,WAoB/B,IAlBItoC,KAAKkoC,YAAcG,EAAgBx/B,EAAI,GAAMw/B,EAAgBx/B,GAAK,IAC9Dw/B,EAAgBv/B,GAAK,GAErBu/B,EAAgBxf,KAAO,MAGvBwf,EAAgBxf,KAAO7oB,KAAKuoC,OAAS,QAAkB,OAGvDF,EAAgBv/B,GAAK,GAErBu/B,EAAgBxf,KAAO7oB,KAAKuoC,OAAS,SAAmB,WAGxDF,EAAgBxf,KAAO7oB,KAAKuoC,OAAS,QAAkB,YAI3DvoC,KAAKwoC,gBAAgBzR,IAAIrP,KAAO1nB,KAAKwoC,gBAAgBzR,IAAIsR,EAAgBxf,MAO7E,OAHA7oB,KAAKwoC,gBAAgB75B,IAAI+Y,EAAI2gB,GAC7BroC,KAAKwoC,gBAAgB75B,IAAI05B,EAAgBxf,KAAMwf,GAEvCA,EAAgBxf,MACpB,IAAK,MACD7oB,KAAKuoC,QAAS,EACdvoC,KAAKyoC,6BAA6BC,aAClC,MAEJ,IAAK,OACD1oC,KAAK2oC,UAAUtvB,UAAUU,QAAO,GAChC,MAEJ,IAAK,QACD/Z,KAAK8kC,YAAYr/B,cAAS5B,GAC1B7D,KAAKyoC,6BAA6BG,cAClC,MAEJ,IAAK,SACD5oC,KAAKo+B,QAAQrkB,QAAO,GACpB/Z,KAAKyoC,6BAA6BG,cAClC,MAEJ,IAAK,QACD5oC,KAAKm+B,OAAOpkB,QAAO,GACnB/Z,KAAKyoC,6BAA6BG,cAClC,MAEJ,IAAK,WACD,MAEJ,QACI,MAAM,IAAInnC,MAAM,sB,CAI5B8nB,EAAEM,gBAAgB,EAGd,KAAAgf,YAAetf,IACnB,IAAK,IAAI1jB,EAAI,EAAGA,EAAI0jB,EAAE6e,eAAe7iC,OAAQM,IAAK,CAC9C,MAAMwiC,EAAkBroC,KAAKwoC,gBAAgBnlC,IAAIkmB,EAAE6e,eAAe5oB,KAAK3Z,GAAGyiC,YAE1E,GAAKD,EAAL,CAIA,OAAQA,EAAgBxf,MACpB,IAAK,MACD7oB,KAAKuoC,QAAS,EACdvoC,KAAKyoC,6BAA6BK,WAClC,MAEJ,IAAK,OACD9oC,KAAK2oC,UAAUtvB,UAAUU,QAAO,GAChC,MAEJ,IAAK,SACD/Z,KAAKo+B,QAAQrkB,QAAO,GACpB,MAEJ,IAAK,QACD/Z,KAAKm+B,OAAOpkB,QAAO,GACnB,MAEJ,IAAK,WACD/Z,KAAK2oC,UAAUvvB,UAAUW,QAAO,GAChC/Z,KAAK2oC,UAAUxvB,QAAQY,QAAO,GAC9B/Z,KAAK2oC,UAAU1vB,UAAUc,QAAO,GAChC/Z,KAAK2oC,UAAUzvB,WAAWa,QAAO,GACjC,MAEJ,IAAK,QACD,MAEJ,QACI,MAAM,IAAItY,MAAM,sBAGxBzB,KAAKwoC,gBAAgBxgB,OAAOqgB,EAAgBxf,MAC5C7oB,KAAKwoC,gBAAgBxgB,OAAOqgB,EAAgBX,MAAMY,W,EAGtD/e,EAAEM,gBAAgB,EAGd,KAAAkf,aAAgBxf,IACpB,IAAK,IAAI1jB,EAAI,EAAGA,EAAI0jB,EAAE6e,eAAe7iC,OAAQM,IAAK,CAC9C,MAAM6hC,EAAQne,EAAE6e,eAAe5oB,KAAK3Z,GAChCwiC,EAAkBroC,KAAKwoC,gBAAgBnlC,IAAIqkC,EAAMY,YAErD,IAAKD,EACD,SAGJ,GAA6B,aAAzBA,EAAgBxf,KAChB,SAGJ,MAAMmgB,EAAStB,EAAMG,QAAUQ,EAAgBN,GAC3CkB,EAASvB,EAAMI,QAAUO,EAAgBL,GACzCkB,EAAMtZ,KAAKuZ,KAAKH,EAASA,EAASC,EAASA,GAC3CG,EAAMxZ,KAAKsZ,IAAID,EAASC,GACxBG,EAAMzZ,KAAKsZ,IAAIF,EAASE,GACxBrD,EAAUqD,EAAMlpC,KAAKioC,qBAEzBjoC,KAAK2oC,UAAU1vB,UAAUc,OAAO8rB,GAAWmD,EAAS,GAAKK,EAAM,IAC/DrpC,KAAK2oC,UAAUzvB,WAAWa,OAAO8rB,GAAWmD,EAAS,GAAKK,EAAM,IAChErpC,KAAK2oC,UAAUxvB,QAAQY,OAAO8rB,GAAWoD,EAAS,GAAKG,EAAM,IAC7DppC,KAAK2oC,UAAUvvB,UAAUW,OAAO8rB,GAAWoD,EAAS,GAAKG,EAAM,IAE3DF,EAAM,EAAIlpC,KAAKioC,uBACfI,EAAgBN,IAAOiB,EAASE,GAAQA,EAAM,EAAIlpC,KAAKioC,sBACvDI,EAAgBL,IAAOiB,EAASC,GAAQA,EAAM,EAAIlpC,KAAKioC,sB,CAI/D1e,EAAEM,gBAAgB,EAItB,KAAAib,YAAc,IAAI,EAAApgC,MAEV,KAAA+jC,6BAA+B,IAAI,UAEnC,KAAApiB,QAAS,EAET,KAAAsiB,UAAsC,KACtC,KAAAvK,QAA2B,KAC3B,KAAAD,OAA0B,KAE1B,KAAAoK,QAAS,EAET,KAAAC,gBAAkB,IAAIviB,IA3M1BjmB,KAAKoiC,iBAAmBpiC,KAAKyoC,6BAA6B5C,OAC9D,CAEArwB,qBACI,MAAO,iBAAkBiL,MAC7B,CAEA1a,KAAKqiB,EAAoCqW,GACjCz+B,KAAKqmB,SAITrmB,KAAKqmB,QAAS,EAEdrmB,KAAK2oC,UAAYvgB,EACjBpoB,KAAKo+B,QAAUK,EAAaxjB,kBAC5Bjb,KAAKm+B,OAASM,EAAavjB,iBAE3Blb,KAAKspC,iBACT,CAEA1mB,SACS5iB,KAAKqmB,SAIVrmB,KAAKupC,mBAEJvpC,KAAKqmB,QAAS,EAASrmB,KAAK2oC,UAAY3oC,KAAKm+B,OAASn+B,KAAKo+B,QAAU,KAC1E,CAEQkL,iBACJtpC,KAAK2pB,QAAQlG,iBAAiB,aAAczjB,KAAKmoC,eACjDnoC,KAAK2pB,QAAQlG,iBAAiB,WAAYzjB,KAAK6oC,aAC/C7oC,KAAK2pB,QAAQlG,iBAAiB,YAAazjB,KAAK+oC,aACpD,CAEQQ,mBACJvpC,KAAK2pB,QAAQ5F,oBAAoB,aAAc/jB,KAAKmoC,eACpDnoC,KAAK2pB,QAAQ5F,oBAAoB,WAAY/jB,KAAK6oC,aAClD7oC,KAAK2pB,QAAQ5F,oBAAoB,YAAa/jB,KAAK+oC,aACvD,E,kGC5DJ,6BAqF2B,UAjF3B,MACI7hC,YAAoButB,GAAA,KAAAA,cAAAA,EAuEZ,KAAA+U,WAAY,EACZ,KAAApV,QAAU,CAxE2B,CAE7CrN,OAAc,CAEdhhB,KAAKwU,EAAmBkvB,GACpB,IAAIzpC,KAAK8yB,UAAT,CAGA9yB,KAAK8yB,UAAY,IAAI2W,GAEhBzpC,KAAK0pC,SAAW1pC,KAAKwpC,YAAcjvB,IAChCva,KAAK0pC,SACL1pC,KAAK0pC,QAAQxd,QAGjBlsB,KAAK0pC,QAAUnvB,EACT,IAAI,UAAc,EAAGva,KAAK8yB,UAAUvtB,OAAQvF,KAAKy0B,eACjD,IAAI,UAAcz0B,KAAK8yB,UAAUvtB,OAAQ,EAAGvF,KAAKy0B,eACvDz0B,KAAK0pC,QAAQ3iB,QAGbxM,EACAva,KAAK0pC,QAAQ3jC,KAAK,GAAI/F,KAAK8yB,WAE3B9yB,KAAK0pC,QAAQ3jC,KAAK/F,KAAK8yB,UAAkD,IAG7E,IAAK,IAAIjtB,EAAI,EAAGA,EAAI7F,KAAK8yB,UAAUvtB,OAAQM,IACvC7F,KAAK0pC,QAAQnW,gBAAgB1tB,EAAG7F,KAAKo0B,SAGzCp0B,KAAKwpC,UAAYjvB,C,CACrB,CAEAqI,SACS5iB,KAAK8yB,YAIV9yB,KAAK0pC,QAAQ9mB,SAEb5iB,KAAK8yB,UAAY,KACrB,CAEAS,gBAAgBC,GAGZ,GAFAxzB,KAAKo0B,QAAUZ,EAEXxzB,KAAK8yB,UACL,IAAK,IAAIjtB,EAAI,EAAGA,EAAI7F,KAAK8yB,UAAUvtB,OAAQM,IACvC7F,KAAK0pC,QAAQnW,gBAAgB1tB,EAAG7F,KAAKo0B,QAGjD,CAEAsO,kBACI,OAAO1iC,KAAKo0B,OAChB,CAEMd,Q,mDACEtzB,KAAK0pC,gBACC1pC,KAAK0pC,QAAQpW,QAE3B,G,CAEMhrB,S,mDACEtI,KAAK0pC,gBACC1pC,KAAK0pC,QAAQphC,SAE3B,G,oECzEJ,gBAqDA,UAnDA,MACIpB,YAAoByiC,EAAgB,IAAaC,EAAW,KAAxC,KAAAD,cAAAA,EAA6B,KAAAC,SAAAA,EAyCjD,KAAA/D,QAAU,IAAI,EAAAnhC,MAEN,KAAA3C,WAAY,EACZ,KAAA8nC,WAAY,EACZ,KAAAC,oBAAqB,EACrB,KAAAC,gBAAkB,EAClB,KAAAC,cAAgB,CA/C0C,CAElEtB,aACI1oC,KAAK+pC,gBAAkBthB,KAAKD,MAExBxoB,KAAK6pC,YAIT7pC,KAAK6pC,WAAY,EAEjB7pC,KAAK+B,UAAY/B,KAAK8pC,oBAAsB9pC,KAAK+pC,gBAAkB/pC,KAAKgqC,cAAgBhqC,KAAK4pC,SACjG,CAEAd,WACI9oC,KAAKgqC,cAAgBvhB,KAAKD,MAGtBxoB,KAAK+B,YACL/B,KAAK+B,WAAY,EACjB/B,KAAK6lC,QAAQpgC,cAAS5B,IAGrB7D,KAAK6pC,YAIV7pC,KAAK6pC,WAAY,EAEjB7pC,KAAK8pC,mBAAqB9pC,KAAK+pC,gBAAkB/pC,KAAKgqC,cAAgBhqC,KAAK2pC,cAC/E,CAEAf,cACI5oC,KAAK8oC,WACL9oC,KAAK8pC,oBAAqB,CAC9B,CAEAG,gBACI,OAAOjqC,KAAK+B,SAChB,E,yFC1CJ,E,OAAA,yBAGA,MAAMmoC,EAAN,cA6FY,KAAAC,SAAW,IAAIlkB,IACf,KAAAmkB,eAAgB,CAC5B,CA9FIrkC,KAAKskC,GACD,OAAIrqC,KAAKoqC,gBAITpqC,KAAKk/B,kBAAoBmL,EAErBrqC,KAAKsqC,sBACLtqC,KAAKuqC,eAGTvqC,KAAKk/B,kBAAkBtlB,aAAa7U,WAAWmlC,EAAcM,kBAAmBxqC,OATrEA,IAYf,CAEA4iB,SACI,OAAK5iB,KAAKk/B,mBAIVl/B,KAAKyqC,iBAELzqC,KAAKk/B,kBAAkBtlB,aAAazU,cAAc+kC,EAAcM,kBAAmBxqC,MAEnFA,KAAKk/B,kBAAoB,KAElBl/B,MATIA,IAUf,CAEAshC,UAAU4D,EAA8BwF,GAOpC,OANA1qC,KAAKmqC,SAASx7B,IAAIu2B,EAAQ,IAAIgF,EAAcS,cAAczF,EAAQwF,IAE9D1qC,KAAKoqC,eACLM,EAAO1qC,KAAKk/B,kBAAkB0L,sBAAuB1F,GAGlDllC,IACX,CAEAolC,aAAaF,GACT,OAAKllC,KAAKmqC,SAAS9mC,IAAI6hC,IAIvBA,EAAOtiB,SAEP5iB,KAAKmqC,SAASniB,OAAOkd,GAEdllC,MAPIA,IAQf,CAEQwV,yBAAyB2rB,EAA2C3hC,GACpEA,EAAK8qC,mBAAmBnJ,GACxB3hC,EAAK+qC,eAEL/qC,EAAKirC,gBAEb,CAEQH,mBACJlkC,GAAQpG,KAAKk/B,kBAAoBl/B,KAAKk/B,kBAAkBC,gBAAat7B,IAErE,OACI7D,KAAKk/B,oBACJ94B,IAAU,UAA0BkB,MAAM+3B,SAAWj5B,IAAU,UAA0BkB,MAAM83B,OAExG,CAEQmL,eACAvqC,KAAKoqC,gBAITpqC,KAAKmqC,SAAS/nC,SAASyoC,GACnBA,EAAcH,OAAO1qC,KAAKk/B,kBAAkB0L,sBAAuBC,EAAc3F,UAGrFllC,KAAKoqC,eAAgB,EACzB,CAEQK,iBACCzqC,KAAKoqC,gBAIVpqC,KAAKmqC,SAAS/nC,SAASyoC,GAAkBA,EAAc3F,OAAOtiB,WAE9D5iB,KAAKoqC,eAAgB,EACzB,EAqBsB,YAd1B,SAAUF,GASO,EAAAS,cAAb,MACIzjC,YAAmBg+B,EAAuBwF,GAAvB,KAAAxF,OAAAA,EAAuB,KAAAwF,OAAAA,CAAiB,EAElE,CAZD,CAAUR,IAAAA,EAAa,KAcG,W,eCtE1B,IAAUY,E,kEAAV,SAAUA,GACN,IAAYxjC,GAAZ,SAAYA,GACR,oBACA,oBACA,kBACA,eACH,CALD,CAAYA,EAAA,EAAAA,QAAA,EAAAA,MAAK,IAUpB,CAXD,CAAUwjC,IAAAA,EAAyB,KAaG,W,kECvDtC,gBACA,UAkBA,UAhBA,MACI5jC,YAAoB6jC,GAAA,KAAAA,KAAAA,EAYpB,KAAAvoB,QAAU,IAAI,EAAA9d,KAZmC,CAEjDqiB,OACI/mB,KAAK+qC,KAAKC,sBAAqC,EAAAC,YAAYC,oBAAoBnrB,GAC3E/f,KAAKwiB,QAAQ/c,SAASsa,IAE9B,CAEA8C,KAAKL,GACDxiB,KAAK+qC,KAAKI,OAAgC,EAAAF,YAAYG,iBAAkBjnC,MAAMknC,KAAK7oB,GACvF,E,kGChBJ,6BACA,6BACA,6BAIA,UACA,6BAEA,MAAM8oB,EACFpkC,YAAoB6jC,GAAA,KAAAA,KAAAA,EA0FZ,KAAAzkB,WAAa,IAAIniB,MAAgB,GACjC,KAAAonC,SAAW,IAAIpnC,MAAc,GAC7B,KAAAqnC,SAAW,IAAIrnC,MAAwB,GACvC,KAAA27B,cAAgB,IAAI,UA5FxB,IAAK,IAAIj6B,EAAI,EAAGA,EAAI,EAAGA,IACnB7F,KAAKsmB,WAAWzgB,GAAK,IAAI,UAG7B,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACnB7F,KAAKwrC,SAAS3lC,GAAK,IAAI,UAG3B,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACnB7F,KAAKurC,SAAS1lC,GAAK,IAAI,SAE/B,CAEA4lC,aACIzrC,KAAK+qC,KAAKI,OAAqB,EAAAF,YAAYS,mBAAoB,CAC3DC,cAAe3rC,KAAKsmB,WAAWiC,IAAI+iB,EAAaM,gBAChDC,YAAa7rC,KAAKwrC,SAASjjB,IAAI+iB,EAAaQ,cAC5CC,YAAa/rC,KAAKurC,SAAShjB,IAAI+iB,EAAaU,cAC5CC,kBAAmBX,EAAaY,mBAAmBlsC,KAAK8/B,gBAEhE,CAEA8E,YAAY/+B,GACR,GAAIA,EAAI,GAAKA,EAAI,EACb,MAAM,IAAIpE,MAAM,0BAA0BoE,KAG9C,OAAO7F,KAAKsmB,WAAWzgB,EAC3B,CAEAg/B,UAAUh/B,GACN,GAAIA,EAAI,GAAKA,EAAI,EACb,MAAM,IAAIpE,MAAM,wBAAwBoE,KAE5C,OAAO7F,KAAKwrC,SAAS3lC,EACzB,CAEA07B,kBACI,OAAOvhC,KAAK8/B,aAChB,CAEAkF,UAAUn/B,GACN,GAAIA,EAAI,GAAKA,EAAI,EACb,MAAM,IAAIpE,MAAM,wBAAwBoE,KAG5C,OAAO7F,KAAKurC,SAAS1lC,EACzB,CAEQ2P,sBAAsB4S,GAC1B,MAAO,CACH+jB,GAAI/jB,EAASjP,QAAQnQ,OACrBojC,KAAMhkB,EAAShP,UAAUpQ,OACzB2b,KAAMyD,EAASnP,UAAUjQ,OACzBqjC,MAAOjkB,EAASlP,WAAWlQ,OAC3BsjC,KAAMlkB,EAAS/O,UAAUrQ,OAEjC,CAEQwM,oBAAoBivB,GACxB,MAAMr+B,EAAQ,CACVmmC,KAAM,IAAIpoC,MAAM,IAEpB,IAAK,IAAIoV,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAC9BnT,EAAMmmC,KAAKhzB,GAAO,IAAIpV,MAAM,GAC5B,IAAK,IAAIqV,EAAM,EAAGA,EAAM,EAAGA,IACvBpT,EAAMmmC,KAAKhzB,GAAKC,GAAOirB,EAAOhrB,OAAOF,EAAKC,GAAKxQ,M,CAGvD,OAAO5C,CACX,CAEQoP,oBAAoB6T,GACxB,MAAO,CACH1pB,MAAO0pB,EAAOnnB,WACdoqC,KAAMjjB,EAAOhQ,UAAUrQ,OAE/B,CAEQwM,0BAA0BipB,GAC9B,MAAO,CACH+N,YAAa/N,EAAarjB,wBAAwBpS,OAClDyjC,YAAahO,EAAapjB,wBAAwBrS,OAClD01B,OAAQD,EAAaxjB,kBAAkBjS,OACvCd,MAAOu2B,EAAavjB,iBAAiBlS,OACrC61B,MAAOJ,EAAatjB,iBAAiBnS,OAE7C,EASqB,W,iFChCI,UA5D7B,MACI9B,YACYwlC,EACAC,EACA/Z,EACAga,EACAC,GAER,GANQ,KAAAH,YAAAA,EACA,KAAAC,cAAAA,EACA,KAAA/Z,kBAAAA,EACA,KAAAga,YAAAA,EACA,KAAAC,cAAAA,EAmDJ,KAAAhvB,QAAkB,KAjDgB,IAAlC7d,KAAK4yB,kBAAkBrtB,OACvB,MAAM,IAAI9D,MAAM,yBAAyBzB,KAAK4yB,kBAAkBrtB,SAExE,CAEAuY,UAAU7D,GACNja,KAAK6d,QAAU5D,CACnB,CAEA8S,YACI,OAAO/sB,KAAK6d,OAChB,CAEAwnB,WACI,OAAOrlC,KAAK0sC,WAChB,CAEA9H,YAAY/+B,GACR,OAAO7F,KAAK2sC,cAAc/H,YAAY/+B,EAC1C,CAEAg/B,UAAUh/B,GACN,OAAO7F,KAAK2sC,cAAc9H,UAAUh/B,EACxC,CAEA07B,kBACI,OAAOvhC,KAAK2sC,cAAcpL,iBAC9B,CAEAyD,UAAUn/B,GACN,OAAO7F,KAAK2sC,cAAc3H,UAAUn/B,EACxC,CAEAinC,sBACI,OAAO9sC,KAAK4yB,iBAChB,CAEA8R,gBACI,OAAO1kC,KAAK4sC,WAChB,CAEAG,gBACI,OAAO/sC,KAAK0sC,WAChB,CAEAvH,aACI,OAAOnlC,KAAK6sC,aAChB,E,iGCtEJ,UACA,SAEA,6BACA,6BAEA,6BACA,6BACA,6BACA,6BAIA,UAEA,UACA,6BAkS6B,UAxR7B,MACI3lC,YAAoB8lC,GAAA,KAAAA,iBAAAA,EA8PpB,KAAApzB,aAAe,IAAI,EAAAlV,MACnB,KAAAu8B,gBAAkB,IAAI,EAAAv8B,MAEd,KAAAuoC,oBAAqB,EAErB,KAAAxa,OAAS,IAAI,EAAA3yB,MACb,KAAAotC,QAAkB,KAClB,KAAAnC,KAAoB,KAEpB,KAAAp6B,OAAS,UAA0BrJ,MAAMy4B,QACzC,KAAAoN,WAAoB,KAEpB,KAAAC,kBAAsC,KACtC,KAAAC,WAAa,EAEb,KAAAza,kBAAoB,IAAIzuB,MAA0B,GAClD,KAAAyoC,YAA6B,KAE7B,KAAAD,cAA8B,KAC9B,KAAAW,0BAAiC,KACjC,KAAAC,YAAc,EAEd,KAAAC,aAAiD,IApRT,CAE1CzmB,O,mDACF/mB,KAAKktC,QAAU,IAAIO,OAAOztC,KAAKgtC,kBAC/BhtC,KAAK+qC,KAAO,IAAI,EAAA2C,aAAY,CAAClrB,EAASmrB,IAAc3tC,KAAKktC,QAAQU,YAAYprB,EAASmrB,KAEtF3tC,KAAK4sC,YAAc,IAAI,UAAc,EAAG5sC,KAAK+qC,MAAMhkB,OAEnD,IAAK,IAAIlhB,EAAI,EAAGA,EAAI,EAAGA,IACnB7F,KAAK4yB,kBAAkB/sB,GAAK,IAAI,UAAmBA,EAAG7F,KAAK+qC,MAAMhkB,OAGrE,MAAM8mB,EAAa,IAAI,UAAW7tC,KAAK+qC,MACnC+C,EAAe,IAAI,UAAa9tC,KAAK+qC,MACrCgD,EAAe,IAAI,UAAa/tC,KAAK+qC,MAEzCgD,EAAahnB,OACb8mB,EAAW9mB,OAEX/mB,KAAKotC,kBAAoB,IAAI,UACzBS,EACAC,EACA9tC,KAAK4yB,kBACL5yB,KAAK4sC,YACLmB,GAGJ/tC,KAAKktC,QAAQc,UAAYC,GAAgBjuC,KAAK+qC,KAAKtlC,SAASwoC,EAAaluB,MAEzE/f,KAAK+qC,KACAC,sBAA8B,EAAAC,YAAYiD,yBAA0BluC,KAAKmuC,mBAAmBpoC,KAAK/F,OACjGgrC,sBAA8B,EAAAC,YAAYmD,eAAgBpuC,KAAKquC,kBAAkBtoC,KAAK/F,OAE3FA,KAAK2sC,cAAgBmB,CACzB,G,CAEM1W,MACFpY,EACA/E,EACAgD,G,mDAIA,aAFMjd,KAAK62B,OAEJ72B,KAAKyyB,OAAO/xB,cAAa,IAAY,EAAD,0CACvC,MAAM0F,QAAcpG,KAAK+qC,KAAKuD,IAC1B,EAAAC,SAASC,eACT,CACIxvB,SACA/E,SACAgD,kBAaR,OATI7W,IAAU,UAA0BkB,MAAM83B,QAC1Cp/B,KAAKwtC,aAAevzB,EACpBja,KAAKotC,kBAAkBtvB,UAAU7D,SAE3Bja,KAAKyuC,cAAcx0B,IAEzBja,KAAKwtC,aAAe,KAGjBxtC,KAAK0uC,YAAYtoC,EAC5B,KACJ,G,CAEAktB,QACI,OAAOtzB,KAAKyyB,OAAO/xB,cAAa,IAC5BV,KAAK+qC,KAAKuD,IAA2C,EAAAC,SAASI,gBAAgBrqC,MAAK8B,IAC/EpG,KAAK4uC,gBACE5uC,KAAK0uC,YAAYtoC,OAGpC,CAEAywB,OACI,OAAO72B,KAAKyyB,OAAO/xB,cAAa,IAC5BV,KAAK+qC,KAAKuD,IAA2C,EAAAC,SAASM,eAAevqC,MAAK8B,IAC9EpG,KAAK8uC,eACE9uC,KAAK0uC,YAAYtoC,OAGpC,CAEA8B,QACI,OAAOlI,KAAKyyB,OAAO/xB,cAAa,IAAY,EAAD,0CACvC,MAAM0F,QAAcpG,KAAK+qC,KAAKuD,IAA2C,EAAAC,SAASQ,gBAYlF,OARI/uC,KAAK2Q,SAAW,UAA0BrJ,MAAMq9B,OAC/Cv+B,IAAU,UAA0BkB,MAAM+3B,SACvCj5B,IAAU,UAA0BkB,MAAM83B,SAC9Cp/B,KAAKwtC,qBAECxtC,KAAKyuC,cAAczuC,KAAKwtC,eAG3BxtC,KAAK0uC,YAAYtoC,EAC5B,KACJ,CAEAkC,SACI,OAAOtI,KAAKyyB,OAAO/xB,cAAa,IAC5BV,KAAK+qC,KAAKuD,IAA2C,EAAAC,SAASS,iBAAiB1qC,MAAK8B,IAChFpG,KAAKivC,iBACEjvC,KAAK0uC,YAAYtoC,OAGpC,CAEA8oC,aAAaC,GAGT,OAFAnvC,KAAKitC,mBAAqBkC,EAEnBnvC,KAAK+qC,KAAKuD,IAAmB,EAAAC,SAASa,sBAAuBD,EACxE,CAEAr1B,KAAKxF,GACD,OAAOtU,KAAK+qC,KAAKuD,IAAoB,EAAAC,SAASc,cAAe/6B,EACjE,CAEAg7B,KAAKh7B,EAAe3U,GAChB,OAAOK,KAAK+qC,KAAKuD,IAAgC,EAAAC,SAASgB,cAAe,CAAEj7B,QAAO3U,SACtF,CAEA6vC,eACI,OAAOxvC,KAAKqtC,UAChB,CAEAoC,eACI,OAAOzvC,KAAKitC,kBAChB,CAEA9N,WACI,OAAOn/B,KAAK2Q,MAChB,CAEAqzB,eACI,OAAOhkC,KAAKmtC,UAChB,CAEAvC,sBACI,OAAQ5qC,KAAK2Q,QACT,KAAK,UAA0BrJ,MAAM+3B,QACrC,KAAK,UAA0B/3B,MAAM83B,OACjC,OAAOp/B,KAAKotC,kBAEhB,QACI,OAAO,KAEnB,CAEQsC,kBACJ,OAAO1vC,KAAK+qC,KACPuD,IAAkB,EAAAC,SAASoB,yBAC3BrrC,MAAKke,GAAYA,EAAU,IAAI/gB,MAAM+gB,GAAW,MACzD,CAEQksB,YACJtoC,GAEA,OAAIA,IAAU,UAA0BkB,MAAMq9B,MACnC3kC,KAAK0vC,kBAAkBprC,MAAKqgC,IAC/B3kC,KAAK2Q,OAASvK,EACdpG,KAAKmtC,WAAaxI,EAElB3kC,KAAK8uC,eAEL9uC,KAAK4Z,aAAanU,SAASW,GAEpBA,MAGXpG,KAAK2Q,OAASvK,EACdpG,KAAK4Z,aAAanU,SAASW,GAEpBA,EAEf,CAEQ+nC,mBAAmB3rB,GACvBxiB,KAAKqtC,WAAa7qB,EAClBxiB,KAAKihC,gBAAgBx7B,SAASzF,KAAKqtC,WACvC,CAEQgB,kBAAkB7rB,GACtBxiB,KAAKmtC,WAAa,IAAI1rC,MAAM+gB,GAAW,IAEvCxiB,KAAK8uC,eACL9uC,KAAK2Q,OAAS,UAA0BrJ,MAAMq9B,MAC9C3kC,KAAK4Z,aAAanU,SAASzF,KAAK2Q,OACpC,CAEc89B,cAAcx0B,G,yDAClBja,KAAKotC,kBAAkBL,gBAAgB3V,QAE7C,IAAK,IAAIvxB,EAAI,EAAGA,EAAI7F,KAAK4yB,kBAAkBrtB,OAAQM,UACzC7F,KAAK4yB,kBAAkB/sB,GAAGuxB,MAAMnd,SAEpCja,KAAK4sC,YAAYxV,QAEvBp3B,KAAK4vC,uBAEL5vC,KAAKutC,YAAc,CACvB,G,CAEQuB,eACqB,IAArB9uC,KAAKutC,cAITvtC,KAAKotC,kBAAkBL,gBAAgBlW,OACvC72B,KAAK4sC,YAAY/V,OACjB72B,KAAK6vC,sBAEL7vC,KAAKutC,YAAc,EACvB,CAEQqB,gBACqB,IAArB5uC,KAAKutC,cAITvtC,KAAK6vC,sBAEL7vC,KAAKutC,YAAc,EACvB,CAEQ0B,iBACqB,IAArBjvC,KAAKutC,cAITvtC,KAAK4vC,uBAEL5vC,KAAKutC,YAAc,EACvB,CAEQqC,uBACmC,OAAnC5vC,KAAKstC,4BACLttC,KAAKstC,0BAA4BwC,aAC7B,IAAM9vC,KAAK2sC,cAAclB,cA1PH,IA8PlC,CAEQoE,sBACmC,OAAnC7vC,KAAKstC,4BACLyC,cAAc/vC,KAAKstC,2BACnBttC,KAAKstC,0BAA4B,KAEzC,E,kGCtRJ,UAEA,6BAGA,UASA,MAAM0C,EACF9oC,YAAoBkY,EAAwB2rB,GAAxB,KAAA3rB,OAAAA,EAAwB,KAAA2rB,KAAAA,EAoF5C,KAAAle,SAAW,IAAI,EAAAnoB,MAEf,KAAAogC,YAAc,IAAI,EAAApgC,MAEV,KAAAia,YAAc,EACd,KAAAsxB,WAAa,EACb,KAAAC,SAAU,EAEV,KAAAC,WAAa,IAAI,WAAmB,IAAM,OAC1C,KAAAC,UAAY,IAAIjqB,QAEhB,KAAAkqB,UAAW,EAEX,KAAAC,mBAAqB,GAhGzBtwC,KAAKmwC,WAAW5uB,MAAMzgB,QAAQiE,WAAWirC,EAAcO,mBAAoBvwC,MAE3EA,KAAKswC,mBAAqB,EAAArF,YAAYuF,oBAAoBxwC,KAAKof,OACnE,CAEA2H,OAKI,OAJA/mB,KAAK+qC,KACAC,sBAAsB,EAAAC,YAAYwF,iBAAiBzwC,KAAKof,QAASpf,KAAK0wC,YAAY3qC,KAAK/F,OACvFgrC,sBAAsB,EAAAC,YAAY0F,oBAAoB3wC,KAAKof,QAASpf,KAAK4wC,eAAe7qC,KAAK/F,OAE3FA,IACX,CAEMo3B,Q,mDACF,GAAIp3B,KAAKqwC,SACL,OAGJ,MAAMQ,QAAe7wC,KAAK+qC,KAAKuD,IAC3B,EAAAC,SAASuC,sBAAsB9wC,KAAKof,SAGxCpf,KAAK2e,YAAckyB,EAAOvyB,WAC1Bte,KAAKiwC,WAAaY,EAAOE,UACzB/wC,KAAKkwC,QAAUW,EAAOzR,OAEtBp/B,KAAKqwC,UAAW,CACpB,G,CAEAxZ,OACI72B,KAAKqwC,UAAW,CACpB,CAEAna,WACI,OAAOl2B,KAAKkwC,OAChB,CAEApxB,gBACI,OAAO9e,KAAK2e,WAChB,CAEA6W,eACI,OAAOx1B,KAAKiwC,UAChB,CAEQz6B,0BAA0B6V,EAAqB7rB,GAC9CA,EAAK4wC,UAAUrZ,IAAI1L,IAIxB7rB,EAAKurC,KAAKI,OACN3rC,EAAK8wC,mBACL,CACI5oB,GAAIloB,EAAK4wC,UAAU/sC,IAAIgoB,GACvBrM,OAAQqM,EAAMrM,QAElB,CAACqM,EAAMrM,QAEf,CAEQ0xB,YAAYM,GAChB,IAAKhxC,KAAKqwC,SACN,OAGJ,MAAMhlB,EAAQrrB,KAAKmwC,WAAW9sC,MAC1B0c,EAAO,IAAI1B,aAAa2yB,EAAIhyB,QAEhCqM,EAAM/I,MAAMvC,GACZ/f,KAAKowC,UAAUzhC,IAAIoR,EAAMixB,EAAItpB,IAE7B1nB,KAAK6sB,SAASpnB,SAAS4lB,EAC3B,CAEQulB,eAAeI,GACfA,EAAI5R,SAAWp/B,KAAKkwC,UAIxBlwC,KAAKkwC,QAAUc,EAAI5R,OACnBp/B,KAAK8kC,YAAYr/B,SAASzF,KAAKkwC,SACnC,EAkBsB,W,kGCpH1B,UAKA,6BAEA,UAQA,MAAMe,EACF/pC,YAAoB6jC,GAAA,KAAAA,KAAAA,EA0EpB,KAAAle,SAAW,IAAI,EAAAnoB,MAEP,KAAAyrC,WAAa,IAAI,WAAgB,IAAM,OACvC,KAAAC,UAAwC,KAExC,KAAAc,SAAU,EACV,KAAA/X,OAAS,EACT,KAAAC,QAAU,EAhFdp5B,KAAKmwC,WAAW5uB,MAAMzgB,QAAQiE,WAAWksC,EAAWE,gBAAiBnxC,KACzE,CAEA+mB,OACI/mB,KAAK+qC,KAAKC,sBAAsB,EAAAC,YAAYmG,cAAepxC,KAAK0wC,YAAY3qC,KAAK/F,MACrF,CAEMo3B,Q,mDACEp3B,KAAKkxC,SACLlxC,KAAK62B,OAGT,MAAMwa,QAAwBrxC,KAAK+qC,KAAKuD,IAAmC,EAAAC,SAAS+C,oBAEpFtxC,KAAKkxC,SAAU,EACflxC,KAAKm5B,OAASkY,EAAgB/sB,MAC9BtkB,KAAKo5B,QAAUiY,EAAgB9sB,OAC/BvkB,KAAKowC,UAAY,IAAIjqB,OACzB,G,CAEA0Q,OACI72B,KAAKkxC,SAAU,CACnB,CAEAngB,WACI,OAAO/wB,KAAKm5B,MAChB,CAEAnI,YACI,OAAOhxB,KAAKo5B,OAChB,CAEQ5jB,uBAAuB+7B,EAAsB/xC,GACjD,IAAKA,EAAK0xC,QAAS,OAEnB,IAAK1xC,EAAK4wC,UAAUrZ,IAAIwa,GAEpB,YADAvf,QAAQC,KAAK,uCAIjB,MAAMvK,EAAKloB,EAAK4wC,UAAU/sC,IAAIkuC,GAC9B/xC,EAAK4wC,UAAUpoB,OAAOupB,GAEtB/xC,EAAKurC,KAAKI,OACN,EAAAF,YAAYuG,mBACZ,CACI9pB,KACA1I,OAAQuyB,EAAUxxB,KAAKf,QAE3B,CAACuyB,EAAUxxB,KAAKf,QAExB,CAEQ0xB,YAAYluB,GAChB,IAAKxiB,KAAKkxC,QAEN,YADAlf,QAAQC,KAAK,2CAIjB,GAAIjyB,KAAKm5B,SAAW3W,EAAQ8B,OAAStkB,KAAKo5B,UAAY5W,EAAQ+B,OAE1D,YADAyN,QAAQC,KAAK,mDAIjB,MAAM5G,EAAQrrB,KAAKmwC,WAAW9sC,MACxBkuC,EAAY,IAAIE,UAAU,IAAIC,kBAAkBlvB,EAAQxD,QAASwD,EAAQ8B,MAAO9B,EAAQ+B,QAE9F8G,EAAM/I,MAAMivB,GACZvxC,KAAKowC,UAAUzhC,IAAI4iC,EAAW/uB,EAAQkF,IAEtC1nB,KAAK6sB,SAASpnB,SAAS4lB,EAC3B,EAYmB,W,kGCpGvB,UAIA,6BAIA,UAsE+B,UA9D/B,MACInkB,YAAoBkY,EAAwB2rB,GAAxB,KAAA3rB,OAAAA,EAAwB,KAAA2rB,KAAAA,EAqD5C,KAAApU,cAAgB,IAAI,EAAAjyB,MACpB,KAAA+xB,cAAgB,IAAI,EAAA/xB,MACpB,KAAAmyB,KAAO,IAAI,EAAAnyB,MAEH,KAAAitC,eAAiB,IAAI,UACrB,KAAAvd,QAAU,CA1DuD,CAEzErN,OAMI,OALA/mB,KAAK+qC,KACAC,sBAAsB,EAAAC,YAAY2G,0BAA2B5xC,KAAK6xC,sBAAsB9rC,KAAK/F,OAC7FgrC,sBAAsB,EAAAC,YAAY6G,0BAA2B9xC,KAAK+xC,sBAAsBhsC,KAAK/F,OAC7FgrC,sBAAsB,EAAAC,YAAY+G,UAAWhyC,KAAKiyC,cAAclsC,KAAK/F,OAEnEA,IACX,CAEMo3B,MAAMnd,G,mDACR,MAAMi4B,QAAmBlyC,KAAK+qC,KAAKuD,IAC/B,EAAAC,SAAS4D,2BAA2BnyC,KAAKof,SAG7Cpf,KAAK2xC,eAAe7zB,UAAU7D,GAC9Bja,KAAKsiC,UAAU4P,EAAW1e,OAC9B,G,CAEA8O,UAAU3iC,GAGN,OAFAK,KAAKo0B,QAAUz0B,EAERK,IACX,CAEAu2B,YACI,OAAOv2B,KAAKo0B,OAChB,CAEAnW,UAAUC,GACN,OAAOle,KAAK2xC,eAAe1zB,UAAUC,EACzC,CAEQ6zB,sBAAsBvvB,GACtBA,EAAQlO,QAAUtU,KAAKof,SACvBpf,KAAKo0B,QAAU5R,EAAQ7iB,MACvBK,KAAKy2B,cAAchxB,SAASzF,KAAKo0B,SAEzC,CAEQyd,sBAAsBrvB,GACtBA,EAAQlO,QAAUtU,KAAKof,QACvBpf,KAAK22B,cAAclxB,SAAS+c,EAAQtE,IAE5C,CAEQ+zB,cAAc39B,GACdA,IAAUtU,KAAKof,QACfpf,KAAK62B,KAAKpxB,cAAS5B,EAE3B,E,gGCjES,EAAA0qC,SAAW,CACpBI,eAAgB,kBAChBI,eAAgB,kBAChBC,gBAAiB,mBACjBI,sBAAuB,yBACvBZ,eAAgB,kBAChBK,cAAe,iBACfc,wBAAyB,2BACzBN,cAAe,iBACfE,cAAe,iBACf+B,mBAAoB,sBACpBa,2BAA6B79B,GAAkB,gCAAgCA,IAC/Ew8B,sBAAwBx8B,GAAkB,2BAA2BA,IACrE89B,MAAO,UAEX3yC,OAAO4yC,OAAO,EAAA9D,UAED,EAAAtD,YAAc,CACvBmD,eAAgB,kBAChBF,yBAA0B,4BAC1BkD,cAAe,iBACfI,mBAAoB,sBACpB9F,mBAAoB,sBACpBoG,0BAA2B,8BAC3BF,0BAA2B,8BAC3BnB,iBAAmBn8B,GAAkB,sBAAsBA,IAC3Dq8B,oBAAsBr8B,GAAkB,yBAAyBA,IACjEk8B,oBAAsBl8B,GAAkB,yBAAyBA,IACjE09B,UAAW,aACX9G,mBAAoB,sBACpBE,iBAAkB,qBAEtB3rC,OAAO4yC,OAAO,EAAApH,Y,qgBC5Cd,IAAIqH,EAAgB,SAASC,EAAG7c,GAI5B,OAHA4c,EAAgB7yC,OAAO+yC,gBAClB,CAAEC,UAAW,cAAgBtuC,OAAS,SAAUouC,EAAG7c,GAAK6c,EAAEE,UAAY/c,CAAG,GAC1E,SAAU6c,EAAG7c,GAAK,IAAK,IAAIpvB,KAAKovB,EAAOj2B,OAAOU,UAAUuyC,eAAeC,KAAKjd,EAAGpvB,KAAIisC,EAAEjsC,GAAKovB,EAAEpvB,GAAI,EAC7FgsC,EAAcC,EAAG7c,EAC5B,EAEO,SAASkd,EAAUL,EAAG7c,GACzB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAImd,UAAU,uBAAyBC,OAAOpd,GAAK,iCAE7D,SAASqd,IAAO/yC,KAAKkH,YAAcqrC,CAAG,CADtCD,EAAcC,EAAG7c,GAEjB6c,EAAEpyC,UAAkB,OAANu1B,EAAaj2B,OAAOsO,OAAO2nB,IAAMqd,EAAG5yC,UAAYu1B,EAAEv1B,UAAW,IAAI4yC,EACnF,CAEO,IAAIC,EAAW,WAQlB,OAPAA,EAAWvzC,OAAOwzC,QAAU,SAAkBhY,GAC1C,IAAK,IAAIn0B,EAAGjB,EAAI,EAAGqtC,EAAIC,UAAU5tC,OAAQM,EAAIqtC,EAAGrtC,IAE5C,IAAK,IAAIS,KADTQ,EAAIqsC,UAAUttC,GACOpG,OAAOU,UAAUuyC,eAAeC,KAAK7rC,EAAGR,KAAI20B,EAAE30B,GAAKQ,EAAER,IAE9E,OAAO20B,CACX,EACO+X,EAAShtC,MAAMhG,KAAMmzC,UAChC,EAEO,SAASC,EAAOtsC,EAAGyiB,GACtB,IAAI0R,EAAI,CAAC,EACT,IAAK,IAAI30B,KAAKQ,EAAOrH,OAAOU,UAAUuyC,eAAeC,KAAK7rC,EAAGR,IAAMijB,EAAEzB,QAAQxhB,GAAK,IAC9E20B,EAAE30B,GAAKQ,EAAER,IACb,GAAS,MAALQ,GAAqD,mBAAjCrH,OAAO4zC,sBACtB,KAAIxtC,EAAI,EAAb,IAAgBS,EAAI7G,OAAO4zC,sBAAsBvsC,GAAIjB,EAAIS,EAAEf,OAAQM,IAC3D0jB,EAAEzB,QAAQxhB,EAAET,IAAM,GAAKpG,OAAOU,UAAUmzC,qBAAqBX,KAAK7rC,EAAGR,EAAET,MACvEo1B,EAAE30B,EAAET,IAAMiB,EAAER,EAAET,IAF4B,CAItD,OAAOo1B,CACX,CAEO,SAASsY,EAAWC,EAAYvyB,EAAQ/C,EAAKu1B,GAChD,IAA2HlB,EAAvHmB,EAAIP,UAAU5tC,OAAQisB,EAAIkiB,EAAI,EAAIzyB,EAAkB,OAATwyB,EAAgBA,EAAOh0C,OAAOk0C,yBAAyB1yB,EAAQ/C,GAAOu1B,EACrH,GAAuB,iBAAZG,SAAoD,mBAArBA,QAAQC,SAAyBriB,EAAIoiB,QAAQC,SAASL,EAAYvyB,EAAQ/C,EAAKu1B,QACpH,IAAK,IAAI5tC,EAAI2tC,EAAWjuC,OAAS,EAAGM,GAAK,EAAGA,KAAS0sC,EAAIiB,EAAW3tC,MAAI2rB,GAAKkiB,EAAI,EAAInB,EAAE/gB,GAAKkiB,EAAI,EAAInB,EAAEtxB,EAAQ/C,EAAKsT,GAAK+gB,EAAEtxB,EAAQ/C,KAASsT,GAChJ,OAAOkiB,EAAI,GAAKliB,GAAK/xB,OAAOC,eAAeuhB,EAAQ/C,EAAKsT,GAAIA,CAChE,CAEO,SAASsiB,EAAQC,EAAYC,GAChC,OAAO,SAAU/yB,EAAQ/C,GAAO81B,EAAU/yB,EAAQ/C,EAAK61B,EAAa,CACxE,CAEO,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZP,SAAoD,mBAArBA,QAAQQ,SAAyB,OAAOR,QAAQQ,SAASF,EAAaC,EACpH,CAEO,SAAS9zC,EAAUg0C,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAI5yC,WAAU,SAAUC,EAASC,GAC/C,SAAS4yC,EAAU90C,GAAS,IAAM+0C,EAAKF,EAAUvhC,KAAKtT,GAAkC,CAAvB,MAAO4pB,GAAK1nB,EAAO0nB,EAAI,CAAE,CAC1F,SAASorB,EAASh1C,GAAS,IAAM+0C,EAAKF,EAAiB,MAAE70C,GAAkC,CAAvB,MAAO4pB,GAAK1nB,EAAO0nB,EAAI,CAAE,CAC7F,SAASmrB,EAAKpkC,GAJlB,IAAe3Q,EAIa2Q,EAAOskC,KAAOhzC,EAAQ0O,EAAO3Q,QAJ1CA,EAIyD2Q,EAAO3Q,MAJhDA,aAAiB40C,EAAI50C,EAAQ,IAAI40C,GAAE,SAAU3yC,GAAWA,EAAQjC,EAAQ,KAIjB2E,KAAKmwC,EAAWE,EAAW,CAC7GD,GAAMF,EAAYA,EAAUxuC,MAAMquC,EAASC,GAAc,KAAKrhC,OAClE,GACJ,CAEO,SAAS3S,EAAY+zC,EAASvvB,GACjC,IAAsGvG,EAAGzV,EAAGmyB,EAAG4Z,EAA3G5W,EAAI,CAAEz9B,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPw6B,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAGh5B,KAAM,GAAIyH,IAAK,IAChG,OAAOmrC,EAAI,CAAE5hC,KAAM6hC,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAX9zB,SAA0B6zB,EAAE7zB,OAAO+zB,UAAY,WAAa,OAAO/0C,IAAM,GAAI60C,EACvJ,SAASC,EAAK5B,GAAK,OAAO,SAAU8B,GAAK,OACzC,SAAcxlC,GACV,GAAI+O,EAAG,MAAM,IAAIs0B,UAAU,mCAC3B,KAAO5U,OACH,GAAI1f,EAAI,EAAGzV,IAAMmyB,EAAY,EAARzrB,EAAG,GAAS1G,EAAU,OAAI0G,EAAG,GAAK1G,EAAS,SAAOmyB,EAAInyB,EAAU,SAAMmyB,EAAE0X,KAAK7pC,GAAI,GAAKA,EAAEmK,SAAWgoB,EAAIA,EAAE0X,KAAK7pC,EAAG0G,EAAG,KAAKolC,KAAM,OAAO3Z,EAE3J,OADInyB,EAAI,EAAGmyB,IAAGzrB,EAAK,CAAS,EAARA,EAAG,GAAQyrB,EAAEt7B,QACzB6P,EAAG,IACP,KAAK,EAAG,KAAK,EAAGyrB,EAAIzrB,EAAI,MACxB,KAAK,EAAc,OAAXyuB,EAAEz9B,QAAgB,CAAEb,MAAO6P,EAAG,GAAIolC,MAAM,GAChD,KAAK,EAAG3W,EAAEz9B,QAASsI,EAAI0G,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKyuB,EAAEv0B,IAAI6V,MAAO0e,EAAEh8B,KAAKsd,MAAO,SACxC,QACI,MAAkB0b,GAAZA,EAAIgD,EAAEh8B,MAAYsD,OAAS,GAAK01B,EAAEA,EAAE11B,OAAS,KAAkB,IAAViK,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEyuB,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVzuB,EAAG,MAAcyrB,GAAMzrB,EAAG,GAAKyrB,EAAE,IAAMzrB,EAAG,GAAKyrB,EAAE,IAAM,CAAEgD,EAAEz9B,MAAQgP,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYyuB,EAAEz9B,MAAQy6B,EAAE,GAAI,CAAEgD,EAAEz9B,MAAQy6B,EAAE,GAAIA,EAAIzrB,EAAI,KAAO,CACpE,GAAIyrB,GAAKgD,EAAEz9B,MAAQy6B,EAAE,GAAI,CAAEgD,EAAEz9B,MAAQy6B,EAAE,GAAIgD,EAAEv0B,IAAI5H,KAAK0N,GAAK,KAAO,CAC9DyrB,EAAE,IAAIgD,EAAEv0B,IAAI6V,MAChB0e,EAAEh8B,KAAKsd,MAAO,SAEtB/P,EAAKsV,EAAK6tB,KAAK0B,EAASpW,GAC1B,MAAO1U,GAAK/Z,EAAK,CAAC,EAAG+Z,GAAIzgB,EAAI,CAAG,CAAE,QAAUyV,EAAI0c,EAAI,CAAG,CACzD,GAAY,EAARzrB,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE7P,MAAO6P,EAAG,GAAKA,EAAG,QAAK,EAAQolC,MAAM,EAC9E,CAtBgDF,CAAK,CAACxB,EAAG8B,GAAK,CAAG,CAuBrE,CAEO,IAAIC,EAAkBx1C,OAAOsO,OAAS,SAAUgD,EAAG8W,EAAGqtB,EAAGC,QACjDtxC,IAAPsxC,IAAkBA,EAAKD,GAC3B,IAAIzB,EAAOh0C,OAAOk0C,yBAAyB9rB,EAAGqtB,GACzCzB,KAAS,QAASA,GAAQ5rB,EAAEutB,WAAa3B,EAAKryB,UAAYqyB,EAAKpyB,gBAChEoyB,EAAO,CAAErwC,YAAY,EAAMC,IAAK,WAAa,OAAOwkB,EAAEqtB,EAAI,IAE9Dz1C,OAAOC,eAAeqR,EAAGokC,EAAI1B,EAChC,EAAI,SAAU1iC,EAAG8W,EAAGqtB,EAAGC,QACTtxC,IAAPsxC,IAAkBA,EAAKD,GAC3BnkC,EAAEokC,GAAMttB,EAAEqtB,EACb,EAEM,SAAS1xC,EAAaqkB,EAAG9W,GAC5B,IAAK,IAAIzK,KAAKuhB,EAAa,YAANvhB,GAAoB7G,OAAOU,UAAUuyC,eAAeC,KAAK5hC,EAAGzK,IAAI2uC,EAAgBlkC,EAAG8W,EAAGvhB,EAC/G,CAEO,SAAS+uC,EAAStkC,GACrB,IAAIjK,EAAsB,mBAAXka,QAAyBA,OAAO+zB,SAAUltB,EAAI/gB,GAAKiK,EAAEjK,GAAIjB,EAAI,EAC5E,GAAIgiB,EAAG,OAAOA,EAAE8qB,KAAK5hC,GACrB,GAAIA,GAAyB,iBAAbA,EAAExL,OAAqB,MAAO,CAC1C0N,KAAM,WAEF,OADIlC,GAAKlL,GAAKkL,EAAExL,SAAQwL,OAAI,GACrB,CAAEpR,MAAOoR,GAAKA,EAAElL,KAAM+uC,MAAO7jC,EACxC,GAEJ,MAAM,IAAI8hC,UAAU/rC,EAAI,0BAA4B,kCACxD,CAEO,SAASwuC,EAAOvkC,EAAGmiC,GACtB,IAAIrrB,EAAsB,mBAAX7G,QAAyBjQ,EAAEiQ,OAAO+zB,UACjD,IAAKltB,EAAG,OAAO9W,EACf,IAAmBygB,EAAYjI,EAA3B1jB,EAAIgiB,EAAE8qB,KAAK5hC,GAAOwkC,EAAK,GAC3B,IACI,WAAc,IAANrC,GAAgBA,KAAM,MAAQ1hB,EAAI3rB,EAAEoN,QAAQ2hC,MAAMW,EAAGzzC,KAAK0vB,EAAE7xB,MAQxE,CANA,MAAOglC,GAASpb,EAAI,CAAEob,MAAOA,EAAS,CACtC,QACI,IACQnT,IAAMA,EAAEojB,OAAS/sB,EAAIhiB,EAAU,SAAIgiB,EAAE8qB,KAAK9sC,EAElB,CAAhC,QAAU,GAAI0jB,EAAG,MAAMA,EAAEob,KAAO,CACpC,CACA,OAAO4Q,CACX,CAGO,SAASC,IACZ,IAAK,IAAID,EAAK,GAAI1vC,EAAI,EAAGA,EAAIstC,UAAU5tC,OAAQM,IAC3C0vC,EAAKA,EAAG7zC,OAAO4zC,EAAOnC,UAAUttC,KACpC,OAAO0vC,CACX,CAGO,SAASE,IACZ,IAAK,IAAI3uC,EAAI,EAAGjB,EAAI,EAAG6vC,EAAKvC,UAAU5tC,OAAQM,EAAI6vC,EAAI7vC,IAAKiB,GAAKqsC,UAAUttC,GAAGN,OACxE,IAAIisB,EAAIrtB,MAAM2C,GAAIouC,EAAI,EAA3B,IAA8BrvC,EAAI,EAAGA,EAAI6vC,EAAI7vC,IACzC,IAAK,IAAI8C,EAAIwqC,UAAUttC,GAAI6I,EAAI,EAAGinC,EAAKhtC,EAAEpD,OAAQmJ,EAAIinC,EAAIjnC,IAAKwmC,IAC1D1jB,EAAE0jB,GAAKvsC,EAAE+F,GACjB,OAAO8iB,CACX,CAEO,SAASokB,EAAcC,EAAIxK,EAAMyK,GACpC,GAAIA,GAA6B,IAArB3C,UAAU5tC,OAAc,IAAK,IAA4BgwC,EAAxB1vC,EAAI,EAAGkwC,EAAI1K,EAAK9lC,OAAYM,EAAIkwC,EAAGlwC,KACxE0vC,GAAQ1vC,KAAKwlC,IACRkK,IAAIA,EAAKpxC,MAAMhE,UAAU61C,MAAMrD,KAAKtH,EAAM,EAAGxlC,IAClD0vC,EAAG1vC,GAAKwlC,EAAKxlC,IAGrB,OAAOgwC,EAAGn0C,OAAO6zC,GAAMpxC,MAAMhE,UAAU61C,MAAMrD,KAAKtH,GACtD,CAEO,SAAS4K,EAAQjB,GACpB,OAAOh1C,gBAAgBi2C,GAAWj2C,KAAKg1C,EAAIA,EAAGh1C,MAAQ,IAAIi2C,EAAQjB,EACtE,CAEO,SAASkB,EAAiB7B,EAASC,EAAYE,GAClD,IAAKxzB,OAAOm1B,cAAe,MAAM,IAAItD,UAAU,wCAC/C,IAAoDhtC,EAAhDgvC,EAAIL,EAAUxuC,MAAMquC,EAASC,GAAc,IAAQ8B,EAAI,GAC3D,OAAOvwC,EAAI,CAAC,EAAGivC,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWjvC,EAAEmb,OAAOm1B,eAAiB,WAAc,OAAOn2C,IAAM,EAAG6F,EACpH,SAASivC,EAAK5B,GAAS2B,EAAE3B,KAAIrtC,EAAEqtC,GAAK,SAAU8B,GAAK,OAAO,IAAIrzC,SAAQ,SAAUgH,EAAG+sB,GAAK0gB,EAAEt0C,KAAK,CAACoxC,EAAG8B,EAAGrsC,EAAG+sB,IAAM,GAAKptB,EAAO4qC,EAAG8B,EAAI,GAAI,EAAG,CACzI,SAAS1sC,EAAO4qC,EAAG8B,GAAK,KACVxjB,EADqBqjB,EAAE3B,GAAG8B,IACnBr1C,iBAAiBs2C,EAAUt0C,QAAQC,QAAQ4vB,EAAE7xB,MAAMq1C,GAAG1wC,KAAK+xC,EAASx0C,GAAUy0C,EAAOF,EAAE,GAAG,GAAI5kB,EADpC,CAAhC,MAAOjI,GAAK+sB,EAAOF,EAAE,GAAG,GAAI7sB,EAAI,CAC/E,IAAciI,CADmE,CAEjF,SAAS6kB,EAAQ12C,GAAS2I,EAAO,OAAQ3I,EAAQ,CACjD,SAASkC,EAAOlC,GAAS2I,EAAO,QAAS3I,EAAQ,CACjD,SAAS22C,EAAO/3B,EAAGy2B,GAASz2B,EAAEy2B,GAAIoB,EAAE5zC,QAAS4zC,EAAE7wC,QAAQ+C,EAAO8tC,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAK,CACrF,CAEO,SAASG,EAAiBxlC,GAC7B,IAAIlL,EAAGS,EACP,OAAOT,EAAI,CAAC,EAAGivC,EAAK,QAASA,EAAK,SAAS,SAAUvrB,GAAK,MAAMA,CAAG,IAAIurB,EAAK,UAAWjvC,EAAEmb,OAAO+zB,UAAY,WAAc,OAAO/0C,IAAM,EAAG6F,EAC1I,SAASivC,EAAK5B,EAAG30B,GAAK1Y,EAAEqtC,GAAKniC,EAAEmiC,GAAK,SAAU8B,GAAK,OAAQ1uC,GAAKA,GAAK,CAAE3G,MAAOs2C,EAAQllC,EAAEmiC,GAAG8B,IAAKJ,KAAY,WAAN1B,GAAmB30B,EAAIA,EAAEy2B,GAAKA,CAAG,EAAIz2B,CAAG,CAClJ,CAEO,SAASi4B,EAAczlC,GAC1B,IAAKiQ,OAAOm1B,cAAe,MAAM,IAAItD,UAAU,wCAC/C,IAAiChtC,EAA7BgiB,EAAI9W,EAAEiQ,OAAOm1B,eACjB,OAAOtuB,EAAIA,EAAE8qB,KAAK5hC,IAAMA,EAAqCskC,EAAStkC,GAA2BlL,EAAI,CAAC,EAAGivC,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWjvC,EAAEmb,OAAOm1B,eAAiB,WAAc,OAAOn2C,IAAM,EAAG6F,GAC9M,SAASivC,EAAK5B,GAAKrtC,EAAEqtC,GAAKniC,EAAEmiC,IAAM,SAAU8B,GAAK,OAAO,IAAIrzC,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQ0wC,EAAGyC,GAAKrzC,QAAQC,QAAQozC,GAAG1wC,MAAK,SAAS0wC,GAAKpzC,EAAQ,CAAEjC,MAAOq1C,EAAGJ,KAAMrC,GAAM,GAAG1wC,EAAS,CADby0C,CAAO10C,EAASC,GAA7BmzC,EAAIjkC,EAAEmiC,GAAG8B,IAA8BJ,KAAMI,EAAEr1C,MAAQ,GAAI,CAAG,CAEnK,CAEO,SAAS82C,EAAqBC,EAAQC,GAEzC,OADIl3C,OAAOC,eAAkBD,OAAOC,eAAeg3C,EAAQ,MAAO,CAAE/2C,MAAOg3C,IAAiBD,EAAOC,IAAMA,EAClGD,CACX,CAEA,IAAIE,EAAqBn3C,OAAOsO,OAAS,SAAUgD,EAAGikC,GAClDv1C,OAAOC,eAAeqR,EAAG,UAAW,CAAE3N,YAAY,EAAMzD,MAAOq1C,GAClE,EAAI,SAASjkC,EAAGikC,GACbjkC,EAAW,QAAIikC,CACnB,EAEO,SAAS6B,EAAaC,GACzB,GAAIA,GAAOA,EAAI1B,WAAY,OAAO0B,EAClC,IAAIxmC,EAAS,CAAC,EACd,GAAW,MAAPwmC,EAAa,IAAK,IAAI5B,KAAK4B,EAAe,YAAN5B,GAAmBz1C,OAAOU,UAAUuyC,eAAeC,KAAKmE,EAAK5B,IAAID,EAAgB3kC,EAAQwmC,EAAK5B,GAEtI,OADA0B,EAAmBtmC,EAAQwmC,GACpBxmC,CACX,CAEO,SAASymC,EAAgBD,GAC5B,OAAQA,GAAOA,EAAI1B,WAAc0B,EAAM,CAAE52C,QAAS42C,EACtD,CAEO,SAASE,EAAuBC,EAAU7wC,EAAO8wC,EAAM34B,GAC1D,GAAa,MAAT24B,IAAiB34B,EAAG,MAAM,IAAIs0B,UAAU,iDAC5C,GAAqB,mBAAVzsC,EAAuB6wC,IAAa7wC,IAAUmY,GAAKnY,EAAM2wB,IAAIkgB,GAAW,MAAM,IAAIpE,UAAU,4EACvG,MAAgB,MAATqE,EAAe34B,EAAa,MAAT24B,EAAe34B,EAAEo0B,KAAKsE,GAAY14B,EAAIA,EAAE5e,MAAQyG,EAAM/C,IAAI4zC,EACxF,CAEO,SAASE,EAAuBF,EAAU7wC,EAAOzG,EAAOu3C,EAAM34B,GACjE,GAAa,MAAT24B,EAAc,MAAM,IAAIrE,UAAU,kCACtC,GAAa,MAATqE,IAAiB34B,EAAG,MAAM,IAAIs0B,UAAU,iDAC5C,GAAqB,mBAAVzsC,EAAuB6wC,IAAa7wC,IAAUmY,GAAKnY,EAAM2wB,IAAIkgB,GAAW,MAAM,IAAIpE,UAAU,2EACvG,MAAiB,MAATqE,EAAe34B,EAAEo0B,KAAKsE,EAAUt3C,GAAS4e,EAAIA,EAAE5e,MAAQA,EAAQyG,EAAMuI,IAAIsoC,EAAUt3C,GAASA,CACxG,CAEO,SAASy3C,EAAsBhxC,EAAO6wC,GACzC,GAAiB,OAAbA,GAA0C,iBAAbA,GAA6C,mBAAbA,EAA0B,MAAM,IAAIpE,UAAU,0CAC/G,MAAwB,mBAAVzsC,EAAuB6wC,IAAa7wC,EAAQA,EAAM2wB,IAAIkgB,EACxE,C,iBCtPAx3C,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAI03C,EAAkB,EAAQ,MAC1BC,EAA0B,sBAAuBC,EAAyB,qBAAsBC,EAAY,QAC5G9J,EAA6B,WAC7B,SAASA,EAAY3rC,EAAW01C,QACR,IAAhBA,IAA0BA,EAAc,GAC5Cz3C,KAAK+B,UAAYA,EACjB/B,KAAKy3C,YAAcA,EACnBz3C,KAAK2kC,MAAQ,IAAI0S,EAAgB3yC,MACjC1E,KAAK03C,aAAe,CAAC,EACrB13C,KAAK23C,gBAAkB,CAAC,EACxB33C,KAAK43C,qBAAuB,CAAC,EAC7B53C,KAAK63C,mBAAqB,CAC9B,CA6IA,OA5IAnK,EAAYvtC,UAAUsF,SAAW,SAAUhB,GACvC,IAAI+d,EAAU/d,EACd,OAAQ+d,EAAQqG,MACZ,KAAK6kB,EAAYoK,YAAY3M,OACzB,OAAOnrC,KAAK+3C,cAAcv1B,GAC9B,KAAKkrB,EAAYoK,YAAYxJ,IACzB,OAAOtuC,KAAKg4C,UAAUx1B,GAC1B,KAAKkrB,EAAYoK,YAAYG,SACzB,OAAOj4C,KAAKk4C,gBAAgB11B,GAChC,QACIxiB,KAAKm4C,YAAY,wBAA0B31B,EAAQqG,MAE/D,EACA6kB,EAAYvtC,UAAUmuC,IAAM,SAAU5mB,EAAIjjB,EAASkpC,GAC/C,IAAInsC,EAAQxB,KACRo4C,EAAgBp4C,KAAK63C,qBAOzB,OANA73C,KAAK+B,UAAU,CACX8mB,KAAM6kB,EAAYoK,YAAYxJ,IAC9B8J,cAAeA,EACf1wB,GAAIA,EACJjjB,QAASA,GACVkpC,QAAsB9pC,GAClB,IAAIlC,SAAQ,SAAUC,EAASC,GAClC,IAAIw2C,EAAc72C,EAAMo2C,qBAAqBQ,GAAiB,CAC1D1wB,GAAI0wB,EACJx2C,QAASA,EACTC,OAAQA,GAERL,EAAMi2C,YAAc,IACpBj2C,EAAMo2C,qBAAqBQ,GAAeE,cACtCp0C,YAAW,WAAc,OAAO1C,EAAM+2C,oBAAoBF,EAAc,GAAG72C,EAAMi2C,aAE7F,GACJ,EAEA/J,EAAYvtC,UAAUgrC,OAAS,SAAUzjB,EAAIjjB,EAASkpC,GAMlD,OALA3tC,KAAK+B,UAAU,CACX8mB,KAAM6kB,EAAYoK,YAAY3M,OAC9BzjB,GAAIA,EACJjjB,QAASA,GACVkpC,QAAsB9pC,GAClB7D,IACX,EACA0tC,EAAYvtC,UAAUq4C,mBAAqB,SAAU9wB,EAAI1iB,GACrD,GAAIhF,KAAK03C,aAAahwB,GAClB,MAAM,IAAIjmB,MAAM,mBAAqBimB,EAAK,uBAG9C,OADA1nB,KAAK03C,aAAahwB,GAAM1iB,EACjBhF,IACX,EAEA0tC,EAAYvtC,UAAU6qC,sBAAwB,SAAUtjB,EAAI1iB,GAKxD,OAJKhF,KAAK23C,gBAAgBjwB,KACtB1nB,KAAK23C,gBAAgBjwB,GAAM,IAE/B1nB,KAAK23C,gBAAgBjwB,GAAI5lB,KAAKkD,GACvBhF,IACX,EACA0tC,EAAYvtC,UAAUs4C,qBAAuB,SAAU/wB,EAAI1iB,GAIvD,OAHIhF,KAAK03C,aAAahwB,WACX1nB,KAAK03C,aAAahwB,GAEtB1nB,IACX,EAEA0tC,EAAYvtC,UAAUu4C,wBAA0B,SAAUhxB,EAAI1iB,GAI1D,OAHIhF,KAAK23C,gBAAgBjwB,KACrB1nB,KAAK23C,gBAAgBjwB,GAAM1nB,KAAK23C,gBAAgBjwB,GAAIixB,QAAO,SAAUC,GAAK,OAAO5zC,IAAY4zC,CAAG,KAE7F54C,IACX,EACA0tC,EAAYvtC,UAAUg4C,YAAc,SAAUxT,GAC1C3kC,KAAK2kC,MAAMl/B,SAAS,IAAIhE,MAAMkjC,IAC9B3kC,KAAK+B,UAAU,CACX8mB,KAAM6kB,EAAYoK,YAAYG,SAC9BvwB,GAAI8vB,EACJ/yC,QAASkgC,GAEjB,EACA+I,EAAYvtC,UAAU43C,cAAgB,SAAUv1B,GAC5C,IAAKxiB,KAAK23C,gBAAgBn1B,EAAQkF,IAC9B,OAAO1nB,KAAKm4C,YAAY,kBAAoB31B,EAAQkF,IAExD1nB,KAAK23C,gBAAgBn1B,EAAQkF,IAAItlB,SAAQ,SAAU4C,GAAW,OAAOA,EAAQwd,EAAQ/d,QAAU,GACnG,EACAipC,EAAYvtC,UAAU63C,UAAY,SAAUx1B,GACxC,IAAIhhB,EAAQxB,KACZ,IAAKA,KAAK03C,aAAal1B,EAAQkF,IAC3B,OAAO1nB,KAAKm4C,YAAY,eAAiB31B,EAAQkF,IAErD/lB,QAAQC,QAAQ5B,KAAK03C,aAAal1B,EAAQkF,IAAIlF,EAAQ/d,UACjDH,MAAK,SAAUgM,GAAU,OAAO9O,EAAMO,UAAU,CACjD8mB,KAAM6kB,EAAYoK,YAAYG,SAC9BvwB,GAAI4vB,EACJc,cAAe51B,EAAQ41B,cACvB3zC,QAAS6L,GACT,IAAG,SAAUuoC,GAAU,OAAOr3C,EAAMO,UAAU,CAC9C8mB,KAAM6kB,EAAYoK,YAAYG,SAC9BvwB,GAAI6vB,EACJa,cAAe51B,EAAQ41B,cACvB3zC,QAASo0C,GACT,GACR,EACAnL,EAAYvtC,UAAU+3C,gBAAkB,SAAU11B,GAC9C,IAAI61B,OAAiD,IAA3B71B,EAAqB,cAAoBxiB,KAAK43C,qBAAqBp1B,EAAQ41B,oBAAiBv0C,EACtH,OAAQ2e,EAAQkF,IACZ,KAAK4vB,EACD,IAAKe,QAAkD,IAA3B71B,EAAqB,cAC7C,OAAOxiB,KAAKm4C,YAAY,kCAAoC31B,EAAQ41B,eAExEC,EAAYz2C,QAAQ4gB,EAAQ/d,SAC5BzE,KAAK84C,kBAAkB94C,KAAK43C,qBAAqBp1B,EAAQ41B,gBACzD,MACJ,KAAKb,EACD,IAAKc,QAAkD,IAA3B71B,EAAqB,cAC7C,OAAOxiB,KAAKm4C,YAAY,kCAAoC31B,EAAQ41B,eAExEp4C,KAAK43C,qBAAqBp1B,EAAQ41B,eAAev2C,OAAO2gB,EAAQ/d,SAChEzE,KAAK84C,kBAAkB94C,KAAK43C,qBAAqBp1B,EAAQ41B,gBACzD,MACJ,KAAKZ,EACDx3C,KAAK2kC,MAAMl/B,SAAS,IAAIhE,MAAM,iBAAmB+gB,EAAQ/d,UACzD,MACJ,QACIzE,KAAKm4C,YAAY,8BAAgC31B,EAAQkF,IAGrE,EACAgmB,EAAYvtC,UAAUo4C,oBAAsB,SAAUF,GAClDA,EAAYx2C,OAAO,yBACnB7B,KAAKm4C,YAAY,eAAiBE,EAAY3wB,GAAK,qBAC5C1nB,KAAK43C,qBAAqBS,EAAY3wB,GAEjD,EACAgmB,EAAYvtC,UAAU24C,kBAAoB,SAAUT,QACL,IAA/BA,EAAyB,eACjCh0C,aAAag0C,EAAYC,sBAEtBt4C,KAAK43C,qBAAqBS,EAAY3wB,GACjD,EACOgmB,CACX,CAxJgC,IAyJhC,SAAWA,GAEP,IAAWoK,KAIMpK,EAAYoK,cAAgBpK,EAAYoK,YAAc,CAAC,IAHxDA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAsB,SAAI,GAAK,UAGlD,CARD,CAQGpK,IAAgBA,EAAc,CAAC,IAClCtuC,EAAA,QAAkBsuC,C,gBCrKlBjuC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtD,IAAIo5C,EAAgB,EAAQ,MAC5B35C,EAAQsuC,YAAcqL,EAAc74C,O,+CCDpC,MAAM84C,EAAY,CACjB,CACC,oBACA,iBACA,oBACA,oBACA,mBACA,mBAGD,CACC,0BACA,uBACA,0BACA,0BACA,yBACA,yBAID,CACC,0BACA,yBACA,iCACA,yBACA,yBACA,yBAGD,CACC,uBACA,sBACA,uBACA,uBACA,sBACA,sBAED,CACC,sBACA,mBACA,sBACA,sBACA,qBACA,sBAIIC,EAAY,MACjB,GAAwB,oBAAbp0B,SACV,OAAO,EAGR,MAAMq0B,EAAoBF,EAAU,GAC9BG,EAAc,CAAC,EAErB,IAAK,MAAMC,KAAcJ,EAAW,CACnC,MAAMK,EAAuBD,IAAa,GAC1C,GAAIC,KAAwBx0B,SAAU,CACrC,IAAK,MAAOvQ,EAAOglC,KAAWF,EAAWG,UACxCJ,EAAYD,EAAkB5kC,IAAUglC,EAGzC,OAAOH,CACR,CACD,CAEA,OAAO,CACP,EApBiB,GAsBZK,EAAe,CACpBC,OAAQR,EAAUS,iBAClB/U,MAAOsU,EAAUU,iBAIlB,IAAIC,EAAa,CAEhBj2B,QAAO,CAACS,EAAUS,SAASg1B,gBAAiBC,IACpC,IAAIn4C,SAAQ,CAACC,EAASC,KAC5B,MAAMk4C,EAAsB,KAC3BH,EAAWz1B,IAAI,SAAU41B,GACzBn4C,GAAS,EAGVg4C,EAAWl2B,GAAG,SAAUq2B,GAExB,MAAMC,EAAgB51B,EAAQ60B,EAAUgB,mBAAmBH,GAEvDE,aAAyBr4C,SAC5Bq4C,EAAc11C,KAAKy1C,GAAqBG,MAAMr4C,EAC/C,IAGFmiB,KAAI,IACI,IAAIriB,SAAQ,CAACC,EAASC,KAC5B,IAAK+3C,EAAW11B,aAEf,YADAtiB,IAID,MAAMu4C,EAAmB,KACxBP,EAAWz1B,IAAI,SAAUg2B,GACzBv4C,GAAS,EAGVg4C,EAAWl2B,GAAG,SAAUy2B,GAExB,MAAMH,EAAgBn1B,SAASo0B,EAAUmB,kBAErCJ,aAAyBr4C,SAC5Bq4C,EAAc11C,KAAK61C,GAAkBD,MAAMr4C,EAC5C,IAGFkY,OAAM,CAACqK,EAAS01B,IACRF,EAAW11B,aAAe01B,EAAW51B,OAAS41B,EAAWj2B,QAAQS,EAAS01B,GAElFO,SAAS15C,GACRi5C,EAAWl2B,GAAG,SAAU/iB,EACzB,EACA25C,QAAQ35C,GACPi5C,EAAWl2B,GAAG,QAAS/iB,EACxB,EACA+iB,GAAGnC,EAAO5gB,GACT,MAAM45C,EAAYf,EAAaj4B,GAC3Bg5B,GACH11B,SAASpB,iBAAiB82B,EAAW55C,GAAU,EAEjD,EACAwjB,IAAI5C,EAAO5gB,GACV,MAAM45C,EAAYf,EAAaj4B,GAC3Bg5B,GACH11B,SAASd,oBAAoBw2B,EAAW55C,GAAU,EAEpD,EACAg2C,IAAKsC,GAGNx5C,OAAO+6C,iBAAiBZ,EAAY,CACnC11B,aAAc,CACb7gB,IAAK,IAAMo3C,QAAQ51B,SAASo0B,EAAUyB,qBAEvCt2B,QAAS,CACRhhB,YAAY,EACZC,IAAK,IAAMwhB,SAASo0B,EAAUyB,yBAAsB72C,GAErD82C,UAAW,CACVv3C,YAAY,EAEZC,IAAK,IAAMo3C,QAAQ51B,SAASo0B,EAAU2B,uBAInC3B,IACJW,EAAa,CAACe,WAAW,IAG1B,S,GC9JIE,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBl3C,IAAjBm3C,EACH,OAAOA,EAAa57C,QAGrB,IAAIC,EAASw7C,EAAyBE,GAAY,CAGjD37C,QAAS,CAAC,GAOX,OAHA67C,EAAoBF,GAAU17C,EAAQA,EAAOD,QAAS07C,GAG/Cz7C,EAAOD,OACf,CCrBA07C,EAAoBvI,EAAI,CAACnzC,EAAS87C,KACjC,IAAI,IAAIh9B,KAAOg9B,EACXJ,EAAoB/pC,EAAEmqC,EAAYh9B,KAAS48B,EAAoB/pC,EAAE3R,EAAS8e,IAC5Eze,OAAOC,eAAeN,EAAS8e,EAAK,CAAE9a,YAAY,EAAMC,IAAK63C,EAAWh9B,IAE1E,ECND48B,EAAoB/pC,EAAI,CAACoqC,EAAKh6B,IAAU1hB,OAAOU,UAAUuyC,eAAeC,KAAKwI,EAAKh6B,GCClF25B,EAAoBtpB,EAAKpyB,IACH,oBAAX4hB,QAA0BA,OAAOo6B,aAC1C37C,OAAOC,eAAeN,EAAS4hB,OAAOo6B,YAAa,CAAEz7C,MAAO,WAE7DF,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,GAAO,E,mCCoB9D,E,OAAA,yBAEA,UAAe,CACXm/B,YAAA,U","sources":["webpack://$6502/webpack/universalModuleDefinition","webpack://$6502/./node_modules/async-mutex/lib/Mutex.js","webpack://$6502/./node_modules/async-mutex/lib/Semaphore.js","webpack://$6502/./node_modules/async-mutex/lib/errors.js","webpack://$6502/./node_modules/async-mutex/lib/index.js","webpack://$6502/./node_modules/async-mutex/lib/tryAcquire.js","webpack://$6502/./node_modules/async-mutex/lib/withTimeout.js","webpack://$6502/./node_modules/microevent.ts/lib/Event.js","webpack://$6502/./node_modules/microevent.ts/lib/index.js","webpack://$6502/./src/machine/cpu/BatchedAccessCpu.ts","webpack://$6502/./src/machine/cpu/CpuInterface.ts","webpack://$6502/./src/machine/cpu/Factory.ts","webpack://$6502/./src/machine/cpu/Instruction.ts","webpack://$6502/./src/machine/cpu/StateMachineCpu.ts","webpack://$6502/./src/machine/cpu/ops.ts","webpack://$6502/./src/machine/cpu/statemachine/Compiler.ts","webpack://$6502/./src/machine/cpu/statemachine/ResultImpl.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/absolute.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/absoluteIndexed.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/dereference.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/immediate.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/index.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/indexedIndirectX.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/indirect.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/indirectIndexedY.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/zeroPage.ts","webpack://$6502/./src/machine/cpu/statemachine/addressing/zeroPageIndexed.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/branch.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/index.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/jsr.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/nullaryOneCycle.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/pull.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/push.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/readModifyWrite.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/rti.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/rts.ts","webpack://$6502/./src/machine/cpu/statemachine/instruction/write.ts","webpack://$6502/./src/machine/cpu/statemachine/ops.ts","webpack://$6502/./src/machine/cpu/statemachine/vector/boot.ts","webpack://$6502/./src/machine/cpu/statemachine/vector/index.ts","webpack://$6502/./src/machine/cpu/statemachine/vector/interrupt.ts","webpack://$6502/./src/machine/io/DigitalJoystick.ts","webpack://$6502/./src/machine/io/KeypadController.ts","webpack://$6502/./src/machine/io/Paddle.ts","webpack://$6502/./src/machine/io/Switch.ts","webpack://$6502/./src/machine/stella/Config.ts","webpack://$6502/./src/machine/stella/ControlPanel.ts","webpack://$6502/./src/machine/stella/cartridge/CartridgeInfo.ts","webpack://$6502/./src/machine/stella/tia/ToneGenerator.ts","webpack://$6502/./src/tools/AudioOutputBuffer.ts","webpack://$6502/./src/tools/RingBuffer.ts","webpack://$6502/./src/tools/base64.ts","webpack://$6502/./src/tools/browser.ts","webpack://$6502/./src/tools/decorators.ts","webpack://$6502/./src/tools/pool/Pool.ts","webpack://$6502/./src/tools/pool/PoolMember.ts","webpack://$6502/./src/web/driver/AsyncIO.ts","webpack://$6502/./src/web/driver/FullscreenVideo.ts","webpack://$6502/./src/web/driver/Gamepad.ts","webpack://$6502/./src/web/driver/MouseAsPaddle.ts","webpack://$6502/./src/web/driver/Video.ts","webpack://$6502/./src/web/driver/WebAudio.ts","webpack://$6502/./src/web/driver/audio/LinearResampler.ts","webpack://$6502/./src/web/driver/audio/PCMChannel.ts","webpack://$6502/./src/web/driver/audio/WaveformChannel.ts","webpack://$6502/./src/web/driver/gamepad/Mapping.ts","webpack://$6502/./src/web/driver/gamepad/ShadowSwitch.ts","webpack://$6502/./src/web/driver/gamepad/defaultMapping.ts","webpack://$6502/./src/web/driver/video/Capabilities.ts","webpack://$6502/./src/web/driver/video/IntegerScalingProcessor.ts","webpack://$6502/./src/web/driver/video/NtscProcessor.ts","webpack://$6502/./src/web/driver/video/PhosphorProcessor.ts","webpack://$6502/./src/web/driver/video/Program.ts","webpack://$6502/./src/web/driver/video/ScanlineProcessor.ts","webpack://$6502/./src/web/driver/video/shader.ts","webpack://$6502/./src/web/embedded/stellerator/ControlPanelProxy.ts","webpack://$6502/./src/web/embedded/stellerator/Stellerator.ts","webpack://$6502/./src/web/embedded/stellerator/SwitchProxy.ts","webpack://$6502/./src/web/stella/driver/KeyboardIO.ts","webpack://$6502/./src/web/stella/driver/TouchIO.ts","webpack://$6502/./src/web/stella/driver/WebAudio.ts","webpack://$6502/./src/web/stella/driver/touch/DoubleTapDetector.ts","webpack://$6502/./src/web/stella/service/DriverManager.ts","webpack://$6502/./src/web/stella/service/EmulationServiceInterface.ts","webpack://$6502/./src/web/stella/service/worker/AsyncIOProxy.ts","webpack://$6502/./src/web/stella/service/worker/ControlProxy.ts","webpack://$6502/./src/web/stella/service/worker/EmulationContext.ts","webpack://$6502/./src/web/stella/service/worker/EmulationService.ts","webpack://$6502/./src/web/stella/service/worker/PCMAudioProxy.ts","webpack://$6502/./src/web/stella/service/worker/VideoProxy.ts","webpack://$6502/./src/web/stella/service/worker/WaveformAudioProxy.ts","webpack://$6502/./src/web/stella/service/worker/messages.ts","webpack://$6502/./node_modules/tslib/tslib.es6.js","webpack://$6502/./node_modules/worker-rpc/lib/RpcProvider.js","webpack://$6502/./node_modules/worker-rpc/lib/index.js","webpack://$6502/./node_modules/screenfull/index.js","webpack://$6502/webpack/bootstrap","webpack://$6502/webpack/runtime/define property getters","webpack://$6502/webpack/runtime/hasOwnProperty shorthand","webpack://$6502/webpack/runtime/make namespace object","webpack://$6502/./src/web/embedded/stellerator/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$6502\"] = factory();\n\telse\n\t\troot[\"$6502\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar Semaphore_1 = require(\"./Semaphore\");\nvar Mutex = /** @class */ (function () {\n    function Mutex(cancelError) {\n        this._semaphore = new Semaphore_1.default(1, cancelError);\n    }\n    Mutex.prototype.acquire = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, releaser;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._semaphore.acquire()];\n                    case 1:\n                        _a = _b.sent(), releaser = _a[1];\n                        return [2 /*return*/, releaser];\n                }\n            });\n        });\n    };\n    Mutex.prototype.runExclusive = function (callback) {\n        return this._semaphore.runExclusive(function () { return callback(); });\n    };\n    Mutex.prototype.isLocked = function () {\n        return this._semaphore.isLocked();\n    };\n    Mutex.prototype.waitForUnlock = function () {\n        return this._semaphore.waitForUnlock();\n    };\n    Mutex.prototype.release = function () {\n        if (this._semaphore.isLocked())\n            this._semaphore.release();\n    };\n    Mutex.prototype.cancel = function () {\n        return this._semaphore.cancel();\n    };\n    return Mutex;\n}());\nexports.default = Mutex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar errors_1 = require(\"./errors\");\nvar Semaphore = /** @class */ (function () {\n    function Semaphore(_value, _cancelError) {\n        if (_cancelError === void 0) { _cancelError = errors_1.E_CANCELED; }\n        this._value = _value;\n        this._cancelError = _cancelError;\n        this._weightedQueues = [];\n        this._weightedWaiters = [];\n    }\n    Semaphore.prototype.acquire = function (weight) {\n        var _this = this;\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        return new Promise(function (resolve, reject) {\n            if (!_this._weightedQueues[weight - 1])\n                _this._weightedQueues[weight - 1] = [];\n            _this._weightedQueues[weight - 1].push({ resolve: resolve, reject: reject });\n            _this._dispatch();\n        });\n    };\n    Semaphore.prototype.runExclusive = function (callback, weight) {\n        if (weight === void 0) { weight = 1; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _a, value, release;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.acquire(weight)];\n                    case 1:\n                        _a = _b.sent(), value = _a[0], release = _a[1];\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 4, 5]);\n                        return [4 /*yield*/, callback(value)];\n                    case 3: return [2 /*return*/, _b.sent()];\n                    case 4:\n                        release();\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Semaphore.prototype.waitForUnlock = function (weight) {\n        var _this = this;\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        return new Promise(function (resolve) {\n            if (!_this._weightedWaiters[weight - 1])\n                _this._weightedWaiters[weight - 1] = [];\n            _this._weightedWaiters[weight - 1].push(resolve);\n            _this._dispatch();\n        });\n    };\n    Semaphore.prototype.isLocked = function () {\n        return this._value <= 0;\n    };\n    Semaphore.prototype.getValue = function () {\n        return this._value;\n    };\n    Semaphore.prototype.setValue = function (value) {\n        this._value = value;\n        this._dispatch();\n    };\n    Semaphore.prototype.release = function (weight) {\n        if (weight === void 0) { weight = 1; }\n        if (weight <= 0)\n            throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n        this._value += weight;\n        this._dispatch();\n    };\n    Semaphore.prototype.cancel = function () {\n        var _this = this;\n        this._weightedQueues.forEach(function (queue) { return queue.forEach(function (entry) { return entry.reject(_this._cancelError); }); });\n        this._weightedQueues = [];\n    };\n    Semaphore.prototype._dispatch = function () {\n        var _a;\n        for (var weight = this._value; weight > 0; weight--) {\n            var queueEntry = (_a = this._weightedQueues[weight - 1]) === null || _a === void 0 ? void 0 : _a.shift();\n            if (!queueEntry)\n                continue;\n            var previousValue = this._value;\n            var previousWeight = weight;\n            this._value -= weight;\n            weight = this._value + 1;\n            queueEntry.resolve([previousValue, this._newReleaser(previousWeight)]);\n        }\n        this._drainUnlockWaiters();\n    };\n    Semaphore.prototype._newReleaser = function (weight) {\n        var _this = this;\n        var called = false;\n        return function () {\n            if (called)\n                return;\n            called = true;\n            _this.release(weight);\n        };\n    };\n    Semaphore.prototype._drainUnlockWaiters = function () {\n        for (var weight = this._value; weight > 0; weight--) {\n            if (!this._weightedWaiters[weight - 1])\n                continue;\n            this._weightedWaiters[weight - 1].forEach(function (waiter) { return waiter(); });\n            this._weightedWaiters[weight - 1] = [];\n        }\n    };\n    return Semaphore;\n}());\nexports.default = Semaphore;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.E_CANCELED = exports.E_ALREADY_LOCKED = exports.E_TIMEOUT = void 0;\nexports.E_TIMEOUT = new Error('timeout while waiting for mutex to become available');\nexports.E_ALREADY_LOCKED = new Error('mutex already locked');\nexports.E_CANCELED = new Error('request for lock canceled');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = exports.withTimeout = exports.Semaphore = exports.Mutex = void 0;\nvar tslib_1 = require(\"tslib\");\nvar Mutex_1 = require(\"./Mutex\");\nObject.defineProperty(exports, \"Mutex\", { enumerable: true, get: function () { return Mutex_1.default; } });\nvar Semaphore_1 = require(\"./Semaphore\");\nObject.defineProperty(exports, \"Semaphore\", { enumerable: true, get: function () { return Semaphore_1.default; } });\nvar withTimeout_1 = require(\"./withTimeout\");\nObject.defineProperty(exports, \"withTimeout\", { enumerable: true, get: function () { return withTimeout_1.withTimeout; } });\nvar tryAcquire_1 = require(\"./tryAcquire\");\nObject.defineProperty(exports, \"tryAcquire\", { enumerable: true, get: function () { return tryAcquire_1.tryAcquire; } });\ntslib_1.__exportStar(require(\"./errors\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tryAcquire = void 0;\nvar errors_1 = require(\"./errors\");\nvar withTimeout_1 = require(\"./withTimeout\");\n// eslint-disable-next-lisne @typescript-eslint/explicit-module-boundary-types\nfunction tryAcquire(sync, alreadyAcquiredError) {\n    if (alreadyAcquiredError === void 0) { alreadyAcquiredError = errors_1.E_ALREADY_LOCKED; }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (0, withTimeout_1.withTimeout)(sync, 0, alreadyAcquiredError);\n}\nexports.tryAcquire = tryAcquire;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withTimeout = void 0;\nvar tslib_1 = require(\"tslib\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar errors_1 = require(\"./errors\");\nfunction withTimeout(sync, timeout, timeoutError) {\n    var _this = this;\n    if (timeoutError === void 0) { timeoutError = errors_1.E_TIMEOUT; }\n    return {\n        acquire: function (weight) {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n            }\n            return new Promise(function (resolve, reject) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var isTimeout, handle, ticket, release, e_1;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            isTimeout = false;\n                            handle = setTimeout(function () {\n                                isTimeout = true;\n                                reject(timeoutError);\n                            }, timeout);\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, sync.acquire(weight)];\n                        case 2:\n                            ticket = _a.sent();\n                            if (isTimeout) {\n                                release = Array.isArray(ticket) ? ticket[1] : ticket;\n                                release();\n                            }\n                            else {\n                                clearTimeout(handle);\n                                resolve(ticket);\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            e_1 = _a.sent();\n                            if (!isTimeout) {\n                                clearTimeout(handle);\n                                reject(e_1);\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            }); });\n        },\n        runExclusive: function (callback, weight) {\n            return tslib_1.__awaiter(this, void 0, void 0, function () {\n                var release, ticket;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            release = function () { return undefined; };\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, , 7, 8]);\n                            return [4 /*yield*/, this.acquire(weight)];\n                        case 2:\n                            ticket = _a.sent();\n                            if (!Array.isArray(ticket)) return [3 /*break*/, 4];\n                            release = ticket[1];\n                            return [4 /*yield*/, callback(ticket[0])];\n                        case 3: return [2 /*return*/, _a.sent()];\n                        case 4:\n                            release = ticket;\n                            return [4 /*yield*/, callback()];\n                        case 5: return [2 /*return*/, _a.sent()];\n                        case 6: return [3 /*break*/, 8];\n                        case 7:\n                            release();\n                            return [7 /*endfinally*/];\n                        case 8: return [2 /*return*/];\n                    }\n                });\n            });\n        },\n        release: function (weight) {\n            sync.release(weight);\n        },\n        cancel: function () {\n            return sync.cancel();\n        },\n        waitForUnlock: function (weight) {\n            if (weight !== undefined && weight <= 0) {\n                throw new Error(\"invalid weight \".concat(weight, \": must be positive\"));\n            }\n            return new Promise(function (resolve, reject) {\n                sync.waitForUnlock(weight).then(resolve);\n                setTimeout(function () { return reject(timeoutError); }, timeout);\n            });\n        },\n        isLocked: function () { return sync.isLocked(); },\n        getValue: function () { return sync.getValue(); },\n        setValue: function (value) { return sync.setValue(value); },\n    };\n}\nexports.withTimeout = withTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar factories = [];\nfactories[0] = function () {\n    return function dispatcher0() { };\n};\nfactories[1] = function (callback, context) {\n    if (typeof (context) === 'undefined')\n        return callback;\n    return function dispatcher1(payload) {\n        callback(payload, context);\n    };\n};\nfunction getFactory(handlerCount) {\n    if (!factories[handlerCount])\n        factories[handlerCount] = compileFactory(handlerCount);\n    return factories[handlerCount];\n}\nfunction compileFactory(handlerCount) {\n    var src = 'return function dispatcher' + handlerCount + '(payload) {\\n';\n    var argsHandlers = [], argsContexts = [];\n    for (var i = 0; i < handlerCount; i++) {\n        argsHandlers.push('cb' + i);\n        argsContexts.push('ctx' + i);\n        src += '    cb' + i + '(payload, ctx' + i + ');\\n';\n    }\n    src += '};';\n    return new (Function.bind.apply(Function, [void 0].concat(argsHandlers.concat(argsContexts), [src])))();\n}\nvar Event = /** @class */ (function () {\n    function Event() {\n        this.hasHandlers = false;\n        this._handlers = [];\n        this._contexts = [];\n        this._createDispatcher();\n    }\n    Event.prototype.addHandler = function (handler, context) {\n        if (!this.isHandlerAttached(handler, context)) {\n            this._handlers.push(handler);\n            this._contexts.push(context);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.removeHandler = function (handler, context) {\n        var idx = this._getHandlerIndex(handler, context);\n        if (typeof (idx) !== 'undefined') {\n            this._handlers.splice(idx, 1);\n            this._contexts.splice(idx, 1);\n            this._createDispatcher();\n            this._updateHasHandlers();\n        }\n        return this;\n    };\n    Event.prototype.isHandlerAttached = function (handler, context) {\n        return typeof (this._getHandlerIndex(handler, context)) !== 'undefined';\n    };\n    Event.prototype._updateHasHandlers = function () {\n        this.hasHandlers = !!this._handlers.length;\n    };\n    Event.prototype._getHandlerIndex = function (handler, context) {\n        var handlerCount = this._handlers.length;\n        var idx;\n        for (idx = 0; idx < handlerCount; idx++) {\n            if (this._handlers[idx] === handler && this._contexts[idx] === context)\n                break;\n        }\n        return idx < handlerCount ? idx : undefined;\n    };\n    Event.prototype._createDispatcher = function () {\n        this.dispatch = getFactory(this._handlers.length).apply(this, this._handlers.concat(this._contexts));\n    };\n    return Event;\n}());\nexports.default = Event;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Event_1 = require(\"./Event\");\nexports.Event = Event_1.default;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Instruction from './Instruction';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\nimport * as ops from './ops';\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\n\nconst enum InterruptCheck {\n    endOfInstruction,\n    beforeOp\n}\nexport function opBoot(state: CpuInterface.State, bus: BusInterface): void {\n    state.p = bus.readWord(0xfffc);\n}\n\nfunction dispatchInterrupt(state: CpuInterface.State, bus: BusInterface, vector: number): void {\n    const nextOpAddr = state.p;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags & ~CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nexport function opIrq(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffe);\n}\n\nexport function opNmi(state: CpuInterface.State, bus: BusInterface) {\n    dispatchInterrupt(state, bus, 0xfffa);\n}\n\nclass BatchedAccessCpu {\n    constructor(private _bus: BusInterface, private _rng?: RngInterface) {\n        this.reset();\n    }\n\n    setInterrupt(irq: boolean): BatchedAccessCpu {\n        this._interruptPending = irq;\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): BatchedAccessCpu {\n        this._nmiPending = true;\n        return this;\n    }\n\n    halt(): BatchedAccessCpu {\n        this._halted = true;\n        return this;\n    }\n\n    resume(): BatchedAccessCpu {\n        this._halted = false;\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halted;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): BatchedAccessCpu {\n        this._invalidInstructionCallback = callback;\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    reset(): BatchedAccessCpu {\n        this.state.a = this._rng ? this._rng.int(0xff) : 0;\n        this.state.x = this._rng ? this._rng.int(0xff) : 0;\n        this.state.y = this._rng ? this._rng.int(0xff) : 0;\n        this.state.s = 0xfd;\n        this.state.p = this._rng ? this._rng.int(0xffff) : 0;\n        this.state.flags =\n            (this._rng ? this._rng.int(0xff) : 0) | CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._opCycles = 7;\n        this._interruptPending = false;\n        this._nmiPending = false;\n\n        this._instructionCallback = opBoot;\n\n        return this;\n    }\n\n    cycle(): BatchedAccessCpu {\n        if (this._halted) {\n            return this;\n        }\n\n        switch (this.executionState) {\n            case CpuInterface.ExecutionState.boot:\n            case CpuInterface.ExecutionState.execute:\n                if (--this._opCycles === 0) {\n                    if (this._dereference) {\n                        this._operand = this._bus.read(this._operand);\n                    }\n\n                    if (this._interuptCheck === InterruptCheck.beforeOp) {\n                        this._checkForInterrupts();\n                    }\n\n                    this._instructionCallback(this.state, this._bus, this._operand, this._currentAddressingMode);\n                    this.executionState = CpuInterface.ExecutionState.fetch;\n\n                    if (this._interuptCheck === InterruptCheck.endOfInstruction) {\n                        this._checkForInterrupts();\n                    }\n                }\n\n                break;\n\n            case CpuInterface.ExecutionState.fetch:\n                if (this.state.nmi) {\n                    this._instructionCallback = opNmi;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                if (this.state.irq) {\n                    this._instructionCallback = opIrq;\n                    this._opCycles = 6;\n                    this.state.nmi = this.state.irq = false;\n                    this._interuptCheck = InterruptCheck.beforeOp;\n                    this.executionState = CpuInterface.ExecutionState.execute;\n\n                    return this;\n                }\n\n                this._fetch();\n                break;\n        }\n\n        return this;\n    }\n\n    private _fetch() {\n        const instruction = Instruction.opcodes[this._bus.read(this.state.p)];\n\n        let addressingMode = instruction.addressingMode,\n            dereference = false,\n            slowIndexedAccess = false;\n\n        this._lastInstructionPointer = this.state.p;\n        this._currentAddressingMode = addressingMode;\n        this._interuptCheck = InterruptCheck.endOfInstruction;\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAdc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.and:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAnd;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.asl:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opAslAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opAslMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.bcc:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bcs:\n                if (this.state.flags & CpuInterface.Flags.c) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.beq:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bit:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opBit;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.bmi:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.bne:\n                if (this.state.flags & CpuInterface.Flags.z) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bpl:\n                if (this.state.flags & CpuInterface.Flags.n) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvc:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                } else {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                }\n                break;\n\n            case Instruction.Operation.bvs:\n                if (this.state.flags & CpuInterface.Flags.v) {\n                    this._instructionCallback = ops.opJmp;\n                    this._opCycles = 0;\n                } else {\n                    addressingMode = Instruction.AddressingMode.implied;\n                    this._instructionCallback = ops.opNop;\n                    this.state.p = (this.state.p + 1) & 0xffff;\n                    this._opCycles = 1;\n                }\n                break;\n\n            case Instruction.Operation.brk:\n                this._opCycles = 6;\n                this._instructionCallback = ops.opBrk;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clc:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opClc;\n                break;\n\n            case Instruction.Operation.cld:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opCld;\n                break;\n\n            case Instruction.Operation.cli:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opCli;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.clv:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opClv;\n                break;\n\n            case Instruction.Operation.cmp:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCmp;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpx:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCpx;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.cpy:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opCpy;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.dec:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opDec;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.dex:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opDex;\n                break;\n\n            case Instruction.Operation.dey:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opDey;\n                break;\n\n            case Instruction.Operation.eor:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opEor;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.inc:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opInc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.inx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opInx;\n                break;\n\n            case Instruction.Operation.iny:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opIny;\n                break;\n\n            case Instruction.Operation.jmp:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opJmp;\n                break;\n\n            case Instruction.Operation.jsr:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opJsr;\n                break;\n\n            case Instruction.Operation.lda:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLda;\n                break;\n\n            case Instruction.Operation.ldx:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLdx;\n                break;\n\n            case Instruction.Operation.ldy:\n                this._opCycles = addressingMode === Instruction.AddressingMode.immediate ? 0 : 1;\n                this._instructionCallback = ops.opLdy;\n                break;\n\n            case Instruction.Operation.lsr:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opLsrAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opLsrMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.nop:\n                this._opCycles = 1;\n\n                this._instructionCallback = ops.opNop;\n                break;\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                this._opCycles = 0;\n                dereference = true;\n\n                this._instructionCallback = ops.opNop;\n                break;\n\n            case Instruction.Operation.ora:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opOra;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.php:\n                this._opCycles = 2;\n                this._instructionCallback = ops.opPhp;\n                break;\n\n            case Instruction.Operation.pha:\n                this._opCycles = 2;\n                this._instructionCallback = ops.opPha;\n                break;\n\n            case Instruction.Operation.pla:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opPla;\n                break;\n\n            case Instruction.Operation.plp:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opPlp;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.rol:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opRolAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opRolMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.ror:\n                if (addressingMode === Instruction.AddressingMode.implied) {\n                    this._opCycles = 1;\n                    this._instructionCallback = ops.opRorAcc;\n                } else {\n                    this._opCycles = 3;\n                    this._instructionCallback = ops.opRorMem;\n                    slowIndexedAccess = true;\n                }\n                break;\n\n            case Instruction.Operation.rti:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opRti;\n                break;\n\n            case Instruction.Operation.rts:\n                this._opCycles = 5;\n                this._instructionCallback = ops.opRts;\n                break;\n\n            case Instruction.Operation.sbc:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opSbc;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.sec:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSec;\n                break;\n\n            case Instruction.Operation.sed:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSed;\n                break;\n\n            case Instruction.Operation.sei:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSei;\n                this._interuptCheck = InterruptCheck.beforeOp;\n                break;\n\n            case Instruction.Operation.sta:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSta;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.stx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opStx;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.sty:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opSty;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.tax:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTax;\n                break;\n\n            case Instruction.Operation.tay:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTay;\n                break;\n\n            case Instruction.Operation.tsx:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTsx;\n                break;\n\n            case Instruction.Operation.txa:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTxa;\n                break;\n\n            case Instruction.Operation.txs:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTxs;\n                break;\n\n            case Instruction.Operation.tya:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opTya;\n                break;\n\n            case Instruction.Operation.arr:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opArr;\n                break;\n\n            case Instruction.Operation.alr:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAlr;\n                break;\n\n            case Instruction.Operation.axs:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAxs;\n                break;\n\n            case Instruction.Operation.dcp:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opDcp;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.lax:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opLax;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.slo:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opSlo;\n                slowIndexedAccess = true;\n                dereference = false;\n                break;\n\n            case Instruction.Operation.aax:\n                this._opCycles = 1;\n                this._instructionCallback = ops.opAax;\n                break;\n\n            case Instruction.Operation.lar:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opLar;\n                dereference = true;\n                break;\n\n            case Instruction.Operation.isc:\n                this._opCycles = 3;\n                this._instructionCallback = ops.opIsc;\n                slowIndexedAccess = true;\n                break;\n\n            case Instruction.Operation.aac:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAac;\n                break;\n\n            case Instruction.Operation.atx:\n                this._opCycles = 0;\n                this._instructionCallback = ops.opAtx;\n                break;\n\n            case Instruction.Operation.rra:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = ops.opRra;\n                break;\n\n            case Instruction.Operation.rla:\n                this._opCycles = 3;\n                dereference = false;\n                slowIndexedAccess = true;\n                this._instructionCallback = ops.opRla;\n                break;\n\n            default:\n                if (this._invalidInstructionCallback) {\n                    this._invalidInstructionCallback(this);\n                }\n                return;\n        }\n\n        this.state.p = (this.state.p + 1) & 0xffff;\n\n        let value: number, base: number;\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                this._operand = this._bus.read(this.state.p);\n                dereference = false;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.zeroPage:\n                this._operand = this._bus.read(this.state.p);\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles++;\n                break;\n\n            case Instruction.AddressingMode.absolute:\n                this._operand = this._bus.readWord(this.state.p);\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.indirect:\n                value = this._bus.readWord(this.state.p);\n                if ((value & 0xff) === 0xff) {\n                    this._operand = this._bus.read(value) + (this._bus.read(value & 0xff00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n                this.state.p = (this.state.p + 2) & 0xffff;\n                this._opCycles += 4;\n                break;\n\n            case Instruction.AddressingMode.relative:\n                value = this._bus.read(this.state.p);\n                value = value & 0x80 ? -(~(value - 1) & 0xff) : value;\n                this._operand = (this.state.p + value + 0x10001) & 0xffff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += (this._operand & 0xff00) !== (this.state.p & 0xff00) ? 3 : 2;\n                break;\n\n            case Instruction.AddressingMode.zeroPageX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.x) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteX:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.x) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.zeroPageY:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                this._operand = (base + this.state.y) & 0xff;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                this._opCycles += 2;\n                break;\n\n            case Instruction.AddressingMode.absoluteY:\n                value = this._bus.readWord(this.state.p);\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (this._operand & 0xff00) !== (value & 0xff00) ? 3 : 2;\n                this.state.p = (this.state.p + 2) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                base = this._bus.read(this.state.p);\n                this._bus.read(base);\n\n                value = (base + this.state.x) & 0xff;\n\n                if (value === 0xff) {\n                    this._operand = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    this._operand = this._bus.readWord(value);\n                }\n\n                this._opCycles += 4;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                value = this._bus.read(this.state.p);\n\n                if (value === 0xff) {\n                    value = this._bus.read(0xff) + (this._bus.read(0x00) << 8);\n                } else {\n                    value = this._bus.readWord(value);\n                }\n\n                this._operand = (value + this.state.y) & 0xffff;\n\n                if ((this._operand & 0xff00) !== (value & 0xff00)) {\n                    this._bus.read((value & 0xff00) | (this._operand & 0xff));\n                }\n\n                this._opCycles += slowIndexedAccess || (value & 0xff00) !== (this._operand & 0xff00) ? 4 : 3;\n                this.state.p = (this.state.p + 1) & 0xffff;\n                break;\n        }\n\n        this._dereference = dereference;\n        if (dereference) {\n            this._opCycles++;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n    }\n\n    private _checkForInterrupts(): void {\n        if (this._nmiPending) {\n            this.state.irq = false;\n            this.state.nmi = true;\n            this._nmiPending = false;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState: CpuInterface.ExecutionState = CpuInterface.ExecutionState.boot;\n    state: CpuInterface.State = new CpuInterface.State();\n\n    private _opCycles: number = 0;\n    private _instructionCallback: InstructionCallbackInterface = null;\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _interruptPending: boolean = false;\n    private _nmiPending: boolean = false;\n    private _interuptCheck = InterruptCheck.endOfInstruction;\n\n    private _halted: boolean = false;\n\n    private _operand: number = 0;\n    private _lastInstructionPointer: number = 0;\n    private _currentAddressingMode: Instruction.AddressingMode = Instruction.AddressingMode.invalid;\n\n    private _dereference = false;\n}\n\ninterface InstructionCallbackInterface {\n    (\n        state?: CpuInterface.State,\n        bus?: BusInterface,\n        operand?: number,\n        addressingMode?: Instruction.AddressingMode\n    ): void;\n}\n\nexport { BatchedAccessCpu as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\ninterface CpuInterface {\n    setInterrupt(irq: boolean): CpuInterface;\n\n    isInterrupt(): boolean;\n\n    nmi(): CpuInterface;\n\n    halt(): CpuInterface;\n\n    resume(): CpuInterface;\n\n    isHalt(): boolean;\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): CpuInterface;\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface;\n\n    getLastInstructionPointer(): number;\n\n    reset(): CpuInterface;\n\n    cycle(): CpuInterface;\n\n    executionState: CpuInterface.ExecutionState;\n    state: CpuInterface.State;\n}\n\nnamespace CpuInterface {\n    export const enum ExecutionState {\n        boot,\n        fetch,\n        execute\n    }\n\n    export class State {\n        a: number = 0;\n        x: number = 0;\n        y: number = 0;\n        s: number = 0;\n        p: number = 0;\n        flags: number = 0;\n\n        irq = false;\n        nmi = false;\n    }\n\n    export const enum Flags {\n        c = 0x01, // carry\n        z = 0x02, // zero\n        i = 0x04, // interrupt\n        d = 0x08, // decimal mode\n        b = 0x10, // break\n        e = 0x20, // reserved\n        v = 0x40, // overflow\n        n = 0x80 // sign\n    }\n\n    export interface InvalidInstructionCallbackInterface {\n        (cpu?: CpuInterface): void;\n    }\n}\n\nexport { CpuInterface as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport RngInterface from '../../tools/rng/GeneratorInterface';\nimport BusInterface from '../bus/BusInterface';\nimport CpuInterface from './CpuInterface';\nimport StateMachineCpu from './StateMachineCpu';\nimport BatchedAccessCpu from './BatchedAccessCpu';\n\nclass Factory {\n    constructor(private _type: Factory.Type) {}\n\n    create(bus: BusInterface, rng?: RngInterface): CpuInterface {\n        switch (this._type) {\n            case Factory.Type.stateMachine:\n                return new StateMachineCpu(bus, rng);\n\n            case Factory.Type.batchedAccess:\n                return new BatchedAccessCpu(bus, rng);\n\n            default:\n                throw new Error('invalid CPU type');\n        }\n    }\n}\n\nnamespace Factory {\n    export enum Type {\n        stateMachine,\n        batchedAccess\n    }\n}\n\nexport default Factory;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nclass Instruction {\n    constructor(\n        public readonly operation: Instruction.Operation,\n        public readonly addressingMode: Instruction.AddressingMode,\n        public readonly effectiveAddressingMode = addressingMode\n    ) {}\n\n    getSize(): number {\n        switch (this.effectiveAddressingMode) {\n            case Instruction.AddressingMode.immediate:\n            case Instruction.AddressingMode.zeroPage:\n            case Instruction.AddressingMode.zeroPageX:\n            case Instruction.AddressingMode.zeroPageY:\n            case Instruction.AddressingMode.indexedIndirectX:\n            case Instruction.AddressingMode.indirectIndexedY:\n            case Instruction.AddressingMode.relative:\n                return 2;\n\n            case Instruction.AddressingMode.absolute:\n            case Instruction.AddressingMode.absoluteX:\n            case Instruction.AddressingMode.absoluteY:\n            case Instruction.AddressingMode.indirect:\n                return 3;\n\n            default:\n                return 1;\n        }\n    }\n}\n\nnamespace Instruction {\n    export const enum Operation {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export enum OperationMap {\n        adc,\n        and,\n        asl,\n        bcc,\n        bcs,\n        beq,\n        bit,\n        bmi,\n        bne,\n        bpl,\n        brk,\n        bvc,\n        bvs,\n        clc,\n        cld,\n        cli,\n        clv,\n        cmp,\n        cpx,\n        cpy,\n        dec,\n        dex,\n        dey,\n        eor,\n        inc,\n        inx,\n        iny,\n        jmp,\n        jsr,\n        lda,\n        ldx,\n        ldy,\n        lsr,\n        nop,\n        ora,\n        pha,\n        php,\n        pla,\n        plp,\n        rol,\n        ror,\n        rti,\n        rts,\n        sbc,\n        sec,\n        sed,\n        sei,\n        sta,\n        stx,\n        sty,\n        tax,\n        tay,\n        tsx,\n        txa,\n        txs,\n        tya,\n        // undocumented operations\n        dop,\n        top,\n        alr,\n        axs,\n        dcp,\n        lax,\n        arr,\n        slo,\n        aax,\n        lar,\n        isc,\n        aac,\n        atx,\n        rra,\n        rla,\n        invalid\n    }\n\n    export const enum AddressingMode {\n        implied,\n        immediate,\n        zeroPage,\n        absolute,\n        indirect,\n        relative,\n        zeroPageX,\n        absoluteX,\n        indexedIndirectX,\n        zeroPageY,\n        absoluteY,\n        indirectIndexedY,\n        invalid\n    }\n\n    export const opcodes = new Array<Instruction>(256);\n}\n\nexport { Instruction as default };\n\n// Opcodes init\n\nnamespace Instruction {\n    export namespace __init {\n        for (let i = 0; i < 256; i++) {\n            opcodes[i] = new Instruction(Operation.invalid, AddressingMode.invalid);\n        }\n\n        let operation: Operation, addressingMode: AddressingMode, opcode: number;\n\n        for (let i = 0; i < 8; i++) {\n            switch (i) {\n                case 0:\n                    operation = Operation.ora;\n                    break;\n                case 1:\n                    operation = Operation.and;\n                    break;\n                case 2:\n                    operation = Operation.eor;\n                    break;\n                case 3:\n                    operation = Operation.adc;\n                    break;\n                case 4:\n                    operation = Operation.sta;\n                    break;\n                case 5:\n                    operation = Operation.lda;\n                    break;\n                case 6:\n                    operation = Operation.cmp;\n                    break;\n                case 7:\n                    operation = Operation.sbc;\n                    break;\n            }\n            for (let j = 0; j < 8; j++) {\n                switch (j) {\n                    case 0:\n                        addressingMode = AddressingMode.indexedIndirectX;\n                        break;\n                    case 1:\n                        addressingMode = AddressingMode.zeroPage;\n                        break;\n                    case 2:\n                        addressingMode = AddressingMode.immediate;\n                        break;\n                    case 3:\n                        addressingMode = AddressingMode.absolute;\n                        break;\n                    case 4:\n                        addressingMode = AddressingMode.indirectIndexedY;\n                        break;\n                    case 5:\n                        addressingMode = AddressingMode.zeroPageX;\n                        break;\n                    case 6:\n                        addressingMode = AddressingMode.absoluteY;\n                        break;\n                    case 7:\n                        addressingMode = AddressingMode.absoluteX;\n                        break;\n                }\n\n                if (operation === Operation.sta && addressingMode === AddressingMode.immediate) {\n                    addressingMode = AddressingMode.invalid;\n                }\n\n                if (operation !== Operation.invalid && addressingMode !== AddressingMode.invalid) {\n                    opcode = (i << 5) | (j << 2) | 1;\n                    opcodes[opcode] = new Instruction(operation, addressingMode);\n                }\n            }\n        }\n\n        function set(\n            _opcode: number,\n            _operation: Operation,\n            _addressingMode: AddressingMode,\n            _effectiveAdressingMode?: AddressingMode\n        ): void {\n            if (opcodes[_opcode].operation !== Operation.invalid) {\n                throw new Error('entry for opcode ' + _opcode + ' already exists');\n            }\n\n            opcodes[_opcode] = new Instruction(_operation, _addressingMode, _effectiveAdressingMode);\n        }\n\n        set(0x06, Operation.asl, AddressingMode.zeroPage);\n        set(0x0a, Operation.asl, AddressingMode.implied);\n        set(0x0e, Operation.asl, AddressingMode.absolute);\n        set(0x16, Operation.asl, AddressingMode.zeroPageX);\n        set(0x1e, Operation.asl, AddressingMode.absoluteX);\n\n        set(0x26, Operation.rol, AddressingMode.zeroPage);\n        set(0x2a, Operation.rol, AddressingMode.implied);\n        set(0x2e, Operation.rol, AddressingMode.absolute);\n        set(0x36, Operation.rol, AddressingMode.zeroPageX);\n        set(0x3e, Operation.rol, AddressingMode.absoluteX);\n\n        set(0x46, Operation.lsr, AddressingMode.zeroPage);\n        set(0x4a, Operation.lsr, AddressingMode.implied);\n        set(0x4e, Operation.lsr, AddressingMode.absolute);\n        set(0x56, Operation.lsr, AddressingMode.zeroPageX);\n        set(0x5e, Operation.lsr, AddressingMode.absoluteX);\n\n        set(0x66, Operation.ror, AddressingMode.zeroPage);\n        set(0x6a, Operation.ror, AddressingMode.implied);\n        set(0x6e, Operation.ror, AddressingMode.absolute);\n        set(0x76, Operation.ror, AddressingMode.zeroPageX);\n        set(0x7e, Operation.ror, AddressingMode.absoluteX);\n\n        set(0x86, Operation.stx, AddressingMode.zeroPage);\n        set(0x8e, Operation.stx, AddressingMode.absolute);\n        set(0x96, Operation.stx, AddressingMode.zeroPageY);\n\n        set(0xa2, Operation.ldx, AddressingMode.immediate);\n        set(0xa6, Operation.ldx, AddressingMode.zeroPage);\n        set(0xae, Operation.ldx, AddressingMode.absolute);\n        set(0xb6, Operation.ldx, AddressingMode.zeroPageY);\n        set(0xbe, Operation.ldx, AddressingMode.absoluteY);\n\n        set(0xc6, Operation.dec, AddressingMode.zeroPage);\n        set(0xce, Operation.dec, AddressingMode.absolute);\n        set(0xd6, Operation.dec, AddressingMode.zeroPageX);\n        set(0xde, Operation.dec, AddressingMode.absoluteX);\n\n        set(0xe6, Operation.inc, AddressingMode.zeroPage);\n        set(0xee, Operation.inc, AddressingMode.absolute);\n        set(0xf6, Operation.inc, AddressingMode.zeroPageX);\n        set(0xfe, Operation.inc, AddressingMode.absoluteX);\n\n        set(0x24, Operation.bit, AddressingMode.zeroPage);\n        set(0x2c, Operation.bit, AddressingMode.absolute);\n\n        set(0x4c, Operation.jmp, AddressingMode.absolute);\n        set(0x6c, Operation.jmp, AddressingMode.indirect);\n\n        set(0x84, Operation.sty, AddressingMode.zeroPage);\n        set(0x8c, Operation.sty, AddressingMode.absolute);\n        set(0x94, Operation.sty, AddressingMode.zeroPageX);\n\n        set(0xa0, Operation.ldy, AddressingMode.immediate);\n        set(0xa4, Operation.ldy, AddressingMode.zeroPage);\n        set(0xac, Operation.ldy, AddressingMode.absolute);\n        set(0xb4, Operation.ldy, AddressingMode.zeroPageX);\n        set(0xbc, Operation.ldy, AddressingMode.absoluteX);\n\n        set(0xc0, Operation.cpy, AddressingMode.immediate);\n        set(0xc4, Operation.cpy, AddressingMode.zeroPage);\n        set(0xcc, Operation.cpy, AddressingMode.absolute);\n\n        set(0xe0, Operation.cpx, AddressingMode.immediate);\n        set(0xe4, Operation.cpx, AddressingMode.zeroPage);\n        set(0xec, Operation.cpx, AddressingMode.absolute);\n\n        set(0x10, Operation.bpl, AddressingMode.relative);\n        set(0x30, Operation.bmi, AddressingMode.relative);\n        set(0x50, Operation.bvc, AddressingMode.relative);\n        set(0x70, Operation.bvs, AddressingMode.relative);\n        set(0x90, Operation.bcc, AddressingMode.relative);\n        set(0xb0, Operation.bcs, AddressingMode.relative);\n        set(0xd0, Operation.bne, AddressingMode.relative);\n        set(0xf0, Operation.beq, AddressingMode.relative);\n\n        set(0x00, Operation.brk, AddressingMode.implied);\n        set(0x20, Operation.jsr, AddressingMode.implied, AddressingMode.absolute);\n        set(0x40, Operation.rti, AddressingMode.implied);\n        set(0x60, Operation.rts, AddressingMode.implied);\n        set(0x08, Operation.php, AddressingMode.implied);\n        set(0x28, Operation.plp, AddressingMode.implied);\n        set(0x48, Operation.pha, AddressingMode.implied);\n        set(0x68, Operation.pla, AddressingMode.implied);\n        set(0x88, Operation.dey, AddressingMode.implied);\n        set(0xa8, Operation.tay, AddressingMode.implied);\n        set(0xc8, Operation.iny, AddressingMode.implied);\n        set(0xe8, Operation.inx, AddressingMode.implied);\n        set(0x18, Operation.clc, AddressingMode.implied);\n        set(0x38, Operation.sec, AddressingMode.implied);\n        set(0x58, Operation.cli, AddressingMode.implied);\n        set(0x78, Operation.sei, AddressingMode.implied);\n        set(0x98, Operation.tya, AddressingMode.implied);\n        set(0xb8, Operation.clv, AddressingMode.implied);\n        set(0xd8, Operation.cld, AddressingMode.implied);\n        set(0xf8, Operation.sed, AddressingMode.implied);\n        set(0x8a, Operation.txa, AddressingMode.implied);\n        set(0x9a, Operation.txs, AddressingMode.implied);\n        set(0xaa, Operation.tax, AddressingMode.implied);\n        set(0xba, Operation.tsx, AddressingMode.implied);\n        set(0xca, Operation.dex, AddressingMode.implied);\n        set(0xea, Operation.nop, AddressingMode.implied);\n\n        // instructions for undocumented opcodes\n        set(0x1a, Operation.nop, AddressingMode.implied);\n        set(0x3a, Operation.nop, AddressingMode.implied);\n        set(0x5a, Operation.nop, AddressingMode.implied);\n        set(0x7a, Operation.nop, AddressingMode.implied);\n        set(0xda, Operation.nop, AddressingMode.implied);\n        set(0xfa, Operation.nop, AddressingMode.implied);\n\n        set(0x04, Operation.dop, AddressingMode.zeroPage);\n        set(0x14, Operation.dop, AddressingMode.zeroPageX);\n        set(0x34, Operation.dop, AddressingMode.zeroPageX);\n        set(0x44, Operation.dop, AddressingMode.zeroPage);\n        set(0x54, Operation.dop, AddressingMode.zeroPageX);\n        set(0x64, Operation.dop, AddressingMode.zeroPage);\n        set(0x74, Operation.dop, AddressingMode.zeroPageX);\n        set(0x80, Operation.dop, AddressingMode.immediate);\n        set(0x82, Operation.dop, AddressingMode.immediate);\n        set(0x89, Operation.dop, AddressingMode.immediate);\n        set(0xc2, Operation.dop, AddressingMode.immediate);\n        set(0xd4, Operation.dop, AddressingMode.zeroPageX);\n        set(0xe2, Operation.dop, AddressingMode.immediate);\n        set(0xf4, Operation.dop, AddressingMode.zeroPageX);\n\n        set(0x0c, Operation.top, AddressingMode.absolute);\n        set(0x1c, Operation.top, AddressingMode.absoluteX);\n        set(0x3c, Operation.top, AddressingMode.absoluteX);\n        set(0x5c, Operation.top, AddressingMode.absoluteX);\n        set(0x7c, Operation.top, AddressingMode.absoluteX);\n        set(0xdc, Operation.top, AddressingMode.absoluteX);\n        set(0xfc, Operation.top, AddressingMode.absoluteX);\n\n        set(0xeb, Operation.sbc, AddressingMode.immediate);\n\n        set(0x4b, Operation.alr, AddressingMode.immediate);\n\n        set(0xcb, Operation.axs, AddressingMode.immediate);\n\n        set(0xc7, Operation.dcp, AddressingMode.zeroPage);\n        set(0xd7, Operation.dcp, AddressingMode.zeroPageX);\n        set(0xcf, Operation.dcp, AddressingMode.absolute);\n        set(0xdf, Operation.dcp, AddressingMode.absoluteX);\n        set(0xdb, Operation.dcp, AddressingMode.absoluteY);\n        set(0xc3, Operation.dcp, AddressingMode.indexedIndirectX);\n        set(0xd3, Operation.dcp, AddressingMode.indirectIndexedY);\n\n        set(0xa7, Operation.lax, AddressingMode.zeroPage);\n        set(0xb7, Operation.lax, AddressingMode.zeroPageY);\n        set(0xaf, Operation.lax, AddressingMode.absolute);\n        set(0xbf, Operation.lax, AddressingMode.absoluteY);\n        set(0xa3, Operation.lax, AddressingMode.indexedIndirectX);\n        set(0xb3, Operation.lax, AddressingMode.indirectIndexedY);\n\n        set(0x6b, Operation.arr, AddressingMode.immediate);\n\n        set(0x07, Operation.slo, AddressingMode.zeroPage);\n        set(0x17, Operation.slo, AddressingMode.zeroPageX);\n        set(0x0f, Operation.slo, AddressingMode.absolute);\n        set(0x1f, Operation.slo, AddressingMode.absoluteX);\n        set(0x1b, Operation.slo, AddressingMode.absoluteY);\n        set(0x03, Operation.slo, AddressingMode.indexedIndirectX);\n        set(0x13, Operation.slo, AddressingMode.indirectIndexedY);\n\n        set(0x87, Operation.aax, AddressingMode.zeroPage);\n        set(0x97, Operation.aax, AddressingMode.zeroPageY);\n        set(0x83, Operation.aax, AddressingMode.indexedIndirectX);\n        set(0x8f, Operation.aax, AddressingMode.absolute);\n\n        set(0xbb, Operation.lar, AddressingMode.absoluteY);\n\n        set(0xe7, Operation.isc, AddressingMode.zeroPage);\n        set(0xf7, Operation.isc, AddressingMode.zeroPageX);\n        set(0xef, Operation.isc, AddressingMode.absolute);\n        set(0xff, Operation.isc, AddressingMode.absoluteX);\n        set(0xfb, Operation.isc, AddressingMode.absoluteY);\n        set(0xe3, Operation.isc, AddressingMode.indexedIndirectX);\n        set(0xf3, Operation.isc, AddressingMode.indirectIndexedY);\n\n        set(0x0b, Operation.aac, AddressingMode.immediate);\n        set(0x2b, Operation.aac, AddressingMode.immediate);\n\n        set(0xab, Operation.atx, AddressingMode.immediate);\n\n        set(0x67, Operation.rra, AddressingMode.zeroPage);\n        set(0x77, Operation.rra, AddressingMode.zeroPageX);\n        set(0x6f, Operation.rra, AddressingMode.absolute);\n        set(0x7f, Operation.rra, AddressingMode.absoluteX);\n        set(0x7b, Operation.rra, AddressingMode.absoluteY);\n        set(0x63, Operation.rra, AddressingMode.indexedIndirectX);\n        set(0x73, Operation.rra, AddressingMode.indirectIndexedY);\n\n        set(0x27, Operation.rla, AddressingMode.zeroPage);\n        set(0x37, Operation.rla, AddressingMode.zeroPageX);\n        set(0x2f, Operation.rla, AddressingMode.absolute);\n        set(0x3f, Operation.rla, AddressingMode.absoluteX);\n        set(0x3b, Operation.rla, AddressingMode.absoluteY);\n        set(0x23, Operation.rla, AddressingMode.indexedIndirectX);\n        set(0x33, Operation.rla, AddressingMode.indirectIndexedY);\n    }\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from './CpuInterface';\nimport StateMachineInterface from './statemachine/StateMachineInterface';\nimport BusInterface from '../bus/BusInterface';\nimport RngInterface from '../../tools/rng/GeneratorInterface';\nimport { boot, irq, nmi } from './statemachine/vector';\nimport Compiler from './statemachine/Compiler';\n\nclass StateMachineCpu implements CpuInterface {\n    constructor(private _bus: BusInterface, private _rng?: RngInterface) {\n        this._opBoot = boot(this.state);\n        this._opIrq = irq(this.state);\n        this._opNmi = nmi(this.state);\n\n        const compiler = new Compiler(this.state);\n        for (let op = 0; op < 256; op++) {\n            this._operations[op] = compiler.compile(op);\n        }\n\n        this.reset();\n    }\n\n    reset(): this {\n        this.state.a = this._rng ? this._rng.int(0xff) : 0;\n        this.state.x = this._rng ? this._rng.int(0xff) : 0;\n        this.state.y = this._rng ? this._rng.int(0xff) : 0;\n        this.state.s = 0xfd;\n        this.state.p = this._rng ? this._rng.int(0xffff) : 0;\n        this.state.flags =\n            (this._rng ? this._rng.int(0xff) : 0) | CpuInterface.Flags.i | CpuInterface.Flags.e | CpuInterface.Flags.b;\n        this.state.irq = false;\n        this.state.nmi = false;\n\n        this.executionState = CpuInterface.ExecutionState.boot;\n        this._interruptPending = false;\n        this._nmiPending = false;\n        this._halt = false;\n        this._lastResult = this._opBoot.reset(undefined);\n        this._lastInstructionPointer = 0;\n\n        return this;\n    }\n\n    setInterrupt(i: boolean): this {\n        this._interruptPending = i;\n\n        return this;\n    }\n\n    isInterrupt(): boolean {\n        return this._interruptPending;\n    }\n\n    nmi(): this {\n        this._nmiPending = true;\n\n        return this;\n    }\n\n    halt(): this {\n        this._halt = true;\n\n        return this;\n    }\n\n    resume(): this {\n        this._halt = false;\n\n        return this;\n    }\n\n    isHalt(): boolean {\n        return this._halt;\n    }\n\n    setInvalidInstructionCallback(callback: CpuInterface.InvalidInstructionCallbackInterface): this {\n        this._invalidInstructionCallback = callback;\n\n        return this;\n    }\n\n    getInvalidInstructionCallback(): CpuInterface.InvalidInstructionCallbackInterface {\n        return this._invalidInstructionCallback;\n    }\n\n    getLastInstructionPointer(): number {\n        return this._lastInstructionPointer;\n    }\n\n    cycle(): this {\n        if (this._halt && (!this._lastResult || this._lastResult.cycleType === StateMachineInterface.CycleType.read)) {\n            return this;\n        }\n\n        if (this.executionState === CpuInterface.ExecutionState.fetch) {\n            this._fetch();\n            return this;\n        }\n\n        let value: number;\n\n        switch (this._lastResult.cycleType) {\n            case StateMachineInterface.CycleType.read:\n                value = this._bus.read(this._lastResult.address);\n                break;\n\n            case StateMachineInterface.CycleType.write:\n                value = this._lastResult.value;\n                this._bus.write(this._lastResult.address, value);\n                break;\n\n            default:\n                throw new Error('invalid cycle type');\n        }\n\n        if (this._lastResult.pollInterrupts) {\n            this._pollInterrupts();\n\n            this._lastResult.pollInterrupts = false;\n            this._pollInterruptsAfterLastInstruction = false;\n        }\n\n        this._lastResult = this._lastResult.nextStep(value);\n        if (this._lastResult === null) {\n            this.executionState = CpuInterface.ExecutionState.fetch;\n        }\n\n        return this;\n    }\n\n    private _fetch(): void {\n        if (this._pollInterruptsAfterLastInstruction) {\n            this._pollInterrupts();\n        }\n\n        this._lastInstructionPointer = this.state.p;\n\n        let operation: StateMachineInterface;\n        const opcode = this._bus.read(this.state.p);\n\n        if (this.state.nmi) {\n            operation = this._opNmi;\n            this._pollInterruptsAfterLastInstruction = false;\n        } else if (this.state.irq) {\n            operation = this._opIrq;\n            this._pollInterruptsAfterLastInstruction = false;\n        } else {\n            operation = this._operations[opcode];\n            this.state.p = (this.state.p + 1) & 0xffff;\n            this._pollInterruptsAfterLastInstruction = true;\n        }\n\n        if (!operation) {\n            if (this._invalidInstructionCallback) {\n                this._invalidInstructionCallback(this);\n            }\n\n            return;\n        }\n\n        this.executionState = CpuInterface.ExecutionState.execute;\n\n        this._lastResult = operation.reset(undefined);\n    }\n\n    private _pollInterrupts(): void {\n        this.state.irq = false;\n\n        if (this._nmiPending) {\n            this.state.nmi = true;\n            this._nmiPending = false;\n\n            return;\n        }\n\n        if (this._interruptPending && !this.state.nmi && !(this.state.flags & CpuInterface.Flags.i)) {\n            this.state.irq = true;\n        }\n    }\n\n    executionState = CpuInterface.ExecutionState.boot;\n    state = new CpuInterface.State();\n\n    private _invalidInstructionCallback: CpuInterface.InvalidInstructionCallbackInterface = null;\n\n    private _lastResult: StateMachineInterface.Result;\n    private _interruptPending = false;\n    private _nmiPending = false;\n    private _halt = false;\n    private _pollInterruptsAfterLastInstruction = false;\n\n    private _lastInstructionPointer = 0;\n\n    private _opBoot: StateMachineInterface;\n    private _opNmi: StateMachineInterface;\n    private _opIrq: StateMachineInterface;\n    private _operations = new Array<StateMachineInterface>(255);\n}\n\nexport default StateMachineCpu;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from './CpuInterface';\nimport BusInterface from '../bus/BusInterface';\nimport Instruction from './Instruction';\n\nfunction restoreFlagsFromStack(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.flags = (bus.read(0x0100 + state.s) | CpuInterface.Flags.e) & ~CpuInterface.Flags.b;\n}\n\nfunction setFlagsNZ(state: CpuInterface.State, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nexport function opAdc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0f) + (state.a & 0x0f) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = d0 % 10 | (d1 % 10 << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0); // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nexport function opAnd(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAslAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opAslMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old << 1) & 0xff;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opBit(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        (operand & state.a ? 0 : CpuInterface.Flags.z);\n}\n\nexport function opBrk(state: CpuInterface.State, bus: BusInterface): void {\n    const nextOpAddr = (state.p + 1) & 0xffff;\n    let vector = 0xfffe;\n\n    if (state.nmi) {\n        vector = 0xfffa;\n        state.nmi = false;\n    }\n\n    state.nmi = state.irq = false;\n\n    bus.write(state.s + 0x0100, (nextOpAddr >>> 8) & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(state.s + 0x0100, nextOpAddr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    bus.write(state.s + 0x0100, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.flags |= CpuInterface.Flags.i;\n\n    state.p = bus.readWord(vector);\n}\n\nexport function opClc(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.c;\n}\n\nexport function opCld(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.d;\n}\n\nexport function opCli(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.i;\n}\n\nexport function opClv(state: CpuInterface.State): void {\n    state.flags &= ~CpuInterface.Flags.v;\n}\n\nexport function opCmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.a + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opCpx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.x + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opCpy(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const diff = state.y + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opDec(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opDex(state: CpuInterface.State): void {\n    state.x = (state.x + 0xff) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opEor(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = state.a ^ operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opDey(state: CpuInterface.State): void {\n    state.y = (state.y + 0xff) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nexport function opInc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opInx(state: CpuInterface.State): void {\n    state.x = (state.x + 0x01) & 0xff;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opIny(state: CpuInterface.State): void {\n    state.y = (state.y + 0x01) & 0xff;\n    setFlagsNZ(state, state.y);\n}\n\nexport function opJmp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.p = operand;\n}\n\nexport function opJsr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const returnPtr = (state.p + 1) & 0xffff,\n        addrLo = bus.read(state.p);\n\n    bus.read(0x0100 + state.s);\n    bus.write(0x0100 + state.s, returnPtr >>> 8);\n    state.s = (state.s + 0xff) & 0xff;\n    bus.write(0x0100 + state.s, returnPtr & 0xff);\n    state.s = (state.s + 0xff) & 0xff;\n\n    state.p = addrLo | (bus.read((state.p + 1) & 0xffff) << 8);\n}\n\nexport function opLda(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.a = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.a);\n}\n\nexport function opLdx(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.x = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.x);\n}\n\nexport function opLdy(\n    state: CpuInterface.State,\n    bus: BusInterface,\n    operand: number,\n    addressingMode: Instruction.AddressingMode\n): void {\n    state.y = addressingMode === Instruction.AddressingMode.immediate ? operand : bus.read(operand);\n    setFlagsNZ(state, state.y);\n}\n\nexport function opLsrAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opLsrMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = old >>> 1;\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opNop(): void {}\n\nexport function opOra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a |= operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opPhp(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.flags | CpuInterface.Flags.b);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nexport function opPlp(state: CpuInterface.State, bus: BusInterface): void {\n    restoreFlagsFromStack(state, bus);\n}\n\nexport function opPha(state: CpuInterface.State, bus: BusInterface): void {\n    bus.write(0x0100 + state.s, state.a);\n    state.s = (state.s + 0xff) & 0xff;\n}\n\nexport function opPla(state: CpuInterface.State, bus: BusInterface): void {\n    state.s = (state.s + 0x01) & 0xff;\n    state.a = bus.read(0x0100 + state.s);\n    setFlagsNZ(state, state.a);\n}\n\nexport function opRolAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opRolMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function opRorAcc(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opRorMem(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (value & 0x80) |\n        (value ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function opRti(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    restoreFlagsFromStack(state, bus);\n\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr |= bus.read(0x0100 + state.s) << 8;\n\n    state.p = returnPtr;\n}\n\nexport function opRts(state: CpuInterface.State, bus: BusInterface): void {\n    let returnPtr: number;\n\n    bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr = bus.read(0x0100 + state.s);\n    state.s = (state.s + 1) & 0xff;\n    returnPtr += bus.read(0x0100 + state.s) << 8;\n\n    state.p = (returnPtr + 1) & 0xffff;\n}\n\nexport function opSbc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (state.a & 0x0f) - (operand & 0x0f) - (~state.flags & CpuInterface.Flags.c),\n            d1 = (state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0);\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c); // carry / borrow\n    } else {\n        operand = ~operand & 0xff;\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry / borrow\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n}\n\nexport function opSec(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.c;\n}\n\nexport function opSed(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.d;\n}\n\nexport function opSei(state: CpuInterface.State): void {\n    state.flags |= CpuInterface.Flags.i;\n}\n\nexport function opSta(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.a);\n}\n\nexport function opStx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.x);\n}\n\nexport function opSty(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    bus.write(operand, state.y);\n}\n\nexport function opTax(state: CpuInterface.State): void {\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTay(state: CpuInterface.State): void {\n    state.y = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTsx(state: CpuInterface.State): void {\n    state.x = state.s;\n    setFlagsNZ(state, state.x);\n}\n\nexport function opTxa(state: CpuInterface.State): void {\n    state.a = state.x;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opTxs(state: CpuInterface.State): void {\n    state.s = state.x;\n}\n\nexport function opTya(state: CpuInterface.State): void {\n    state.a = state.y;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAlr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n}\n\nexport function opAxs(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (state.a & state.x) + (~operand & 0xff) + 1;\n\n    state.x = value & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        (state.x & 0xff ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n}\n\nexport function opDcp(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 0xff) & 0xff;\n    bus.write(operand, value);\n\n    const diff = state.a + (~value & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function opLax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = operand;\n    state.x = operand;\n    setFlagsNZ(state, operand);\n}\n\nexport function opArr(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a = ((state.a & operand) >>> 1) | (state.flags & CpuInterface.Flags.c ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nexport function opSlo(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    let value = bus.read(operand);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (value >>> 7);\n    value = (value << 1) & 0xff;\n\n    bus.write(operand, value);\n\n    state.a = state.a | value;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opAax(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = state.x & state.a;\n    bus.write(operand, value);\n    setFlagsNZ(state, value);\n}\n\nexport function opLar(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.s = state.a = state.x = state.s & operand;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opIsc(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const value = (bus.read(operand) + 1) & 0xff;\n    bus.write(operand, value);\n\n    opSbc(state, bus, value);\n}\n\nexport function opAac(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    setFlagsNZ(state, state.a);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | ((state.a & 0x80) >>> 7);\n}\n\nexport function opAtx(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    state.a &= operand;\n    state.x = state.a;\n    setFlagsNZ(state, state.a);\n}\n\nexport function opRra(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = (old >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old & CpuInterface.Flags.c);\n\n    opAdc(state, bus, value);\n}\n\nexport function opRla(state: CpuInterface.State, bus: BusInterface, operand: number): void {\n    const old = bus.read(operand),\n        value = ((old << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n    bus.write(operand, value);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (old >>> 7);\n\n    opAnd(state, bus, value);\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../CpuInterface';\nimport StateMachineInterface from './StateMachineInterface';\nimport Instruction from '../Instruction';\nimport {\n    immediate,\n    dereference,\n    zeroPage,\n    absolute,\n    zeroPageX,\n    zeroPageY,\n    absoluteX,\n    absoluteY,\n    indexedIndirectX,\n    indirectIndexedY\n} from './addressing';\nimport { nullaryOneCycle, readModifyWrite, jsr, push, pull, rti, rts, write, branch } from './instruction';\nimport * as ops from './ops';\nimport { indirect } from './addressing/indirect';\nimport NextStep from './addressing/NextStep';\nimport { brk } from './vector';\n\nclass Compiler {\n    constructor(private readonly _state: CpuInterface.State) {}\n\n    compile(op: number): StateMachineInterface | null {\n        const instruction = Instruction.opcodes[op];\n\n        switch (instruction.operation) {\n            case Instruction.Operation.adc:\n                return this._createAddressing(instruction.addressingMode, ops.adc, {\n                    deref: true\n                });\n\n            case Instruction.Operation.and:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.a & operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.asl:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.aslImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.aslRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.bit:\n                return this._createAddressing(instruction.addressingMode, ops.bit, {\n                    deref: true\n                });\n\n            case Instruction.Operation.brk:\n                return brk(this._state);\n\n            case Instruction.Operation.cmp:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.a), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.cpx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.x), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.cpy:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => (ops.cmp(o, s, state => state.y), null),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.dec:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    readModifyWrite(this._state, (s, o) => ops.genRmw(s, o, x => (x - 1) & 0xff)).reset,\n                    {\n                        writeOp: true\n                    }\n                );\n\n            case Instruction.Operation.dex:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = (state.x - 1) & 0xff)));\n\n            case Instruction.Operation.dey:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = (state.y - 1) & 0xff)));\n\n            case Instruction.Operation.inc:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    readModifyWrite(this._state, (s, o) => ops.genRmw(s, o, x => (x + 1) & 0xff)).reset,\n                    {\n                        writeOp: true\n                    }\n                );\n\n            case Instruction.Operation.inx:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = (state.x + 1) & 0xff)));\n\n            case Instruction.Operation.iny:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = (state.y + 1) & 0xff)));\n\n            case Instruction.Operation.eor:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.a ^ operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.jmp:\n                return this._createAddressing(instruction.addressingMode, (o, s) => ((s.p = o), null));\n\n            case Instruction.Operation.jsr:\n                return jsr(this._state);\n\n            case Instruction.Operation.lda:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.ldx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.x = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.ldy:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.y = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.lsr:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.lsrImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.lsrRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.nop:\n                return nullaryOneCycle(this._state, () => undefined);\n\n            case Instruction.Operation.ora:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a |= operand)),\n                    { deref: true }\n                );\n\n            case Instruction.Operation.pha:\n                return push(this._state, s => s.a);\n\n            case Instruction.Operation.php:\n                return push(this._state, s => s.flags | CpuInterface.Flags.b);\n\n            case Instruction.Operation.pla:\n                return pull(this._state, (s, o) => ops.genNullary(s, state => (state.a = o)));\n\n            case Instruction.Operation.plp:\n                return pull(this._state, (s, o) => (s.flags = (o | CpuInterface.Flags.e) & ~CpuInterface.Flags.b));\n\n            case Instruction.Operation.rol:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.rolImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.rolRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.ror:\n                return instruction.addressingMode === Instruction.AddressingMode.implied\n                    ? nullaryOneCycle(this._state, ops.rorImmediate)\n                    : this._createAddressing(\n                          instruction.addressingMode,\n                          readModifyWrite(this._state, ops.rorRmw).reset,\n                          { writeOp: true }\n                      );\n\n            case Instruction.Operation.rti:\n                return rti(this._state);\n\n            case Instruction.Operation.rts:\n                return rts(this._state);\n\n            case Instruction.Operation.sbc:\n                return this._createAddressing(instruction.addressingMode, ops.sbc, {\n                    deref: true\n                });\n\n            case Instruction.Operation.stx:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.x).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.sty:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.y).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.tax:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = state.a)));\n\n            case Instruction.Operation.tay:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.y = state.a)));\n\n            case Instruction.Operation.tsx:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.x = state.s)));\n\n            case Instruction.Operation.txa:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.a = state.x)));\n\n            case Instruction.Operation.txs:\n                return nullaryOneCycle(this._state, s => (s.s = s.x));\n\n            case Instruction.Operation.tya:\n                return nullaryOneCycle(this._state, s => ops.genNullary(s, state => (state.a = state.y)));\n\n            // Bramches\n\n            case Instruction.Operation.bcc:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.c) === 0);\n\n            case Instruction.Operation.bcs:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.c) > 0);\n\n            case Instruction.Operation.bne:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.z) === 0);\n\n            case Instruction.Operation.beq:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.z) > 0);\n\n            case Instruction.Operation.bpl:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.n) === 0);\n\n            case Instruction.Operation.bmi:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.n) > 0);\n\n            case Instruction.Operation.bvc:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.v) === 0);\n\n            case Instruction.Operation.bvs:\n                return branch(this._state, flags => (flags & CpuInterface.Flags.v) > 0);\n\n            // Flags\n\n            case Instruction.Operation.sec:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.c));\n\n            case Instruction.Operation.sed:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.d));\n\n            case Instruction.Operation.sei:\n                return nullaryOneCycle(this._state, s => (s.flags |= CpuInterface.Flags.i));\n\n            case Instruction.Operation.sta:\n                return this._createAddressing(instruction.addressingMode, write(this._state, s => s.a).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.clc:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.c));\n\n            case Instruction.Operation.cld:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.d));\n\n            case Instruction.Operation.cli:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.i));\n\n            case Instruction.Operation.clv:\n                return nullaryOneCycle(this._state, s => (s.flags &= ~CpuInterface.Flags.v));\n\n            // Undocumented opcodes\n\n            case Instruction.Operation.dop:\n            case Instruction.Operation.top:\n                return this._createAddressing(instruction.addressingMode, () => null, { deref: true });\n\n            case Instruction.Operation.aac:\n                return this._createAddressing(instruction.addressingMode, ops.aac);\n\n            case Instruction.Operation.aax:\n                return this._createAddressing(instruction.addressingMode, write(this._state, ops.aax).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.alr:\n                return this._createAddressing(instruction.addressingMode, ops.alr, {\n                    deref: true\n                });\n\n            case Instruction.Operation.arr:\n                return this._createAddressing(instruction.addressingMode, (o, s) => (ops.arr(o, s), null), {\n                    deref: true\n                });\n\n            case Instruction.Operation.axs:\n                return this._createAddressing(instruction.addressingMode, ops.axs, {\n                    deref: true\n                });\n\n            case Instruction.Operation.atx:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.x = state.a = state.a & operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.dcp:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.dcp).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.isc:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.isc).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.lax:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.a = state.x = operand)),\n                    {\n                        deref: true\n                    }\n                );\n\n            case Instruction.Operation.lar:\n                return this._createAddressing(\n                    instruction.addressingMode,\n                    (o, s) => ops.genUnary(o, s, (operand, state) => (state.s = state.x = state.a = state.s & operand)),\n                    { deref: true }\n                );\n\n            case Instruction.Operation.rla:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.rla).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.rra:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.rra).reset, {\n                    writeOp: true\n                });\n\n            case Instruction.Operation.slo:\n                return this._createAddressing(instruction.addressingMode, readModifyWrite(this._state, ops.slo).reset, {\n                    writeOp: true\n                });\n\n            default:\n                return null;\n        }\n    }\n\n    private _createAddressing(\n        addressingMode: Instruction.AddressingMode,\n        next: NextStep,\n        { deref = false, writeOp = false } = {}\n    ): StateMachineInterface {\n        if (deref && addressingMode !== Instruction.AddressingMode.immediate) {\n            next = dereference(this._state, next).reset;\n        }\n\n        switch (addressingMode) {\n            case Instruction.AddressingMode.immediate:\n                return immediate(this._state, next);\n\n            case Instruction.AddressingMode.zeroPage:\n                return zeroPage(this._state, next);\n\n            case Instruction.AddressingMode.absolute:\n                return absolute(this._state, next);\n\n            case Instruction.AddressingMode.zeroPageX:\n                return zeroPageX(this._state, next);\n\n            case Instruction.AddressingMode.zeroPageY:\n                return zeroPageY(this._state, next);\n\n            case Instruction.AddressingMode.absoluteX:\n                return absoluteX(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.absoluteY:\n                return absoluteY(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.indexedIndirectX:\n                return indexedIndirectX(this._state, next);\n\n            case Instruction.AddressingMode.indirectIndexedY:\n                return indirectIndexedY(this._state, next, writeOp);\n\n            case Instruction.AddressingMode.indirect:\n                return indirect(this._state, next);\n\n            default:\n                throw new Error(`invalid addressing mode ${addressingMode}`);\n        }\n    }\n}\n\nexport default Compiler;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from './StateMachineInterface';\n\nclass ResultImpl implements StateMachineInterface.Result {\n    constructor() {}\n\n    read(nextStep: StateMachineInterface.Step, address: number): this {\n        this.cycleType = StateMachineInterface.CycleType.read;\n        this.address = address;\n        this.nextStep = nextStep;\n\n        return this;\n    }\n\n    write(nextStep: StateMachineInterface.Step, address: number, value: number): this {\n        this.cycleType = StateMachineInterface.CycleType.write;\n        this.address = address;\n        this.value = value;\n        this.nextStep = nextStep;\n\n        return this;\n    }\n\n    poll(poll: boolean): this {\n        this.pollInterrupts = poll;\n\n        return this;\n    }\n\n    cycleType = StateMachineInterface.CycleType.read;\n    address = 0;\n    value = 0;\n    pollInterrupts = false;\n    nextStep: StateMachineInterface.Step = null;\n}\n\nexport default ResultImpl;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Absolute implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchLo, this._state.p);\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const absolute = (state: CpuInterface.State, next: NextStep) => new Absolute(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass AbsoluteIndexed implements StateMachineInterface {\n    private constructor(\n        state: CpuInterface.State,\n        indexExtractor: AbsoluteIndexed.IndexExtractor,\n        next: NextStep = () => null,\n        writeOp = false\n    ) {\n        this._state = state;\n        this._indexExtractor = indexExtractor;\n        this._next = next;\n        this._writeOp = writeOp;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    static absoluteX(state: CpuInterface.State, next: NextStep, writeOp: boolean): AbsoluteIndexed {\n        return new AbsoluteIndexed(state, s => s.x, next, writeOp);\n    }\n\n    @Immutable\n    static absoluteY(state: CpuInterface.State, next: NextStep, writeOp: boolean): AbsoluteIndexed {\n        return new AbsoluteIndexed(state, s => s.y, next, writeOp);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchLo, this._state.p);\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        const index = this._indexExtractor(this._state);\n        this._carry = (this._operand & 0xff) + index > 0xff;\n        this._operand = (this._operand & 0xff00) | ((this._operand + index) & 0xff);\n\n        return this._carry || this._writeOp\n            ? this._result.read(this._dereferenceAndCarry, this._operand)\n            : this._next(this._operand, this._state);\n    };\n\n    @Immutable\n    private _dereferenceAndCarry = (value: number): StateMachineInterface.Result | null => {\n        if (this._carry) {\n            this._operand = (this._operand + 0x0100) & 0xffff;\n        }\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _carry = false;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _indexExtractor: AbsoluteIndexed.IndexExtractor;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _writeOp: boolean;\n}\n\nnamespace AbsoluteIndexed {\n    export interface IndexExtractor {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const absoluteX = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    AbsoluteIndexed.absoluteX(state, next, writeOp);\n\nexport const absoluteY = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    AbsoluteIndexed.absoluteY(state, next, writeOp);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\nimport CpuInterface from '../../CpuInterface';\n\nclass Dereference implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._next = next;\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (operand: number): StateMachineInterface.Result => this._result.read(this._dereference, operand);\n\n    @Immutable\n    private _dereference = (value: number): StateMachineInterface.Result | null => this._next(value, this._state);\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const dereference = (state: CpuInterface.State, next: NextStep) => new Dereference(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Immediate implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchOperand, this._state.p);\n\n    @Immutable\n    private _fetchOperand = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const immediate = (state: CpuInterface.State, next: NextStep) => new Immediate(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport { absolute } from './absolute';\nexport { absoluteX, absoluteY } from './absoluteIndexed';\nexport { dereference } from './dereference';\nexport { immediate } from './immediate';\nexport { indexedIndirectX } from './indexedIndirectX';\nexport { indirectIndexedY } from './indirectIndexedY';\nexport { zeroPage } from './zeroPage';\nexport { zeroPageX, zeroPageY } from './zeroPageIndexed';\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass IndexedIndirectX implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._addIndex, this._address);\n    };\n\n    @Immutable\n    private _addIndex = (value: number): StateMachineInterface.Result => {\n        this._address = (this._address + this._state.x) & 0xff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._address = (this._address + 1) & 0xff;\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const indexedIndirectX = (state: CpuInterface.State, next: NextStep) => new IndexedIndirectX(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass Indirect implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddressLo, this._state.p);\n\n    @Immutable\n    private _fetchAddressLo = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchAddressHi, this._state.p);\n    };\n\n    @Immutable\n    private _fetchAddressHi = (value: number): StateMachineInterface.Result => {\n        this._address |= value << 8;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n\n        if ((this._address & 0xff) === 0xff) {\n            this._address &= 0xff00;\n        } else {\n            this._address = (this._address + 1) & 0xffff;\n        }\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const indirect = (state: CpuInterface.State, next: NextStep) => new Indirect(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass IndexedIndirectY implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null, writeOp: boolean) {\n        this._state = state;\n        this._next = next;\n        this._writeOp = writeOp;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._address = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._fetchLo, this._address);\n    };\n\n    @Immutable\n    private _fetchLo = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._address = (this._address + 1) & 0xff;\n\n        return this._result.read(this._fetchHi, this._address);\n    };\n\n    @Immutable\n    private _fetchHi = (value: number): StateMachineInterface.Result | null => {\n        this._operand |= value << 8;\n\n        this._carry = (this._operand & 0xff) + this._state.y > 0xff;\n        this._operand = (this._operand & 0xff00) | ((this._operand + this._state.y) & 0xff);\n\n        return this._carry || this._writeOp\n            ? this._result.read(this._dereferenceAndCarry, this._operand)\n            : this._next(this._operand, this._state);\n    };\n\n    @Immutable\n    private _dereferenceAndCarry = (value: number): StateMachineInterface.Result | null => {\n        if (this._carry) {\n            this._operand = (this._operand + 0x0100) & 0xffff;\n        }\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n    private _address = 0;\n    private _carry = false;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _writeOp: boolean;\n}\n\nexport const indirectIndexedY = (state: CpuInterface.State, next: NextStep, writeOp: boolean) =>\n    new IndexedIndirectY(state, next, writeOp);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass ZeroPage implements StateMachineInterface {\n    constructor(state: CpuInterface.State, next: NextStep = () => null) {\n        this._state = state;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n}\n\nexport const zeroPage = (state: CpuInterface.State, next: NextStep) => new ZeroPage(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport StateMachineInterface from '../StateMachineInterface';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport NextStep from './NextStep';\n\nclass ZeroPageIndexed implements StateMachineInterface {\n    private constructor(state: CpuInterface.State, indexExtractor: ZeroPageIndexed.IndexExtractor, next: NextStep) {\n        this._state = state;\n        this._indexExtractor = indexExtractor;\n        this._next = next;\n\n        freezeImmutables(this);\n    }\n\n    static zeroPageX(state: CpuInterface.State, next: NextStep = () => null): ZeroPageIndexed {\n        return new ZeroPageIndexed(state, s => s.x, next);\n    }\n\n    static zeroPageY(state: CpuInterface.State, next: NextStep = () => null): ZeroPageIndexed {\n        return new ZeroPageIndexed(state, s => s.y, next);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._fetchAddress, this._state.p);\n\n    @Immutable\n    private _fetchAddress = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._addIndex, this._operand);\n    };\n\n    @Immutable\n    private _addIndex = (value: number): StateMachineInterface.Result | null => {\n        this._operand = (this._operand + this._indexExtractor(this._state)) & 0xff;\n\n        return this._next(this._operand, this._state);\n    };\n\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _next: NextStep;\n    @Immutable private readonly _indexExtractor: ZeroPageIndexed.IndexExtractor;\n}\n\nnamespace ZeroPageIndexed {\n    export interface IndexExtractor {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const zeroPageX = (state: CpuInterface.State, next: NextStep) => ZeroPageIndexed.zeroPageX(state, next);\n\nexport const zeroPageY = (state: CpuInterface.State, next: NextStep) => ZeroPageIndexed.zeroPageY(state, next);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Branch implements StateMachineInterface {\n    constructor(state: CpuInterface.State, predicate: Branch.Predicate) {\n        this._state = state;\n        this._predicate = predicate;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (): StateMachineInterface.Result => this._result.read(this._fetchTarget, this._state.p).poll(true);\n\n    @Immutable\n    private _fetchTarget = (value: number): StateMachineInterface.Result | null => {\n        this._operand = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._predicate(this._state.flags) ? this._result.read(this._firstDummyRead, this._state.p) : null;\n    };\n\n    @Immutable\n    private _firstDummyRead = (value: number): StateMachineInterface.Result | null => {\n        this._target = (this._state.p + (this._operand & 0x80 ? this._operand - 256 : this._operand)) & 0xffff;\n\n        if ((this._target & 0xff00) === (this._state.p & 0xff00)) {\n            this._state.p = this._target;\n            return null;\n        }\n\n        return this._result.read(this._secondDummyRead, (this._state.p & 0xff00) | (this._target & 0x00ff)).poll(true);\n    };\n\n    @Immutable\n    private _secondDummyRead = (value: number): null => {\n        this._state.p = this._target;\n        return null;\n    };\n\n    private _target = 0;\n    private _operand = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _predicate: Branch.Predicate;\n}\n\nnamespace Branch {\n    export interface Predicate {\n        (flags: number): boolean;\n    }\n}\n\nexport const branch = (state: CpuInterface.State, predicate: Branch.Predicate) => new Branch(state, predicate);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport { branch } from './branch';\nexport { jsr } from './jsr';\nexport { readModifyWrite } from './readModifyWrite';\nexport { rts } from './rts';\nexport { nullaryOneCycle } from './nullaryOneCycle';\nexport { pull } from './pull';\nexport { push } from './push';\nexport { rti } from './rti';\nexport { write } from './write';\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Jsr implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    reset = (): StateMachineInterface.Result => this._result.read(this._fetchPcl, this._state.p);\n\n    @Immutable\n    private _fetchPcl = (value: number): StateMachineInterface.Result => {\n        this._addressLo = value;\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result =>\n        this._result.write(this._pushPch, 0x0100 + this._state.s, this._state.p >>> 8);\n\n    @Immutable\n    private _pushPch = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.write(this._pushPcl, 0x0100 + this._state.s, this._state.p & 0xff);\n    };\n\n    @Immutable\n    private _pushPcl = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.read(this._fetchPch, this._state.p);\n    };\n\n    @Immutable\n    private _fetchPch = (value: number): null => {\n        this._state.p = this._addressLo | (value << 8);\n\n        return null;\n    };\n\n    private _addressLo = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const jsr = (state: CpuInterface.State) => new Jsr(state);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass NullaryOneCycle implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: UnaryOneCycle.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = () => this._result.read(this._executeOperation, this._state.p).poll(true);\n\n    @Immutable\n    private _executeOperation = (): null => {\n        this._operation(this._state);\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: UnaryOneCycle.Operation;\n}\n\nnamespace UnaryOneCycle {\n    export interface Operation {\n        (s: CpuInterface.State): void;\n    }\n}\n\nexport const nullaryOneCycle = (state: CpuInterface.State, operation: UnaryOneCycle.Operation) =>\n    new NullaryOneCycle(state, operation);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\nimport CpuInterface from '../../CpuInterface';\n\nclass Pull implements StateMachineInterface {\n    constructor(state: CpuInterface.State, operation: Pull.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p).poll(true);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result =>\n        this._result.read(this._incrementS, 0x0100 + this._state.s);\n\n    @Immutable\n    private _incrementS = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._pull, 0x0100 + this._state.s);\n    };\n\n    @Immutable private _pull = (value: number): null => (this._operation(this._state, value), null);\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Pull.Operation;\n}\n\nnamespace Pull {\n    export interface Operation {\n        (state: CpuInterface.State, ooperand: number): void;\n    }\n}\n\nexport const pull = (state: CpuInterface.State, operation: Pull.Operation) => new Pull(state, operation);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\nimport CpuInterface from '../../CpuInterface';\nimport StateMachineInterface from '../StateMachineInterface';\nimport ResultImpl from '../ResultImpl';\n\nclass Push implements StateMachineInterface {\n    constructor(state: CpuInterface.State, operation: Push.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result =>\n        this._result.write(this._push, 0x0100 + this._state.s, this._operation(this._state));\n\n    @Immutable\n    private _push = (): null => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Push.Operation;\n}\n\nnamespace Push {\n    export interface Operation {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const push = (state: CpuInterface.State, operation: Push.Operation) => new Push(state, operation);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass ReadModifyWrite implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: ReadModifyWrite.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (address: number): StateMachineInterface.Result => {\n        this._address = address;\n\n        return this._result.read(this._read, address);\n    };\n\n    @Immutable\n    private _read = (value: number): StateMachineInterface.Result => {\n        this._operand = value;\n\n        return this._result.write(this._dummyWrite, this._address, this._operand);\n    };\n\n    @Immutable\n    private _dummyWrite = (value: number): StateMachineInterface.Result =>\n        this._result.write(this._write, this._address, this._operation(this._operand, this._state));\n\n    @Immutable private _write = (): null => null;\n\n    private _address: number;\n    private _operand: number;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: ReadModifyWrite.Operation;\n}\n\nnamespace ReadModifyWrite {\n    export interface Operation {\n        (o: number, s: CpuInterface.State): number;\n    }\n}\n\nexport const readModifyWrite = (state: CpuInterface.State, operation: ReadModifyWrite.Operation) =>\n    new ReadModifyWrite(state, operation);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Rti implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyOperandRead, this._state.p);\n\n    @Immutable\n    private _dummyOperandRead = (): StateMachineInterface.Result =>\n        this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popP, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popP = (value: number): StateMachineInterface.Result => {\n        this._state.flags = (value | CpuInterface.Flags.e) & ~CpuInterface.Flags.b;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPcl, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPcl = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff00) | value;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPch, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPch = (value: number): null => {\n        this._state.p = (this._state.p & 0xff) | (value << 8);\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const rti = (state: CpuInterface.State) => new Rti(state);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Rts implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyOperandRead, this._state.p);\n\n    @Immutable\n    private _dummyOperandRead = (): StateMachineInterface.Result =>\n        this._result.read(this._dummyStackRead, 0x0100 + this._state.s);\n\n    @Immutable\n    private _dummyStackRead = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPcl, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPcl = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff00) | value;\n        this._state.s = (this._state.s + 1) & 0xff;\n\n        return this._result.read(this._popPch, 0x0100 + this._state.s);\n    };\n\n    @Immutable\n    private _popPch = (value: number): StateMachineInterface.Result => {\n        this._state.p = (this._state.p & 0xff) | (value << 8);\n\n        return this._result.read(this._incrementP, this._state.p);\n    };\n\n    @Immutable\n    private _incrementP = (): null => {\n        this._state.p = (this._state.p + 1) & 0xffff;\n\n        return null;\n    };\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const rts = (state: CpuInterface.State) => new Rts(state);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Write implements StateMachineInterface<number> {\n    constructor(state: CpuInterface.State, operation: Write.Operation) {\n        this._state = state;\n        this._operation = operation;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable\n    reset = (operand: number): StateMachineInterface.Result =>\n        this._result.write(() => null, operand, this._operation(this._state));\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _operation: Write.Operation;\n}\n\nnamespace Write {\n    export interface Operation {\n        (s: CpuInterface.State): number;\n    }\n}\n\nexport const write = (state: CpuInterface.State, operation: Write.Operation) => new Write(state, operation);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuInterface from '../CpuInterface';\n\nfunction setFlagsNZ(operand: number, state: CpuInterface.State): void {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z)) |\n        (operand & 0x80) |\n        (operand ? 0 : CpuInterface.Flags.z);\n}\n\nexport function genRmw(operand: number, state: CpuInterface.State, operation: (x: number) => number): number {\n    const result = operation(operand);\n    setFlagsNZ(result, state);\n\n    return result;\n}\n\nexport function genNullary(state: CpuInterface.State, operation: (state: CpuInterface.State) => number): void {\n    setFlagsNZ(operation(state), state);\n}\n\nexport function genUnary(\n    operand: number,\n    state: CpuInterface.State,\n    operation: (operand: number, state: CpuInterface.State) => number\n): null {\n    setFlagsNZ(operation(operand, state), state);\n\n    return null;\n}\n\nexport function adc(operand: number, state: CpuInterface.State): null {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (operand & 0x0f) + (state.a & 0x0f) + (state.flags & CpuInterface.Flags.c),\n            d1 = (operand >>> 4) + (state.a >>> 4) + (d0 > 9 ? 1 : 0);\n\n        state.a = d0 % 10 | (d1 % 10 << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 > 9 ? CpuInterface.Flags.c : 0); // carry\n    } else {\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n\n    return null;\n}\n\nexport function aslImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function aslRmw(operand: number, state: CpuInterface.State): number {\n    const result = (operand << 1) & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand >>> 7);\n\n    return result;\n}\n\nexport function bit(operand: number, state: CpuInterface.State): null {\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.v | CpuInterface.Flags.z)) |\n        (operand & (CpuInterface.Flags.n | CpuInterface.Flags.v)) |\n        (operand & state.a ? 0 : CpuInterface.Flags.z);\n\n    return null;\n}\n\nexport function cmp(\n    operand: number,\n    state: CpuInterface.State,\n    getRegister: (state: CpuInterface.State) => number\n): void {\n    const diff = getRegister(state) + (~operand & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n}\n\nexport function sbc(operand: number, state: CpuInterface.State): null {\n    if (state.flags & CpuInterface.Flags.d) {\n        const d0 = (state.a & 0x0f) - (operand & 0x0f) - (~state.flags & CpuInterface.Flags.c),\n            d1 = (state.a >>> 4) - (operand >>> 4) - (d0 < 0 ? 1 : 0);\n\n        state.a = (d0 < 0 ? 10 + d0 : d0) | ((d1 < 0 ? 10 + d1 : d1) << 4);\n\n        state.flags =\n            (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n            (state.a & 0x80) | // negative\n            (state.a ? 0 : CpuInterface.Flags.z) | // zero\n            (d1 < 0 ? 0 : CpuInterface.Flags.c); // carry / borrow\n    } else {\n        operand = ~operand & 0xff;\n\n        const sum = state.a + operand + (state.flags & CpuInterface.Flags.c),\n            result = sum & 0xff;\n\n        state.flags =\n            (state.flags &\n                ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c | CpuInterface.Flags.v)) |\n            (result & 0x80) | // negative\n            (result ? 0 : CpuInterface.Flags.z) | // zero\n            (sum >>> 8) | // carry / borrow\n            ((~(operand ^ state.a) & (result ^ operand) & 0x80) >>> 1); // overflow\n\n        state.a = result;\n    }\n\n    return null;\n}\n\nexport function lsrImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = state.a >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function lsrRmw(operand: number, state: CpuInterface.State): number {\n    const result = operand >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand & CpuInterface.Flags.c);\n\n    return result;\n}\n\nexport function rolImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = ((state.a << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old >>> 7);\n}\n\nexport function rolRmw(operand: number, state: CpuInterface.State): number {\n    const result = ((operand << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand >>> 7);\n\n    return result;\n}\n\nexport function rorImmediate(state: CpuInterface.State): void {\n    const old = state.a;\n    state.a = (state.a >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (old & CpuInterface.Flags.c);\n}\n\nexport function rorRmw(operand: number, state: CpuInterface.State): number {\n    const result = (operand >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (result & 0x80) |\n        (result ? 0 : CpuInterface.Flags.z) |\n        (operand & CpuInterface.Flags.c);\n\n    return result;\n}\n\n// Undocumented opcodes\n\nexport function arr(operand: number, state: CpuInterface.State): void {\n    state.a = ((state.a & operand) >>> 1) | (state.flags & CpuInterface.Flags.c ? 0x80 : 0);\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.c | CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.v)) |\n        ((state.a & 0x40) >>> 6) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (state.a & 0x80) |\n        ((state.a & 0x40) ^ ((state.a & 0x20) << 1));\n}\n\nexport function alr(operand: number, state: CpuInterface.State): null {\n    const i = state.a & operand;\n    state.a = i >>> 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.a & 0x80) |\n        (state.a ? 0 : CpuInterface.Flags.z) |\n        (i & CpuInterface.Flags.c);\n\n    return null;\n}\n\nexport function dcp(operand: number, state: CpuInterface.State): number {\n    const result = (operand + 0xff) & 0xff;\n    const diff = state.a + (~result & 0xff) + 1;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (diff & 0x80) |\n        (diff & 0xff ? 0 : CpuInterface.Flags.z) |\n        (diff >>> 8);\n\n    return result;\n}\n\nexport function axs(operand: number, state: CpuInterface.State): null {\n    const value = (state.a & state.x) + (~operand & 0xff) + 1;\n\n    state.x = value & 0xff;\n\n    state.flags =\n        (state.flags & ~(CpuInterface.Flags.n | CpuInterface.Flags.z | CpuInterface.Flags.c)) |\n        (state.x & 0x80) |\n        (state.x & 0xff ? 0 : CpuInterface.Flags.z) |\n        (value >>> 8);\n\n    return null;\n}\n\nexport function rra(operand: number, state: CpuInterface.State): number {\n    const result = (operand >>> 1) | ((state.flags & CpuInterface.Flags.c) << 7);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand & CpuInterface.Flags.c);\n\n    adc(result, state);\n\n    return result;\n}\n\nexport function rla(operand: number, state: CpuInterface.State): number {\n    const result = ((operand << 1) & 0xff) | (state.flags & CpuInterface.Flags.c);\n\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand >>> 7);\n\n    setFlagsNZ((state.a &= result), state);\n\n    return result;\n}\n\nexport function slo(operand: number, state: CpuInterface.State): number {\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | (operand >>> 7);\n    const result = (operand << 1) & 0xff;\n\n    state.a = state.a | result;\n    setFlagsNZ(state.a, state);\n\n    return result;\n}\n\nexport function aax(state: CpuInterface.State): number {\n    const result = state.a & state.x;\n    setFlagsNZ(result, state);\n\n    return result;\n}\n\nexport function isc(operand: number, state: CpuInterface.State): number {\n    const result = (operand + 1) & 0xff;\n\n    sbc(result, state);\n\n    return result;\n}\n\nexport function aac(operand: number, state: CpuInterface.State): null {\n    state.a &= operand;\n    setFlagsNZ(state.a, state);\n    state.flags = (state.flags & ~CpuInterface.Flags.c) | ((state.a & 0x80) >>> 7);\n\n    return null;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Boot implements StateMachineInterface {\n    constructor(state: CpuInterface.State) {\n        this._state = state;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._pre1Step, 0xff);\n\n    @Immutable private _pre1Step = (): StateMachineInterface.Result => this._result.read(this._pre2Step, 0x0ff);\n\n    @Immutable private _pre2Step = (): StateMachineInterface.Result => this._result.read(this._stack1Step, 0x0100);\n\n    @Immutable private _stack1Step = (): StateMachineInterface.Result => this._result.read(this._stack2Step, 0x01ff);\n\n    @Immutable\n    private _stack2Step = (): StateMachineInterface.Result => {\n        this._state.s = 0xfd;\n        return this._result.read(this._stack3Step, 0x01fe);\n    };\n\n    @Immutable\n    private _stack3Step = (): StateMachineInterface.Result => this._result.read(this._readTargetLoStep, 0xfffc);\n\n    @Immutable\n    private _readTargetLoStep = (operand: number): StateMachineInterface.Result => {\n        this._targetAddress = operand;\n        return this._result.read(this._readTargetHiStep, 0xfffd);\n    };\n\n    @Immutable\n    private _readTargetHiStep = (operand: number): null => {\n        this._targetAddress |= operand << 8;\n        this._state.p = this._targetAddress;\n\n        return null;\n    };\n\n    private _targetAddress = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n}\n\nexport const boot = (state: CpuInterface.State) => new Boot(state);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport { boot } from './boot';\nexport { brk, nmi, irq } from './interrupt';\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport StateMachineInterface from '../StateMachineInterface';\nimport CpuInterface from '../../CpuInterface';\nimport ResultImpl from '../ResultImpl';\nimport { freezeImmutables, Immutable } from '../../../../tools/decorators';\n\nclass Interrupt implements StateMachineInterface {\n    constructor(state: CpuInterface.State, defaultVector: number, isBrk: boolean) {\n        this._state = state;\n        this._defaultVector = defaultVector;\n        this._isBrk = isBrk;\n\n        freezeImmutables(this);\n    }\n\n    @Immutable reset = (): StateMachineInterface.Result => this._result.read(this._dummyRead, this._state.p);\n\n    @Immutable\n    private _dummyRead = (): StateMachineInterface.Result => {\n        if (this._isBrk) {\n            this._state.p = (this._state.p + 1) & 0xffff;\n        }\n\n        return this._result.write(this._pushPch, 0x0100 + this._state.s, this._state.p >>> 8);\n    };\n\n    @Immutable\n    private _pushPch = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.write(this._pushPcl, 0x0100 + this._state.s, this._state.p & 0xff).poll(true);\n    };\n\n    @Immutable\n    private _pushPcl = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n        this._vector = this._state.nmi ? 0xfffa : this._defaultVector;\n\n        return this._result.write(\n            this._pushFlags,\n            0x0100 + this._state.s,\n            this._isBrk ? this._state.flags | CpuInterface.Flags.b : this._state.flags & ~CpuInterface.Flags.b\n        );\n    };\n\n    @Immutable\n    private _pushFlags = (): StateMachineInterface.Result => {\n        this._state.s = (this._state.s - 1) & 0xff;\n\n        return this._result.read(this._fetchPcl, this._vector);\n    };\n\n    @Immutable\n    private _fetchPcl = (value: number): StateMachineInterface.Result => {\n        this._state.flags |= CpuInterface.Flags.i;\n        this._state.p = value;\n\n        return this._result.read(this._fetchPch, ++this._vector);\n    };\n\n    @Immutable\n    private _fetchPch = (value: number): null => {\n        this._state.p = this._state.p | (value << 8);\n        this._state.nmi = this._state.irq = false;\n\n        return null;\n    };\n\n    private _vector = 0;\n\n    @Immutable private readonly _result = new ResultImpl();\n\n    @Immutable private readonly _state: CpuInterface.State;\n    @Immutable private readonly _defaultVector: number;\n    @Immutable private readonly _isBrk: boolean;\n}\n\nexport const brk = (state: CpuInterface.State) => new Interrupt(state, 0xfffe, true);\nexport const irq = (state: CpuInterface.State) => new Interrupt(state, 0xfffe, false);\nexport const nmi = (state: CpuInterface.State) => new Interrupt(state, 0xfffa, false);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport DigitalJoystickInterface from './DigitalJoystickInterface';\nimport Switch from './Switch';\nimport SwitchInterface from './SwitchInterface';\n\nexport default class DigitalJoystick implements DigitalJoystickInterface {\n    getLeft(): SwitchInterface {\n        return this._left;\n    }\n\n    getRight(): SwitchInterface {\n        return this._right;\n    }\n\n    getUp(): SwitchInterface {\n        return this._up;\n    }\n\n    getDown(): SwitchInterface {\n        return this._down;\n    }\n\n    getFire(): SwitchInterface {\n        return this._fire;\n    }\n\n    private _left = new Switch();\n    private _right = new Switch();\n    private _up = new Switch();\n    private _down = new Switch();\n\n    private _fire = new Switch();\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Switch from './Switch';\nimport SwitchInterface from './SwitchInterface';\nimport KeypadControllerInterface from './KeypadControllerInterface';\n\nexport default class KeypadController implements KeypadControllerInterface {\n\n    constructor() {\n        for (let row = 0; row < 4; row++) {\n            this._rows[row] = new Array<Switch>(3);\n            for (let col = 0; col < 3; col++) {\n                this._rows[row][col] = new Switch();\n            }\n        }\n    }\n\n    getKey(row: number, col: number): SwitchInterface {\n        return this._rows[row][col];\n    }\n\n    private _rows = new Array<Array<Switch>>(4);\n\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport PaddleInterface from './PaddleInterface';\n\nexport default class Paddle implements PaddleInterface {\n    setValue(value: number): void {\n        this._value = value;\n        this.valueChanged.dispatch(value);\n    }\n\n    getValue(): number {\n        return this._value;\n    }\n\n    getFire(): Switch {\n        return this._fireSwitch;\n    }\n\n    valueChanged = new Event<number>();\n\n    protected _fireSwitch = new Switch();\n    protected _value = 0.5;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from './SwitchInterface';\n\nexport default class Switch implements SwitchInterface {\n    constructor(private _state: boolean = false) {}\n\n    read(): boolean {\n        this.beforeRead.dispatch(this);\n        return this._state;\n    }\n\n    peek(): boolean {\n        return this._state;\n    }\n\n    toggle(state: boolean): void {\n        if (this._state === state) {\n            return;\n        }\n\n        this._state = state;\n        this.stateChanged.dispatch(state);\n    }\n\n    stateChanged = new Event<boolean>();\n    beforeRead = new Event<this>();\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport CpuFactory from '../cpu/Factory';\n\ninterface Config {\n    tvMode: Config.TvMode;\n    enableAudio: boolean;\n    randomSeed: number;\n    emulatePaddles: boolean;\n    frameStart: number;\n    pcmAudio: boolean;\n    cpuType: CpuFactory.Type;\n    controllerPort0: Config.ControllerType;\n    controllerPort1: Config.ControllerType;\n}\n\nnamespace Config {\n    export const enum TvMode {\n        ntsc,\n        pal,\n        secam\n    }\n\n    export const enum ControllerType {\n        joystick,\n        paddles,\n        keypad\n    }\n\n    export function create(config: Partial<Config> = {}): Config {\n        return {\n            tvMode: TvMode.ntsc,\n            enableAudio: true,\n            randomSeed: -1,\n            emulatePaddles: true,\n            frameStart: -1,\n            pcmAudio: false,\n            cpuType: CpuFactory.Type.stateMachine,\n            controllerPort0: ControllerType.joystick,\n            controllerPort1: ControllerType.joystick,\n\n            ...config\n        };\n    }\n\n    export function getClockHz(config: Config): number {\n        switch (config.tvMode) {\n            case Config.TvMode.ntsc:\n                return 262 * 228 * 60;\n\n            case Config.TvMode.pal:\n            case Config.TvMode.secam:\n                return 312 * 228 * 50;\n        }\n    }\n}\n\nexport { Config as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Switch from '../io/Switch';\nimport SwitchInterface from '../io/SwitchInterface';\nimport ControlPanelInterface from './ControlPanelInterface';\n\nclass ControlPanel implements ControlPanelInterface {\n    getSelectSwitch(): SwitchInterface {\n        return this._selectSwitch;\n    }\n\n    getResetButton(): SwitchInterface {\n        return this._resetButton;\n    }\n\n    getColorSwitch(): SwitchInterface {\n        return this._colorSwitch;\n    }\n\n    getDifficultySwitchP0(): SwitchInterface {\n        return this._difficutlyP0;\n    }\n\n    getDifficultySwitchP1(): SwitchInterface {\n        return this._difficutlyP1;\n    }\n\n    private _selectSwitch = new Switch();\n    private _resetButton = new Switch();\n    private _colorSwitch = new Switch();\n    private _difficutlyP0 = new Switch();\n    private _difficutlyP1 = new Switch();\n}\n\nexport { ControlPanel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nnamespace CartridgeInfo {\n    export enum CartridgeType {\n        vanilla_2k = 'vanilla_2k',\n        vanilla_4k = 'vanilla_4k',\n\n        bankswitch_2k_cv = 'bankswitch_2k_cv',\n\n        bankswitch_8k_F8 = 'bankswitch_8k_F8',\n        bankswitch_8k_E0 = 'bankswitch_8k_E0',\n        bankswitch_8k_3F = 'bankswitch_8k_3F',\n        bankswitch_8k_FE = 'bankswitch_8k_FE',\n        bankswitch_8k_UA = 'bankswitch_8k_UA',\n        bankswitch_8k_DPC = 'bankswitch_8k_DPC',\n        bankswitch_8k_econobanking = 'bankswitch_8k_econobanking',\n        bankswitch_8k_pp = 'bankswitch_8k_pp',\n\n        bankswitch_12k_FA = 'bankswitch_12k_FA',\n\n        bankswitch_16k_F6 = 'bankswitch_16k_F6',\n        bankswitch_16k_E7 = 'bankswitch_16k_E7',\n\n        bankswitch_FA2 = 'bankswitch_FA2',\n\n        bankswitch_32k_F4 = 'bankswitch_32k_F4',\n\n        bankswitch_64k_F0 = 'bankswitch_64k_F0',\n        bankswitch_64k_EF = 'bankswitch_64k_EF',\n\n        bankswitch_3E = 'bankswitch_3E',\n        bankswitch_supercharger = 'bankswitch_supercharger',\n        bankswitch_dpc_plus = 'bankswitch_dpc_plus',\n        bankswitch_cdf = 'bankswitch_cdf',\n\n        unknown = 'unknown'\n    }\n\n    export function getAllTypes(): Array<CartridgeType> {\n        return [\n            CartridgeType.vanilla_2k,\n            CartridgeType.vanilla_4k,\n            CartridgeType.bankswitch_2k_cv,\n            CartridgeType.bankswitch_8k_F8,\n            CartridgeType.bankswitch_8k_E0,\n            CartridgeType.bankswitch_8k_3F,\n            CartridgeType.bankswitch_8k_FE,\n            CartridgeType.bankswitch_8k_UA,\n            CartridgeType.bankswitch_8k_econobanking,\n            CartridgeType.bankswitch_8k_pp,\n            CartridgeType.bankswitch_12k_FA,\n            CartridgeType.bankswitch_8k_DPC,\n            CartridgeType.bankswitch_16k_F6,\n            CartridgeType.bankswitch_16k_E7,\n            CartridgeType.bankswitch_FA2,\n            CartridgeType.bankswitch_32k_F4,\n            CartridgeType.bankswitch_3E,\n            CartridgeType.bankswitch_64k_F0,\n            CartridgeType.bankswitch_64k_EF,\n            CartridgeType.bankswitch_supercharger,\n            CartridgeType.bankswitch_dpc_plus,\n            CartridgeType.bankswitch_cdf,\n            CartridgeType.unknown\n        ];\n    }\n\n    export function describeCartridgeType(cartridgeType: CartridgeType): string {\n        switch (cartridgeType) {\n            case CartridgeType.vanilla_2k:\n                return 'plain 2k';\n\n            case CartridgeType.vanilla_4k:\n                return 'plain 4k';\n\n            case CartridgeType.bankswitch_2k_cv:\n                return '2k CommaVideo scheme';\n\n            case CartridgeType.bankswitch_8k_F8:\n                return 'bankswitched 8k, F8 (Atari) scheme';\n\n            case CartridgeType.bankswitch_8k_E0:\n                return 'bankswitched 8k, E0 (Parker Bros.) scheme';\n\n            case CartridgeType.bankswitch_8k_3F:\n                return 'bankswitched 8k, 3F (Tigervision) scheme';\n\n            case CartridgeType.bankswitch_8k_FE:\n                return 'bankswitched 8k, FE (Activision) scheme';\n\n            case CartridgeType.bankswitch_8k_UA:\n                return 'bankswitched 8k, UA (Pleiades) scheme';\n\n            case CartridgeType.bankswitch_8k_pp:\n                return 'bankswitched 8k, Pink Panther scheme';\n\n            case CartridgeType.bankswitch_12k_FA:\n                return 'bankswitched 12k, FA (CBS) scheme';\n\n            case CartridgeType.bankswitch_8k_DPC:\n                return 'bankswitched 8k + DPC';\n\n            case CartridgeType.bankswitch_8k_econobanking:\n                return 'bankswitched 8k, econobanking scheme';\n\n            case CartridgeType.bankswitch_16k_F6:\n                return 'bankswitched 16k, F6 (Atari) scheme';\n\n            case CartridgeType.bankswitch_16k_E7:\n                return 'bankswitched 16k, E7 (M-Network) scheme';\n\n            case CartridgeType.bankswitch_FA2:\n                return 'bankswitched 28k/29k, FA2 (modified CBS) scheme';\n\n            case CartridgeType.bankswitch_32k_F4:\n                return 'bankswitched 32k, F4 (Atari) scheme';\n\n            case CartridgeType.bankswitch_3E:\n                return 'bankswitched 3E (Tigervision + RAM) scheme';\n\n            case CartridgeType.bankswitch_64k_F0:\n                return 'bankswitched 64k, F0 (Megaboy) scheme';\n\n            case CartridgeType.bankswitch_64k_EF:\n                return 'bankswitched 64k, EFSC (Homestar Runner) scheme';\n\n            case CartridgeType.bankswitch_supercharger:\n                return 'bankswitched supercharger';\n\n            case CartridgeType.bankswitch_dpc_plus:\n                return 'bankswitched DPC+';\n\n            case CartridgeType.bankswitch_cdf:\n                return 'bankswitched CDF';\n\n            case CartridgeType.unknown:\n                return 'unknown';\n        }\n    }\n}\n\nexport { CartridgeInfo as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\n/*\n * The tone generator has been heavily influenced by the code found at\n * http://www.biglist.com/lists/stella/archives/200311/msg00156.html with following licence:\n *\n * sound.c\n * version 0.2\n *\n * Copyright (c) 2003 Adam Wozniak (adam@wozniakconsulting.com)\n * All Rights Reserved\n *\n * Permission granted to freely copy and use for any purpose, provided\n * this copyright header remains intact.\n */\nimport Config from '../Config';\nimport AudioOutputBuffer from '../../../tools/AudioOutputBuffer';\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nconst FREQUENCY_DIVISIORS = decodeBase64('AQEPAQEBAQEBAQEBAwMDAQ==');\n\n// all ones\nconst POLY0 = new Int8Array([1]);\n\n// 50% duty cycle\nconst POLY1 = new Int8Array([1, 1]);\n\n// 16/31 duty cycle\nconst POLY2 = new Int8Array([16, 15]);\n\n// 4 bit LFSR\nconst POLY4 = decodeBase64('AQICAQEBBAM=');\n\n// 5 bit LFSR\nconst POLY5 = decodeBase64('AQIBAQICBQQCAQMBAQEBBA==');\n\n// 9 bit LFSR\nconst POLY9 = decodeBase64(\n    'AQQBAwIEAQIDAgEBAQEBAQIEAgEEAQECAgEDAgEDAQEBBAEBAQECAQECBgECAgECAQIBAQIBBg' +\n        'IBAgIBAQEBAgICAgcCAwICAQEBAwIBAQIBAQcBAQMBAQIDAwEBAQICAQECAgQDBQEDAQEFAgEB' +\n        'AQIBAgEDAQIFAQECAQEBBQEBAQEBAQEBBgEBAQIBAQEBBAIBAQMBAwYDAgMBAQIBAgQBAQEDAQ' +\n        'EBAQMBAgEEAgIDBAEBBAECAQICAgEBBAMBBAQJBQQBBQMBAQMCAgIBBQECAQEBAgMBAgEBAwQC' +\n        'BQICAQIDAQEBAQECAQMDAwIBAgEBAQEBAwMBAgIDAQMBCA=='\n);\n\n// used by mode 15\nconst POLY68 = decodeBase64('BQYEBQoFAwcECgYDBgQJBg==');\n\n// used by mode 3\nconst POLY465 = decodeBase64(\n    'AgMCAQQBBgoCBAIBAQQFCQMDBAEBAQgFBQUEAQEBCAQCCAMDAQEHBAIHBQEDAQcEAQQIAgEDBA' +\n        'cBAwcDAgEGBgICBAUDAgYGAQMDAgUDBwMEAwICAgUJAwEFAwECAgsFAQUDAQECDAUBAgUCAQEM' +\n        'BgECBQECAQoGAwICBAECBgo='\n);\n\nconst POLYS = [\n    POLY0,\n    POLY4,\n    POLY4,\n    POLY465,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY5,\n    POLY9,\n    POLY5,\n    POLY2,\n    POLY0,\n    POLY1,\n    POLY1,\n    POLY2,\n    POLY68\n];\n\nclass ToneGenerator {\n    constructor(private _config?: Config) {}\n\n    setConfig(config: Config) {\n        this._config = config;\n    }\n\n    getKey(tone: number, frequency: number): number {\n        // Hack: this is at the boundary of hearing anyway and causes nasty artifacts during\n        // resampling, so we kill it right away.\n        if (POLYS[tone] === POLY1 && FREQUENCY_DIVISIORS[tone] * (frequency + 1) === 1) {\n            return 0;\n        }\n\n        return (tone << 5) | frequency;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        const tone = (key >>> 5) & 0x0f,\n            frequency = key & 0x1f;\n\n        const poly = POLYS[tone];\n\n        let length = 0;\n        for (let i = 0; i < poly.length; i++) {\n            length += poly[i];\n        }\n\n        length = length * FREQUENCY_DIVISIORS[tone] * (frequency + 1);\n\n        const content = new Float32Array(length);\n\n        const sampleRate = Config.getClockHz(this._config) / 114;\n\n        let f = 0;\n        let count = 0;\n        let offset = 0;\n        let state = true;\n\n        for (let i = 0; i < length; i++) {\n            f++;\n\n            if (f === FREQUENCY_DIVISIORS[tone] * (frequency + 1)) {\n                f = 0;\n                count++;\n\n                if (count === poly[offset]) {\n                    offset++;\n                    count = 0;\n\n                    if (poly.length === offset) {\n                        offset = 0;\n                    }\n                }\n\n                state = !(offset & 0x01);\n            }\n\n            content[i] = state ? 1 : -1;\n        }\n\n        return new AudioOutputBuffer(content, sampleRate);\n    }\n}\n\nexport { ToneGenerator as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nclass AudioOutputBuffer {\n    constructor(private _content: Float32Array, private _sampleRate: number) {}\n\n    getLength(): number {\n        return this._content.length;\n    }\n\n    getContent(): Float32Array {\n        return this._content;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    replaceUnderlyingBuffer(buffer: Float32Array): void {\n        this._content = buffer;\n    }\n}\n\nexport { AudioOutputBuffer as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nclass RingBuffer<T> {\n    constructor(private _capacity: number) {\n        this._buffer = new Array<T>(this._capacity);\n\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n    }\n\n    size(): number {\n        return this._size;\n    }\n\n    pop(): T {\n        if (this._size === 0) {\n            return undefined;\n        }\n\n        const item = this._buffer[this._index];\n        this._buffer[this._index] = null;\n\n        this._index = (this._index + 1) % this._capacity;\n        this._size--;\n\n        return item;\n    }\n\n    push(item: T): this {\n        if (this._size === this._capacity) {\n            this.evict.dispatch(this.pop());\n        }\n\n        this._buffer[(this._index + this._size++) % this._capacity] = item;\n\n        return this;\n    }\n\n    forEach(fn: (item: T) => void): this {\n        for (let i = 0; i < this._size; i++) {\n            fn(this._buffer[(this._index + i) % this._capacity]);\n        }\n\n        return this;\n    }\n\n    clear(): this {\n        for (let i = 0; i < this._capacity; i++) {\n            this._buffer[i] = null;\n        }\n\n        this._size = 0;\n        this._index = 0;\n\n        return this;\n    }\n\n    capacity(): number {\n        return this._capacity;\n    }\n\n    evict = new Event<T>();\n\n    private _size = 0;\n    private _index = 0;\n    private _buffer: Array<T>;\n}\n\nexport { RingBuffer as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nconst encodingsString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    encodings = new Uint8Array(256);\n\nexport namespace __init {\n    let i: number;\n\n    for (i = 0; i < 256; i++) {\n        encodings[i] = 255;\n    }\n    for (i = 0; i < 64; i++) {\n        encodings[encodingsString.charCodeAt(i)] = i;\n    }\n\n    encodings['='.charCodeAt(0)] = 0;\n}\n\nfunction decodeChar(data: string, idx: number): number {\n    const value = encodings[data.charCodeAt(idx)];\n\n    if (value > 63) {\n        throw new Error('invalid base64 character \"' + data[idx] + '\" at index ' + idx);\n    }\n\n    return value;\n}\n\nfunction decodeNibble(data: string, idx: number): number {\n    return (\n        (decodeChar(data, idx) << 18) +\n        (decodeChar(data, idx + 1) << 12) +\n        (decodeChar(data, idx + 2) << 6) +\n        decodeChar(data, idx + 3)\n    );\n}\n\nfunction getPadding(data: string): number {\n    let padding = 0,\n        idx = data.length - 1;\n\n    while (idx >= 0 && data[idx--] === '=') {\n        padding++;\n    }\n\n    return padding;\n}\n\nexport function decode(data: string): Uint8Array {\n    if (data.length % 4 !== 0) {\n        throw new Error('invalid base64 data --- char count mismatch');\n    }\n\n    const nibbles = data.length / 4,\n        decodedSize = nibbles * 3 - getPadding(data),\n        decoded = new Uint8Array(decodedSize);\n\n    let idx = 0;\n\n    for (let i = 0; i < nibbles; i++) {\n        const nibble = decodeNibble(data, i * 4);\n\n        for (let j = 0; j < 3 && idx < decodedSize; j++) {\n            decoded[idx++] = (nibble >>> (8 * (2 - j))) & 0xff;\n        }\n    }\n\n    return decoded;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport const isSafari = 'safari' in window;\nexport const isIOS =\n    !!navigator.platform.match(/iPhone|iPad|iPod/) ||\n    (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nconst immutables = Symbol('immutable properties');\n\nexport function freezeImmutables(target: any): void {\n    const immutableProperties = target[immutables];\n    if (!immutableProperties) {\n        return;\n    }\n\n    for (const prop of immutableProperties) {\n        Object.defineProperty(target, prop, { writable: false, configurable: false });\n    }\n}\n\nexport function Immutable(target: any, prop: string): void {\n    if (!target[immutables]) {\n        Object.defineProperty(target, immutables, { value: [], writable: false, enumerable: false });\n    }\n\n    target[immutables].push(prop);\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport PoolMember from './PoolMember';\nimport PoolInterface from './PoolInterface';\n\nclass Pool<T> implements PoolInterface<T> {\n    constructor(private _factory: Pool.FactoryInterface<T>) {}\n\n    get(): PoolMember<T> {\n        let member: PoolMember<T>;\n\n        if (this._poolSize === 0) {\n            const newItem = this._factory();\n\n            member = new PoolMember<T>(\n                newItem,\n                (victim: PoolMember<T>) => this._releaseMember(victim),\n                (victim: PoolMember<T>) => this._disposeMember(victim)\n            );\n        } else {\n            member = this._pool[--this._poolSize];\n            member._isAvailable = false;\n        }\n\n        return member;\n    }\n\n    private _releaseMember(victim: PoolMember<T>) {\n        if (victim._isAvailable) {\n            throw new Error('Trying to release an already released pool member');\n        }\n\n        if (victim._isDisposed) {\n            throw new Error('Trying to release an already disposed pool member');\n        }\n\n        const position = this._poolSize++;\n\n        this._pool[position] = victim;\n\n        victim._isAvailable = true;\n        victim._poolPosition = position;\n\n        this.event.release.dispatch(victim.get());\n    }\n\n    private _disposeMember(victim: PoolMember<T>) {\n        if (victim._isDisposed) {\n            throw new Error('Trying to dispose of an already disposed pool member');\n        }\n\n        if (victim._isAvailable) {\n            if (this._poolSize > 1) {\n                this._pool[victim._poolPosition] = this._pool[this._poolSize - 1];\n            }\n\n            this._poolSize--;\n        }\n\n        victim._isDisposed = true;\n\n        this.event.dispose.dispatch(victim.get());\n    }\n\n    event = {\n        release: new Event<T>(),\n        dispose: new Event<T>(),\n    };\n\n    private _pool: Array<PoolMember<T>> = [];\n\n    private _poolSize = 0;\n}\n\nnamespace Pool {\n    export interface FactoryInterface<T> {\n        (): T;\n    }\n}\n\nexport { Pool as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport PoolMemberInterface from './PoolMemberInterface';\n\nclass PoolMember<T> implements PoolMemberInterface<T> {\n    constructor(\n        private _value: T,\n        private _releaseCB: (victim: PoolMember<T>) => void,\n        private _disposeCB: (victim: PoolMember<T>) => void\n    ) {}\n\n    adopt(target: T): void {\n        this._value = target;\n    }\n\n    get(): T {\n        return this._value;\n    }\n\n    release(): void {\n        this._releaseCB(this);\n    }\n\n    dispose(): void {\n        this._disposeCB(this);\n    }\n\n    public _isAvailable = false;\n    public _isDisposed = false;\n    public _poolPosition: number;\n}\n\nexport { PoolMember as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\nimport AsyncIOInterface from '../../machine/io/AsyncIOInterface';\nimport DriverManager from '../stella/service/DriverManager';\n\nclass AsyncIO implements DriverManager.Driver {\n    bind(io: AsyncIOInterface | null): void {\n        if (this._io) {\n            return;\n        }\n\n        if (io) {\n            io.message.addHandler(AsyncIO._onAsyncIOMessage, this);\n        }\n\n        this._io = io;\n    }\n\n    unbind(): void {\n        if (!this._io) {\n            return;\n        }\n\n        this._io.message.removeHandler(AsyncIO._onAsyncIOMessage, this);\n\n        this._io = null;\n    }\n\n    send(message: ArrayLike<number>): void {\n        if (this._io) {\n            this._io.send(message);\n        }\n    }\n\n    private static _onAsyncIOMessage(message: ArrayLike<number>, self: AsyncIO): void {\n        self.message.dispatch(message);\n    }\n\n    message = new Event<ArrayLike<number>>();\n\n    private _io: AsyncIOInterface = null;\n}\n\nexport default AsyncIO;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport screenfull from 'screenfull';\n\nimport VideoDriver from './Video';\nimport { isIOS } from '../../tools/browser';\n\nconst noFullscrenApi = isIOS;\n// const screenfull = _screenfull as Screenfull;\n\nexport default class FullscreenVideoDriver {\n    constructor(\n        private _videoDriver: VideoDriver,\n        private _zIndex = 100000,\n        private _fullscreenClass = 'stellerator-fullscreen'\n    ) {}\n\n    engage(): void {\n        if (this._engaged) {\n            return;\n        }\n\n        this._engaged = true;\n\n        if (noFullscrenApi || !screenfull) {\n            this._adjustSizeForFullscreen();\n            window.addEventListener('resize', this._resizeListener);\n            this._engaged = true;\n        } else {\n            screenfull.on('change', this._changeListener);\n            screenfull.request(this._videoDriver.getCanvas());\n        }\n    }\n\n    disengage(): void {\n        if (!this._engaged) {\n            return;\n        }\n\n        if (noFullscrenApi || !screenfull) {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            this._engaged = false;\n        } else {\n            screenfull.exit();\n        }\n    }\n\n    toggle(): void {\n        if (this._engaged) {\n            this.disengage();\n        } else {\n            this.engage();\n        }\n    }\n\n    isEngaged(): boolean {\n        return this._engaged;\n    }\n\n    private _onChange(): void {\n        if (!screenfull) {\n            return;\n        }\n\n        if (screenfull.isFullscreen) {\n            window.addEventListener('resize', this._resizeListener);\n            this._adjustSizeForFullscreen();\n        } else {\n            this._resetSize();\n            window.removeEventListener('resize', this._resizeListener);\n            screenfull.off('change', this._changeListener);\n\n            this._engaged = false;\n        }\n    }\n\n    private _resetSize() {\n        const element = this._videoDriver.getCanvas();\n\n        if (this._resizeHandle) {\n            clearTimeout(this._resizeHandle);\n            this._resizeHandle = null;\n        }\n\n        element.style.width = '';\n        element.style.height = '';\n        element.style.maxWidth = '';\n        element.style.maxHeight = '';\n\n        if (noFullscrenApi) {\n            element.style.position = '';\n            element.style.top = '';\n            element.style.left = '';\n            element.style.zIndex = '';\n        }\n\n        document.body.classList.remove(this._fullscreenClass);\n\n        setTimeout(() => this._videoDriver.resize(), 0);\n    }\n\n    private _adjustSizeForFullscreen() {\n        const element = this._videoDriver.getCanvas();\n\n        this._videoDriver.resize(window.innerWidth, window.innerHeight);\n        element.style.width = window.innerWidth + 'px';\n        element.style.height = window.innerHeight + 'px';\n        element.style.maxWidth = window.innerWidth + 'px';\n        element.style.maxHeight = window.innerHeight + 'px';\n\n        if (noFullscrenApi) {\n            element.style.position = 'fixed';\n            element.style.top = '0';\n            element.style.left = '0';\n            element.style.zIndex = '' + this._zIndex;\n        }\n\n        document.body.classList.add(this._fullscreenClass);\n    }\n\n    private _resizeListener = () => {\n        if (this._resizeHandle) {\n            return;\n        }\n\n        this._resizeHandle = setTimeout(() => {\n            this._resizeHandle = null;\n            this._adjustSizeForFullscreen();\n        }, 100);\n    };\n\n    private _resizeHandle: any = null;\n\n    private _changeListener: () => void = this._onChange.bind(this);\n\n    private _engaged = false;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport ShadowSwitch from './gamepad/ShadowSwitch';\nimport DigitalJoystickInterface from '../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../machine/io/SwitchInterface';\nimport { Target, Mapping, MappingType, Sign } from './gamepad/Mapping';\nimport { defaultMapping } from './gamepad/defaultMapping';\n\nconst MIN_POLL_INTERVAL = 50;\n\nexport const joystickTargets: Array<Target> = [\n    Target.left,\n    Target.right,\n    Target.up,\n    Target.down,\n    Target.fire,\n    Target.start,\n    Target.select,\n    Target.pause\n];\n\nexport type AuxTarget = Target.start | Target.select | Target.pause;\nexport const auxTargets: Array<Target> = [Target.start, Target.select, Target.pause];\n\nfunction readButton(button: GamepadButton | number): boolean {\n    return typeof button === 'object' ? button.pressed : button > 0.5;\n}\n\nexport default class GamepadDriver {\n    constructor() {\n        this.setMapping(defaultMapping);\n    }\n\n    static probeGamepadCount(): number {\n        let cnt = 0;\n\n        const gamepads = navigator.getGamepads();\n\n        for (let i = 0; i < gamepads.length; i++) {\n            if (gamepads[i]) {\n                cnt++;\n            }\n        }\n\n        return cnt;\n    }\n\n    init(): void {\n        if (!navigator.getGamepads) {\n            throw new Error(`gamepad API not available`);\n        }\n\n        this.probeGamepads();\n        window.addEventListener('gamepadconnected', this._onGamepadConnect);\n        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    deinit(): void {\n        this.unbind();\n\n        window.removeEventListener('gamepadconnected', this._onGamepadConnect);\n        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnect);\n    }\n\n    bind(\n        joysticks: Array<DigitalJoystickInterface> = [],\n        auxSwitches: Partial<Record<AuxTarget, SwitchInterface>> = {}\n    ): void {\n        if (this._bound) {\n            return;\n        }\n        this._bound = true;\n\n        this._joysticks = joysticks;\n        this._auxSwitches = auxSwitches;\n        this._bound = true;\n\n        this._shadows = new WeakMap();\n\n        this._controlledSwitches().forEach(swtch => {\n            const shadow = new ShadowSwitch();\n\n            this._shadows.set(swtch, shadow);\n            shadow.setState(swtch.read());\n\n            swtch.beforeRead.addHandler(GamepadDriver._onBeforeSwitchRead, this);\n        });\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._controlledSwitches().forEach(swtch =>\n            swtch.beforeRead.removeHandler(GamepadDriver._onBeforeSwitchRead, this)\n        );\n\n        this._shadows = null;\n        this._auxSwitches = {};\n        this._joysticks = [];\n\n        this._bound = false;\n    }\n\n    getGamepadCount(): number {\n        return this._gamepadCount;\n    }\n\n    setMapping(mapping: Array<Mapping>, id?: string) {\n        if (typeof id !== 'undefined') {\n            this._mappings.set(id, mapping);\n        }\n\n        const states = new Map<Target, boolean>();\n        const targets: Array<Target> = [];\n\n        for (const m of mapping) {\n            if (targets.indexOf(m.target)) {\n                targets.push(m.target);\n                states.set(m.target, false);\n            }\n        }\n\n        this._mappingStates.set(mapping, states);\n        this._mappingTargets.set(mapping, targets);\n    }\n\n    clearMapping(id: string) {\n        this._mappings.delete(id);\n    }\n\n    poll() {\n        this._readGamepads();\n    }\n\n    private static _onBeforeSwitchRead(swtch: SwitchInterface, self: GamepadDriver) {\n        self.poll();\n    }\n\n    private probeGamepads(): void {\n        const cnt = GamepadDriver.probeGamepadCount();\n\n        if (cnt !== this._gamepadCount) {\n            this._gamepadCount = cnt;\n            this.gamepadCountChanged.dispatch(this._gamepadCount);\n        }\n    }\n\n    private _getSwitchForTarget(target: Target, joystick: DigitalJoystickInterface = null): SwitchInterface | null {\n        if (this._auxSwitches[target as AuxTarget]) {\n            return this._auxSwitches[target as AuxTarget];\n        }\n\n        if (!joystick) {\n            return null;\n        }\n\n        switch (target) {\n            case Target.up:\n                return joystick.getUp();\n\n            case Target.down:\n                return joystick.getDown();\n\n            case Target.left:\n                return joystick.getLeft();\n\n            case Target.right:\n                return joystick.getRight();\n\n            case Target.fire:\n                return joystick.getFire();\n\n            default:\n                return null;\n        }\n    }\n\n    private _controlledSwitches(): Array<SwitchInterface> {\n        const switches: Array<SwitchInterface> = [\n            ...Object.keys(this._auxSwitches).map(target => this._auxSwitches[target as AuxTarget])\n        ];\n\n        for (const joystick of this._joysticks) {\n            switches.push(\n                joystick.getLeft(),\n                joystick.getRight(),\n                joystick.getUp(),\n                joystick.getDown(),\n                joystick.getFire()\n            );\n        }\n\n        return switches;\n    }\n\n    private _readGamepads() {\n        const now = Date.now();\n\n        if (this._gamepadCount === 0 || now - this._lastPoll < MIN_POLL_INTERVAL) {\n            return;\n        }\n\n        this._lastPoll = now;\n\n        const gamepads = navigator.getGamepads();\n\n        let joystickIndex = 0;\n\n        for (let i = 0; i < gamepads.length; i++) {\n            const gamepad = gamepads[i];\n\n            if (!gamepad) {\n                continue;\n            }\n\n            const mapping = this._mappings.get(gamepad.id) || defaultMapping;\n\n            const states = this._mappingStates.get(mapping);\n            const targets = this._mappingTargets.get(mapping);\n\n            for (const target of targets) {\n                states.set(target, false);\n            }\n\n            for (const mappingEntry of mapping) {\n                switch (mappingEntry.type) {\n                    case MappingType.button:\n                        const button = gamepad.buttons[mappingEntry.index];\n\n                        if (typeof button !== 'undefined' && readButton(button)) {\n                            states.set(mappingEntry.target, true);\n                        }\n\n                        break;\n\n                    case MappingType.axis:\n                        const axis = gamepad.axes[mappingEntry.index];\n\n                        if (\n                            typeof axis !== 'undefined' &&\n                            (mappingEntry.sign === Sign.positive ? axis > 0.5 : axis < -0.5)\n                        ) {\n                            states.set(mappingEntry.target, true);\n                        }\n\n                        break;\n                }\n            }\n\n            for (const target of targets) {\n                const swtch = this._getSwitchForTarget(target, this._joysticks[joystickIndex]);\n                if (!swtch) {\n                    continue;\n                }\n\n                const shadow = this._shadows.get(swtch);\n\n                shadow.toggle(states.get(target));\n\n                shadow.sync(swtch);\n            }\n\n            joystickIndex++;\n        }\n    }\n\n    private _onGamepadConnect = () => this.probeGamepads();\n\n    private _onGamepadDisconnect = () => this.probeGamepads();\n\n    gamepadCountChanged = new Event<number>();\n\n    private _shadows: WeakMap<SwitchInterface, ShadowSwitch> = null;\n    private _mappings = new Map<string, Array<Mapping>>();\n    private _mappingStates = new WeakMap<Array<Mapping>, Map<Target, boolean>>();\n    private _mappingTargets = new WeakMap<Array<Mapping>, Array<Target>>();\n\n    private _bound = false;\n    private _joysticks: Array<DigitalJoystickInterface> = [];\n    private _auxSwitches: Partial<Record<AuxTarget, SwitchInterface>> = {};\n\n    private _gamepadCount = 0;\n    private _lastPoll = 0;\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport PaddleInterface from '../../machine/io/PaddleInterface';\n\nexport default class MouseAsPaddleDriver {\n    bind(paddle: PaddleInterface): void {\n        if (this._paddle) {\n            return;\n        }\n\n        this._paddle = paddle;\n        this._x = -1;\n\n        document.addEventListener('mousemove', this._listener);\n    }\n\n    unbind(): void {\n        if (!this._paddle) {\n            return;\n        }\n\n        document.removeEventListener('mousemove', this._listener);\n        this._paddle = null;\n    }\n\n    private _onDocumentMouseMove(e: MouseEvent) {\n        if (this._x >= 0) {\n            const dx = e.screenX - this._x;\n            let value = this._paddle.getValue();\n\n            value += -dx / window.innerWidth / 0.9;\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n\n            this._paddle.setValue(value);\n        }\n\n        this._x = e.screenX;\n    }\n\n    private _paddle: PaddleInterface;\n    private _x = -1;\n    private _listener: (e: MouseEvent) => void = this._onDocumentMouseMove.bind(this);\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport VideoEndpointInterface from './VideoEndpointInterface';\nimport { fsh, vsh } from './video/shader';\nimport Program from './video/Program';\nimport PoolMemberInterface from '../../tools/pool/PoolMemberInterface';\nimport PhosphorProcessor from './video/PhosphorProcessor';\nimport NtscProcessor from './video/NtscProcessor';\nimport ScanlineProcessor from './video/ScanlineProcessor';\nimport IntegerScalingProcessor from './video/IntegerScalingProcessor';\nimport RingBuffer from '../../tools/RingBuffer';\nimport Processor from './video/Processor';\nimport { Capabilities, detect } from './video/Capabilities';\n\nconst MAX_CONSECUTIVE_UNDERFLOWS = 5;\n\nclass Video {\n    constructor(private _canvas: HTMLCanvasElement, config: Partial<Video.Config> = {}) {\n        const defaultConfig: Video.Config = {\n            gamma: 1,\n            scalingMode: Video.ScalingMode.qis,\n            phosphorLevel: 0.5,\n            scanlineLevel: 0.2,\n            tvEmulation: Video.TvEmulation.composite,\n        };\n\n        this._config = {\n            ...defaultConfig,\n            ...config,\n        };\n\n        this._getRenderingContext();\n\n        this._canvas.addEventListener('webglcontextlost', this._onContextLost);\n        this._canvas.addEventListener('webglcontextrestored', this._onContextRestored);\n\n        this._pendingFrames.evict.addHandler((frame) => frame.release());\n    }\n\n    init(): this {\n        if (!this._gl) return this;\n\n        this._phosphorProcessor = new PhosphorProcessor(this._gl, this._capabilities);\n        this._ntscProcessor = new NtscProcessor(this._gl, this._capabilities);\n        this._scanlineProcessor = new ScanlineProcessor(this._gl, this._capabilities);\n        this._integerScalingProcessor = new IntegerScalingProcessor(this._gl, this._capabilities);\n\n        this._updateCanvasSize();\n\n        this._mainProgram = Program.compile(\n            this._gl,\n            vsh.plain.source(this._capabilities),\n            fsh.blitWithGamma.source(this._capabilities)\n        );\n\n        this._mainProgram.use();\n        this._mainProgram.uniform1i(fsh.blitWithGamma.uniform.textureUnit, 0);\n\n        this._createVertexCoordinateBuffer();\n        this._createTextureCoordinateBuffer();\n        this._configureSourceTexture();\n\n        this._applyConfiguration();\n\n        return this;\n    }\n\n    close(): this {\n        const gl = this._gl;\n\n        this._cancelDraw();\n        this.unbind();\n\n        if (gl) {\n            this._mainProgram.delete();\n            gl.deleteBuffer(this._vertexCoordinateBuffer);\n            gl.deleteBuffer(this._textureCoordinateBuffer);\n            gl.deleteTexture(this._sourceTexture);\n\n            this._ntscProcessor.destroy();\n            this._phosphorProcessor.destroy();\n            this._scanlineProcessor.destroy();\n            this._integerScalingProcessor.destroy();\n\n            return this;\n        }\n\n        this._canvas.removeEventListener('webglcontextlost', this._onContextLost);\n        this._canvas.removeEventListener('webglcontextrestored', this._onContextRestored);\n\n        this._pendingFrames.forEach((f) => f.release());\n    }\n\n    resize(width?: number, height?: number): this {\n        this._updateCanvasSize(width, height);\n        this._updateVertexBuffer();\n\n        if (this._video) {\n            this._configureProcessors();\n            this._scheduleDraw();\n        }\n\n        if (this._hasFrame) this._draw();\n\n        return this;\n    }\n\n    getCanvas(): HTMLCanvasElement {\n        return this._canvas;\n    }\n\n    bind(video: VideoEndpointInterface): this {\n        if (this._video) {\n            return this;\n        }\n\n        this._video = video;\n        this._video.newFrame.addHandler(Video._frameHandler, this);\n\n        this._configureProcessors();\n\n        this._scheduleDraw();\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._video) {\n            return this;\n        }\n\n        this._cancelDraw();\n        this._video.newFrame.removeHandler(Video._frameHandler, this);\n        this._video = null;\n\n        this._pendingFrames.forEach((f) => f.release());\n        this._pendingFrames.clear();\n\n        return this;\n    }\n\n    getConfig(): Video.Config {\n        return this._config;\n    }\n\n    updateConfig(config: Partial<Video.Config>): this {\n        return this;\n    }\n\n    private static _frameHandler(imageDataPoolMember: PoolMemberInterface<ImageData>, self: Video): void {\n        if (self._pendingFrames.size() === self._pendingFrames.capacity()) {\n            self._pendingFrames.forEach((f) => f.release());\n            self._pendingFrames.clear();\n        }\n\n        self._pendingFrames.push(imageDataPoolMember);\n\n        self._scheduleDraw();\n    }\n\n    private _getRenderingContext(): void {\n        const contextOptions: WebGLContextAttributes = {\n            alpha: false,\n            depth: false,\n            antialias: false,\n        };\n\n        this._gl =\n            this._canvas.getContext('webgl', contextOptions) ||\n            (this._canvas.getContext('experimental-webgl', contextOptions) as any);\n\n        if (!this._gl) {\n            throw new Error('unable to acquire webgl context');\n        }\n\n        this._capabilities = detect(this._gl);\n    }\n\n    private _scheduleDraw(): void {\n        if (this._anmiationFrameHandle !== 0) {\n            return;\n        }\n\n        this._anmiationFrameHandle = requestAnimationFrame(() => this._onAnimationFrame());\n    }\n\n    private _cancelDraw(): void {\n        if (this._anmiationFrameHandle !== 0) {\n            cancelAnimationFrame(this._anmiationFrameHandle);\n        }\n\n        this._anmiationFrameHandle = 0;\n    }\n\n    private _onAnimationFrame(): void {\n        const gl = this._gl;\n        this._anmiationFrameHandle = 0;\n\n        if (this._pendingFrames.size() === 0) {\n            if (this._consecutiveUnderflows++ <= MAX_CONSECUTIVE_UNDERFLOWS) {\n                this._scheduleDraw();\n            }\n\n            return;\n        }\n\n        this._consecutiveUnderflows = 0;\n        this._scheduleDraw();\n\n        const frame = this._pendingFrames.pop();\n\n        if (!gl) return;\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._sourceTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, frame.get());\n\n        frame.release();\n\n        this._hasFrame = true;\n\n        this._draw();\n    }\n\n    private _draw(): void {\n        if (!this._gl) return;\n\n        const gl = this._gl;\n\n        let texture = this._sourceTexture;\n\n        for (const processor of this._processors) {\n            processor.render(texture);\n            texture = processor.getTexture();\n        }\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        gl.texParameteri(\n            gl.TEXTURE_2D,\n            gl.TEXTURE_MIN_FILTER,\n            this._config.scalingMode === Video.ScalingMode.none ? gl.NEAREST : gl.LINEAR\n        );\n        gl.texParameteri(\n            gl.TEXTURE_2D,\n            gl.TEXTURE_MAG_FILTER,\n            this._config.scalingMode === Video.ScalingMode.none ? gl.NEAREST : gl.LINEAR\n        );\n\n        this._mainProgram.use();\n        this._mainProgram.bindVertexAttribArray(\n            vsh.plain.attribute.vertexPosition,\n            this._vertexCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        this._mainProgram.bindVertexAttribArray(\n            vsh.plain.attribute.textureCoordinate,\n            this._textureCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private _createVertexCoordinateBuffer(): void {\n        if (!this._gl) return;\n\n        const gl = this._gl,\n            targetWidth = gl.drawingBufferWidth,\n            targetHeight = gl.drawingBufferHeight,\n            scaleX = targetWidth > 0 ? 2 / targetWidth : 1,\n            scaleY = targetHeight > 0 ? 2 / targetHeight : 1;\n\n        let width: number, height: number, west: number, north: number;\n\n        if ((4 / 3) * targetHeight <= targetWidth) {\n            height = 2;\n            width = (4 / 3) * targetHeight * scaleX;\n            north = 1;\n            west = (Math.floor((-4 / 3) * targetHeight) / 2) * scaleX;\n        } else {\n            height = (targetWidth / (4 / 3)) * scaleY;\n            width = 2;\n            north = (Math.floor(targetWidth / (4 / 3)) / 2) * scaleY;\n            west = -1;\n        }\n\n        const vertexData = [west + width, north, west, north, west + width, north - height, west, north - height];\n\n        this._vertexCoordinateBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexData), gl.STATIC_DRAW);\n    }\n\n    private _updateVertexBuffer(): void {\n        if (!this._gl) return;\n\n        this._gl.deleteBuffer(this._vertexCoordinateBuffer);\n        this._createVertexCoordinateBuffer();\n    }\n\n    private _createTextureCoordinateBuffer(): void {\n        if (!this._gl) return;\n\n        const gl = this._gl;\n        const textureCoordinateData = [1, 1, 0, 1, 1, 0, 0, 0];\n\n        this._textureCoordinateBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordinateData), gl.STATIC_DRAW);\n    }\n\n    private _updateCanvasSize(width?: number, height?: number): void {\n        if (typeof width === 'undefined' || typeof height === 'undefined') {\n            width = this.getCanvas().clientWidth;\n            height = this.getCanvas().clientHeight;\n        }\n\n        const pixelRatio = window.devicePixelRatio || 1;\n\n        this.getCanvas().width = width * pixelRatio;\n        this.getCanvas().height = height * pixelRatio;\n    }\n\n    private _configureSourceTexture(): void {\n        if (!this._gl) return;\n\n        const gl = this._gl;\n\n        if (!this._sourceTexture) {\n            this._sourceTexture = gl.createTexture();\n        }\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this._sourceTexture);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    }\n\n    private _configureProcessors() {\n        if (!this._video || !this._gl) return;\n\n        this._phosphorProcessor.configure(this._config.phosphorLevel);\n        this._scanlineProcessor.configure(this._config.scanlineLevel);\n        this._integerScalingProcessor.configure(this._gl.drawingBufferWidth, this._gl.drawingBufferHeight);\n\n        switch (this._config.tvEmulation) {\n            case Video.TvEmulation.composite:\n                this._ntscProcessor.configure(NtscProcessor.mode.composite);\n                break;\n\n            case Video.TvEmulation.svideo:\n                this._ntscProcessor.configure(NtscProcessor.mode.svideo);\n                break;\n        }\n\n        let width = this._video.getWidth();\n        let height = this._video.getHeight();\n\n        for (const processor of this._processors) {\n            processor.resize(width, height);\n\n            width = processor.getWidth();\n            height = processor.getHeight();\n        }\n    }\n\n    private _applyConfiguration(): void {\n        if (!this._gl) return;\n\n        this._mainProgram.use();\n        this._mainProgram.uniform1f(fsh.blitWithGamma.uniform.gamma, this._config.gamma);\n\n        this._processors = [];\n\n        if (this._config.tvEmulation !== Video.TvEmulation.none) {\n            this._ntscProcessor.init();\n            this._processors.push(this._ntscProcessor);\n        }\n\n        if (this._config.phosphorLevel > 0) {\n            this._phosphorProcessor.init();\n            this._processors.push(this._phosphorProcessor);\n        }\n\n        if (this._config.scanlineLevel > 0) {\n            this._scanlineProcessor.init();\n            this._processors.push(this._scanlineProcessor);\n        }\n\n        if (this._config.scalingMode === Video.ScalingMode.qis) {\n            this._integerScalingProcessor.init();\n            this._processors.push(this._integerScalingProcessor);\n        }\n\n        this._configureProcessors();\n    }\n\n    private _onContextLost = (e: Event): void => {\n        e.preventDefault();\n\n        this._gl = null;\n        this._mainProgram = null;\n        this._vertexCoordinateBuffer = null;\n        this._textureCoordinateBuffer = null;\n        this._sourceTexture = null;\n        this._phosphorProcessor = null;\n        this._ntscProcessor = null;\n        this._integerScalingProcessor = null;\n        this._scanlineProcessor = null;\n\n        this._processors = [];\n    };\n\n    private _onContextRestored = (): void => {\n        this._getRenderingContext();\n        this.init();\n    };\n\n    private _config: Video.Config = null;\n    private _gl: WebGLRenderingContext = null;\n    private _video: VideoEndpointInterface = null;\n    private _capabilities: Capabilities = null;\n\n    private _mainProgram: Program = null;\n    private _vertexCoordinateBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n    private _sourceTexture: WebGLTexture = null;\n\n    private _anmiationFrameHandle = 0;\n\n    private _phosphorProcessor: PhosphorProcessor = null;\n    private _ntscProcessor: NtscProcessor = null;\n    private _scanlineProcessor: ScanlineProcessor = null;\n    private _integerScalingProcessor: IntegerScalingProcessor = null;\n    private _processors: Array<Processor> = [];\n\n    private _pendingFrames = new RingBuffer<PoolMemberInterface<ImageData>>(3);\n    private _consecutiveUnderflows = 0;\n    private _hasFrame = false;\n}\n\nnamespace Video {\n    export const enum ScalingMode {\n        qis = 'qis',\n        bilinear = 'bilinear',\n        none = 'none',\n    }\n\n    export const enum TvEmulation {\n        composite = 'composite',\n        svideo = 'svideo',\n        none = 'none',\n    }\n\n    export interface Config {\n        gamma: number;\n        scalingMode: ScalingMode;\n        phosphorLevel: number;\n        scanlineLevel: number;\n        tvEmulation: TvEmulation;\n    }\n}\n\nexport default Video;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Mutex } from 'async-mutex';\n\nimport ChannelInterface from './audio/ChannelInterface';\nimport WaveformChannel from './audio/WaveformChannel';\nimport PCMChannel from './audio/PCMChannel';\n\nimport WaveformAudioOutputInterface from '../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from './PCMAudioEndpointInterface';\n\nconst INTERACTION_EVENTS = ['touchstart', 'click', 'keydown'];\n\ntype AudioContextType = typeof AudioContext;\n\ndeclare namespace window {\n    const webkitAudioContext: AudioContextType;\n    // tslint:disable-next-line:variable-name\n    const AudioContext: AudioContextType;\n}\n\nconst audioContextCtor = window.AudioContext || window.webkitAudioContext;\n\nfunction waitMax<T>(waitFor: Promise<T>, timeout: number = 500): Promise<void> {\n    return new Promise((r) => {\n        waitFor.then(() => r());\n        setTimeout(r, timeout);\n    });\n}\n\nclass PreallocatedContext {\n    constructor() {\n        if (!audioContextCtor) {\n            return;\n        }\n\n        this.context = new audioContextCtor();\n\n        try {\n            this.context.destination.channelCount = 1;\n        } catch (e) {\n            console.warn('audio driver: failed to set channel count');\n        }\n\n        INTERACTION_EVENTS.forEach((event) => document.addEventListener(event, this._interactionListener));\n    }\n\n    stopListening(): void {\n        INTERACTION_EVENTS.forEach((event) => document.removeEventListener(event, this._interactionListener));\n    }\n\n    private _interactionListener = () => {\n        const context = this.context;\n\n        this.interactionRequired = false;\n        INTERACTION_EVENTS.forEach((event) => document.removeEventListener(event, this._interactionListener));\n\n        this.mutex.runExclusive(async () => {\n            await waitMax(context.resume());\n\n            return new Promise<void>((r) =>\n                setTimeout(async () => {\n                    await waitMax(context.suspend());\n                    r();\n                }, 100)\n            );\n        });\n    };\n\n    public readonly mutex = new Mutex();\n    public readonly context: AudioContext = null;\n    public interactionRequired = true;\n}\n\nlet preallocatedContext = new PreallocatedContext();\n\nclass WebAudioDriver {\n    constructor(waveformChannels = 0, pcmChannels = 0, fragmentSize?: number) {\n        this._waveformChannels = new Array<WaveformChannel>(waveformChannels);\n        this._pcmChannels = new Array<PCMChannel>(pcmChannels);\n\n        for (let i = 0; i < waveformChannels; i++) {\n            this._waveformChannels[i] = new WaveformChannel(this._cache);\n        }\n\n        for (let i = 0; i < pcmChannels; i++) {\n            this._pcmChannels[i] = new PCMChannel(fragmentSize);\n        }\n\n        this._channels = [...this._waveformChannels, ...this._pcmChannels];\n    }\n\n    init(): void {\n        const p = preallocatedContext;\n        preallocatedContext = new PreallocatedContext();\n\n        this._context = p.context;\n        p.stopListening();\n\n        this._mutex = p.mutex;\n\n        if (p.interactionRequired) {\n            INTERACTION_EVENTS.forEach((event) => document.addEventListener(event, this._touchListener, true));\n        }\n\n        this._merger = this._context.createChannelMerger(this._channels.length);\n        this._merger.connect(this._context.destination);\n\n        this._channels.forEach((channel) => channel.init(this._context, this._merger));\n    }\n\n    bind(\n        waveformSources: Array<WaveformAudioOutputInterface> = [],\n        pcmSources: Array<PCMAudioEndpointInterface> = []\n    ): void {\n        if (this._isBound) {\n            return;\n        }\n\n        if (waveformSources.length !== this._waveformChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._waveformChannels.length}, got ${waveformSources.length}`\n            );\n        }\n\n        if (pcmSources.length !== this._pcmChannels.length) {\n            throw new Error(\n                `invalid number of waveform sources: expected ${this._pcmChannels.length}, got ${pcmSources.length}`\n            );\n        }\n\n        this._waveformChannels.forEach((channel, i) => channel.bind(waveformSources[i]));\n        this._pcmChannels.forEach((channel, i) => channel.bind(pcmSources[i]));\n\n        this._isBound = true;\n\n        this.resume();\n    }\n\n    unbind(): void {\n        if (!this._isBound) {\n            return;\n        }\n\n        this._channels.forEach((channel) => channel.unbind());\n\n        this._isBound = false;\n\n        this.pause();\n    }\n\n    setMasterVolume(channel: number, volume: number): void {\n        this._channels[channel].setMasterVolume(volume);\n    }\n\n    pause(): Promise<void> {\n        return this._mutex.runExclusive(async () => {\n            if (this._suspended) {\n                return;\n            }\n\n            this._suspended = true;\n\n            await waitMax(this._context.suspend());\n        });\n    }\n\n    resume(): Promise<void> {\n        return this._mutex.runExclusive(async () => {\n            if (!this._suspended) {\n                return;\n            }\n\n            this._suspended = false;\n\n            await waitMax(this._context.resume());\n        });\n    }\n\n    close(): void {\n        this._mutex.runExclusive(() => this._context.close());\n    }\n\n    private _touchListener = () => {\n        INTERACTION_EVENTS.forEach((event) => document.removeEventListener(event, this._touchListener, true));\n\n        if (!this._context) {\n            return;\n        }\n\n        this._context.resume();\n\n        setTimeout(() => {\n            this._mutex.runExclusive(() => (this._suspended ? this._context.suspend() : this._context.resume()));\n        }, 10);\n    };\n\n    private _context: AudioContext = null;\n    private _merger: ChannelMergerNode = null;\n    private _waveformChannels: Array<WaveformChannel> = null;\n    private _pcmChannels: Array<PCMChannel> = null;\n    private _channels: Array<ChannelInterface> = null;\n    private _cache = new Map<number, AudioBuffer>();\n    private _mutex = new Mutex();\n\n    private _suspended = true;\n\n    private _isBound = false;\n}\n\nexport { WebAudioDriver as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport ResamplerInterface from './ResamplerInterface';\n\nclass LinearReasmpler implements ResamplerInterface {\n    constructor() {\n        this.reset(1, 1);\n    }\n\n    reset(sourceRate: number, targetRate: number) {\n        this._ratio = sourceRate / targetRate;\n        this._needsData = false;\n        this._fractionalIndex = 0;\n\n        for (let i = 0; i < 2; i++) {\n            this._buffer[i] = 0;\n        }\n    }\n\n    get(): number {\n        const x = (1 - this._fractionalIndex) * this._buffer[0] + this._fractionalIndex * this._buffer[1];\n\n        this._fractionalIndex += this._ratio;\n        if (this._fractionalIndex > 1) {\n            this._fractionalIndex -= 1;\n            this._needsData = true;\n        }\n\n        return x;\n    }\n\n    push(sample: number): void {\n        this._buffer[0] = this._buffer[1];\n        this._buffer[1] = sample;\n\n        this._needsData = false;\n    }\n\n    needsData(): boolean {\n        return this._needsData;\n    }\n\n    private _buffer = new Float32Array(2);\n    private _fractionalIndex = 0;\n    private _needsData = false;\n\n    private _ratio = 0;\n}\n\nexport { LinearReasmpler as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport PCMAudioEndpointInterface from '../PCMAudioEndpointInterface';\nimport PoolMemberInterface from '../../../tools/pool/PoolMemberInterface';\nimport RingBuffer from '../../../tools/RingBuffer';\nimport ResamplerInterface from './ResamplerInterface';\nimport LinearReasmpler from './LinearResampler';\n\nclass PCMChannel implements ChannelInterface {\n    constructor(private _hostFragmentSize = 1024) {}\n\n    init(context: AudioContext, target: AudioNode) {\n        this._outputSampleRate = context.sampleRate;\n\n        this._gain = context.createGain();\n        this._gain.gain.value = this._volume;\n        this._gain.connect(target);\n\n        this._processor = context.createScriptProcessor(this._hostFragmentSize, 1, 1);\n        this._bufferSize = this._processor.bufferSize;\n\n        this._processor.connect(this._gain);\n        this._processor.onaudioprocess = e => this._processAudio(e);\n\n        const buffer = context.createBuffer(1, 1, context.sampleRate);\n        buffer.getChannelData(0).set([0]);\n    }\n\n    bind(audio: PCMAudioEndpointInterface): void {\n        this.unbind();\n\n        this._audio = audio;\n        this._fragmentSize = audio.getFrameSize();\n        this._inputSampleRate = audio.getSampleRate();\n        this._fragmentIndex = 0;\n        this._lastFragment = null;\n        this._bufferUnderrun = true;\n        this._fragmentRing = new RingBuffer<PoolMemberInterface<Float32Array>>(\n            Math.ceil(((4 * this._bufferSize) / this._outputSampleRate / this._fragmentSize) * this._inputSampleRate)\n        );\n        this._fragmentRing.evict.addHandler(b => b.release());\n\n        this._audio.newFrame.addHandler(PCMChannel._onNewFragment, this);\n\n        this._resampler.reset(this._inputSampleRate, this._outputSampleRate);\n    }\n\n    unbind() {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.newFrame.removeHandler(PCMChannel._onNewFragment, this);\n\n        if (this._lastFragment) {\n            this._lastFragment.release();\n            this._lastFragment = null;\n        }\n\n        if (this._currentFragment) {\n            this._currentFragment.release();\n            this._currentFragment = null;\n        }\n\n        if (this._fragmentRing) {\n            this._fragmentRing.forEach(b => b.release());\n            this._fragmentRing.clear();\n            this._fragmentRing = null;\n        }\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n    }\n\n    private static _onNewFragment(fragment: PoolMemberInterface<Float32Array>, self: PCMChannel): void {\n        self._fragmentRing.push(fragment);\n\n        if (!self._currentFragment) {\n            self._currentFragment = self._fragmentRing.pop();\n            self._fragmentIndex = 0;\n        }\n    }\n\n    private _processAudio(e: AudioProcessingEvent): void {\n        if (!this._audio) {\n            return;\n        }\n\n        const outputBuffer = e.outputBuffer.getChannelData(0);\n        let bufferIndex = 0;\n\n        const fillBuffer = (until: number) => {\n            const previousFragmentBuffer = this._lastFragment && this._lastFragment.get();\n\n            while (bufferIndex < until) {\n                if (this._resampler.needsData()) {\n                    this._resampler.push(\n                        (this._audio && this._audio.isPaused()) || !previousFragmentBuffer\n                            ? 0\n                            : previousFragmentBuffer[this._fragmentIndex++] * this._volume\n                    );\n\n                    if (this._fragmentIndex >= this._fragmentSize) {\n                        this._fragmentIndex = 0;\n                    }\n                }\n\n                outputBuffer[bufferIndex++] = this._resampler.get();\n            }\n        };\n\n        // Give the emulation half a fragment of head start when recovering from an underrun\n        if (this._currentFragment && this._bufferUnderrun) {\n            fillBuffer(this._bufferSize >>> 1);\n            this._bufferUnderrun = false;\n        }\n\n        let fragmentBuffer = this._currentFragment && this._currentFragment.get();\n\n        while (bufferIndex < this._bufferSize && this._currentFragment) {\n            if (this._resampler.needsData()) {\n                this._resampler.push(fragmentBuffer[this._fragmentIndex++] * this._volume);\n\n                if (this._fragmentIndex >= this._fragmentSize) {\n                    this._fragmentIndex = 0;\n\n                    if (this._lastFragment) {\n                        this._lastFragment.release();\n                    }\n\n                    this._lastFragment = this._currentFragment;\n                    this._currentFragment = this._fragmentRing.pop();\n\n                    fragmentBuffer = this._currentFragment && this._currentFragment.get();\n                }\n            }\n\n            outputBuffer[bufferIndex++] = this._resampler.get();\n        }\n\n        if (bufferIndex < this._bufferSize) {\n            this._bufferUnderrun = true;\n        }\n\n        fillBuffer(this._bufferSize);\n    }\n\n    private _outputSampleRate = 0;\n    private _bufferSize = 0;\n    private _volume = 1;\n\n    private _gain: GainNode = null;\n    private _processor: ScriptProcessorNode = null;\n    private _bufferUnderrun = false;\n\n    private _fragmentRing: RingBuffer<PoolMemberInterface<Float32Array>> = null;\n\n    private _fragmentSize = 0;\n    private _inputSampleRate = 0;\n    private _fragmentIndex = 0;\n    private _currentFragment: PoolMemberInterface<Float32Array> = null;\n    private _lastFragment: PoolMemberInterface<Float32Array> = null;\n\n    private _audio: PCMAudioEndpointInterface;\n\n    private _resampler: ResamplerInterface = new LinearReasmpler();\n}\n\nexport { PCMChannel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport ChannelInterface from './ChannelInterface';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\n\nclass WaveformChannel implements ChannelInterface {\n    constructor(private _cache: Map<number, AudioBuffer>) {}\n\n    init(context: AudioContext, target: AudioNode): void {\n        this._context = context;\n\n        this._gain = this._context.createGain();\n        this._gain.connect(target);\n    }\n\n    bind(target: WaveformAudioOutputInterface): void {\n        if (this._audio) {\n            return;\n        }\n\n        this._audio = target;\n        this._volume = this._audio.getVolume();\n        this._updateGain();\n\n        this._audio.volumeChanged.addHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.addHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.addHandler(WaveformChannel._onStop, this);\n    }\n\n    unbind(): void {\n        if (!this._audio) {\n            return;\n        }\n\n        this._audio.volumeChanged.removeHandler(WaveformChannel._onVolumeChanged, this);\n        this._audio.bufferChanged.removeHandler(WaveformChannel._onBufferChanged, this);\n        this._audio.stop.removeHandler(WaveformChannel._onStop, this);\n\n        if (this._source) {\n            this._source.stop();\n            this._source = null;\n        }\n\n        this._audio = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._masterVolume = volume;\n        this._updateGain();\n    }\n\n    private static _onVolumeChanged(volume: number, self: WaveformChannel): void {\n        self._volume = volume;\n        self._updateGain();\n    }\n\n    private static _onBufferChanged(key: number, self: WaveformChannel): void {\n        if (!self._cache.has(key)) {\n            const sampleBuffer = self._audio.getBuffer(key),\n                audioBuffer = self._context.createBuffer(1, sampleBuffer.getLength(), sampleBuffer.getSampleRate());\n\n            audioBuffer.getChannelData(0).set(sampleBuffer.getContent());\n            self._cache.set(key, audioBuffer);\n        }\n\n        const buffer = self._cache.get(key),\n            source = self._context.createBufferSource();\n\n        if (self._source) {\n            self._source.stop();\n        }\n\n        source.loop = true;\n        source.buffer = buffer;\n        source.connect(self._gain);\n        source.start();\n\n        self._source = source;\n    }\n\n    private static _onStop(payload: void, self: WaveformChannel): void {\n        if (self._source) {\n            self._source.stop();\n            self._source = null;\n        }\n    }\n\n    private _updateGain(): void {\n        this._gain.gain.value = this._volume * this._masterVolume;\n    }\n\n    private _context: AudioContext = null;\n    private _source: AudioBufferSourceNode = null;\n    private _gain: GainNode = null;\n    private _audio: WaveformAudioOutputInterface = null;\n\n    private _volume = 0;\n    private _masterVolume = 1;\n}\n\nexport { WaveformChannel as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport const enum Target {\n    left = 'left',\n    right = 'right',\n    up = 'up',\n    down = 'down',\n    fire = 'fire',\n    start = 'start',\n    select = 'select',\n    pause = 'pause'\n}\n\nexport const enum MappingType {\n    button = 'button',\n    axis = 'axis'\n}\n\nexport const enum Sign {\n    positive = 'positive',\n    negative = 'negative'\n}\n\nexport interface ButtonMapping {\n    type: MappingType.button;\n\n    index: number;\n    target: Target;\n}\n\nexport interface AxisMapping {\n    type: MappingType.axis;\n\n    index: number;\n    sign: Sign;\n    target: Target;\n}\n\nexport type Mapping = ButtonMapping | AxisMapping;\n\nexport function button(index: number, target: Target): ButtonMapping {\n    return {\n        type: MappingType.button,\n        index,\n        target\n    };\n}\n\nexport function axis(index: number, sign: Sign, target: Target): AxisMapping {\n    return {\n        type: MappingType.axis,\n        index,\n        sign,\n        target\n    };\n}\n\nexport default Mapping;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\n\nclass ShadowSwitch {\n    toggle(state: boolean): void {\n        if (state === this._state) {\n            return;\n        }\n\n        this._state = state;\n        this._dirty = true;\n    }\n\n    setState(state: boolean): void {\n        this._state = state;\n        this._dirty = false;\n    }\n\n    sync(swtch: SwitchInterface): void {\n        if (this._dirty) {\n            swtch.toggle(this._state);\n            this._dirty = false;\n        }\n    }\n\n    private _state = false;\n    private _dirty = false;\n}\n\nexport default ShadowSwitch;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Mapping, button, Target, axis, Sign } from './Mapping';\n\nexport const defaultMapping: Array<Mapping> = [\n    button(12, Target.up),\n    button(13, Target.down),\n    button(14, Target.left),\n    button(15, Target.right),\n\n    button(8, Target.select),\n    button(9, Target.start),\n\n    ...[0, 1, 2, 3, 10, 11].map(i => button(i, Target.fire)),\n    ...[4, 5, 6, 7].map(i => button(i, Target.pause)),\n\n    axis(0, Sign.negative, Target.left),\n    axis(0, Sign.positive, Target.right),\n    axis(1, Sign.negative, Target.up),\n    axis(1, Sign.positive, Target.down),\n\n    axis(2, Sign.negative, Target.left),\n    axis(2, Sign.positive, Target.right),\n    axis(3, Sign.negative, Target.up),\n    axis(3, Sign.positive, Target.down)\n];\n\nexport default defaultMapping;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nexport interface Capabilities {\n    floatTextures: boolean;\n    halfFloatTextures: boolean;\n    highpInVsh: boolean;\n    highpInFsh: boolean;\n}\n\nfunction framebufferSupportTextureType(gl: WebGLRenderingContext, type: number): boolean {\n    const texture = gl.createTexture();\n    const framebuffer = gl.createFramebuffer();\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 64, 64, 0, gl.RGBA, type, null);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n    const fbStatus = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    gl.deleteFramebuffer(framebuffer);\n    gl.deleteTexture(texture);\n\n    return fbStatus === gl.FRAMEBUFFER_COMPLETE;\n}\n\nfunction detectFloatTextureSupport(gl: WebGLRenderingContext): boolean {\n    gl.getExtension('WEBGL_color_buffer_float');\n    if (!gl.getExtension('OES_texture_float')) return false;\n\n    return framebufferSupportTextureType(gl, gl.FLOAT);\n}\n\nfunction detectHalfFloatTextureSupport(gl: WebGLRenderingContext): boolean {\n    gl.getExtension('EXT_color_buffer_half_float');\n\n    const extHalfFLoat = gl.getExtension('OES_texture_half_float');\n    if (!extHalfFLoat) {\n        return false;\n    }\n\n    return framebufferSupportTextureType(gl, extHalfFLoat.HALF_FLOAT_OES);\n}\n\nfunction shaderSupportsPrecision(gl: WebGLRenderingContext, shaderType: number, precisionType: number): boolean {\n    const format = gl.getShaderPrecisionFormat(shaderType, precisionType);\n\n    return !!format && format.precision > 0;\n}\n\nexport function detect(): Capabilities | null;\nexport function detect(gl: WebGLRenderingContext): Capabilities;\nexport function detect(gl: WebGLRenderingContext = null) {\n    if (!gl) {\n        const canvas = document.createElement('canvas');\n        canvas.width = 64;\n        canvas.height = 64;\n\n        gl = canvas.getContext('webgl') || (canvas.getContext('experimental-webgl') as any);\n    }\n\n    if (!gl) return null;\n\n    return {\n        floatTextures: detectFloatTextureSupport(gl),\n        halfFloatTextures: detectHalfFloatTextureSupport(gl),\n        highpInFsh: shaderSupportsPrecision(gl, gl.FRAGMENT_SHADER, gl.HIGH_FLOAT),\n        highpInVsh: shaderSupportsPrecision(gl, gl.VERTEX_SHADER, gl.HIGH_FLOAT)\n    };\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Processor from './Processor';\nimport Program from './Program';\nimport { fsh, vsh } from './shader';\nimport { Capabilities } from './Capabilities';\n\nclass IntegerScalingProcessor implements Processor {\n    constructor(private _gl: WebGLRenderingContext, private _capabilities: Capabilities) {}\n\n    init(): void {\n        if (this._initialized) return;\n\n        const gl = this._gl;\n\n        this._framebuffer = gl.createFramebuffer();\n        this._program = Program.compile(gl, vsh.plain.source(this._capabilities), fsh.blit.source(this._capabilities));\n\n        this._program.use();\n        this._program.uniform1i(fsh.blit.uniform.textureUnit, 0);\n\n        this._vertexCoordinateBuffer = gl.createBuffer();\n        this._textureCoordinateBuffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);\n\n        this._initialized = true;\n    }\n\n    destroy(): void {\n        if (!this._initialized) return;\n\n        const gl = this._gl;\n\n        this._program.delete();\n        gl.deleteFramebuffer(this._framebuffer);\n        gl.deleteBuffer(this._vertexCoordinateBuffer);\n        gl.deleteBuffer(this._textureCoordinateBuffer);\n\n        if (this._texture) gl.deleteTexture(this._texture);\n\n        this._initialized = false;\n    }\n\n    render(texture: WebGLTexture): void {\n        const gl = this._gl;\n\n        this._program.use();\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.vertexPosition,\n            this._vertexCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.textureCoordinate,\n            this._textureCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture, 0);\n\n        gl.viewport(0, 0, this._width, this._height);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    getTexture(): WebGLTexture {\n        return this._texture;\n    }\n\n    resize(width: number, height: number): void {\n        this._widthFrom = width;\n        this._heightFrom = height;\n\n        this._reconfigure();\n    }\n\n    configure(widthTo: number, heightTo: number): void {\n        this._widthTo = widthTo;\n        this._heightTo = heightTo;\n\n        this._reconfigure();\n    }\n\n    private _reconfigure(): void {\n        if (\n            this._widthFrom <= 0 ||\n            this._heightFrom <= 0 ||\n            this._widthTo <= 0 ||\n            this._heightTo <= 0 ||\n            !this._initialized\n        )\n            return;\n\n        this._width =\n            this._widthTo > this._widthFrom\n                ? Math.floor(this._widthTo / this._widthFrom) * this._widthFrom\n                : this._widthFrom;\n        this._height =\n            this._heightTo > this._heightFrom\n                ? Math.floor(this._heightTo / this._heightFrom) * this._heightFrom\n                : this._heightFrom;\n\n        const gl = this._gl;\n\n        if (this._texture) gl.deleteTexture(this._texture);\n        this._texture = gl.createTexture();\n\n        gl.activeTexture(gl.TEXTURE0);\n\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this._width, this._height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    }\n\n    private _width = 0;\n    private _height = 0;\n\n    private _widthFrom = 0;\n    private _heightFrom = 0;\n    private _widthTo = 0;\n    private _heightTo = 0;\n\n    private _texture: WebGLTexture = null;\n    private _program: Program = null;\n    private _framebuffer: WebGLFramebuffer = null;\n    private _vertexCoordinateBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _initialized = false;\n}\n\nexport default IntegerScalingProcessor;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Processor from './Processor';\nimport Program from './Program';\nimport { vsh, fsh } from './shader';\nimport { Capabilities } from './Capabilities';\n\nclass NtscProcessor implements Processor {\n    constructor(private _gl: WebGLRenderingContext, private _capabilities: Capabilities) {}\n\n    init(): void {\n        if (this._initialized) return;\n\n        const gl = this._gl;\n\n        gl.getExtension('WEBGL_color_buffer_float');\n        gl.getExtension('OES_texture_float');\n\n        this._programPass1 = Program.compile(\n            gl,\n            vsh.plain.source(this._capabilities),\n            fsh.ntscPass1.source(this._capabilities)\n        );\n        this._programPass2 = Program.compile(\n            gl,\n            vsh.plain.source(this._capabilities),\n            fsh.ntscPass2.source(this._capabilities)\n        );\n\n        this._programPass1.use();\n        this._programPass1.uniform1i(fsh.ntscPass1.uniform.textureUnit, 0);\n\n        this._programPass2.use();\n        this._programPass2.uniform1i(fsh.ntscPass2.uniform.textureUnit, 0);\n\n        this._framebuffer = gl.createFramebuffer();\n\n        this._vertexCoordinateBuffer = gl.createBuffer();\n        this._textureCoordinateBuffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);\n\n        this._initialized = true;\n    }\n\n    destroy(): void {\n        if (!this._initialized) return;\n\n        const gl = this._gl;\n\n        this._programPass1.delete();\n        this._programPass2.delete();\n\n        gl.deleteFramebuffer(this._framebuffer);\n\n        gl.deleteTexture(this._targetPass1);\n        gl.deleteTexture(this._targetPass2);\n\n        gl.deleteBuffer(this._vertexCoordinateBuffer);\n        gl.deleteBuffer(this._textureCoordinateBuffer);\n\n        this._initialized = false;\n    }\n\n    render(texture: WebGLTexture): void {\n        this._pass(texture, this._targetPass1, this._programPass1, 960);\n        this._pass(this._targetPass1, this._targetPass2, this._programPass2, 480);\n    }\n\n    getWidth(): number {\n        return 480;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    getTexture(): WebGLTexture {\n        return this._targetPass2;\n    }\n\n    resize(width: number, height: number): void {\n        if (!this._initialized) return;\n\n        if (width !== 160) {\n            throw new Error('NTSC postprocessor supports only for width = 160');\n        }\n\n        this._height = height;\n\n        const gl = this._gl;\n\n        if (this._targetPass1) gl.deleteTexture(this._targetPass1);\n        if (this._targetPass2) gl.deleteTexture(this._targetPass2);\n\n        this._targetPass1 = gl.createTexture();\n        this._targetPass2 = gl.createTexture();\n\n        gl.activeTexture(gl.TEXTURE0);\n\n        for (const texture of [this._targetPass1, this._targetPass2]) {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(\n                gl.TEXTURE_2D,\n                0,\n                gl.RGBA,\n                texture === this._targetPass2 ? 480 : 960,\n                height,\n                0,\n                gl.RGBA,\n                texture === this._targetPass1 ? this._textureType() : gl.UNSIGNED_BYTE,\n                null\n            );\n\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        }\n    }\n\n    configure(mode: NtscProcessor.mode) {\n        if (!this._initialized) return;\n\n        this._programPass1.use();\n\n        if (mode === NtscProcessor.mode.composite) {\n            this._programPass1.uniform1f(fsh.ntscPass1.uniform.artifacting, 1);\n            this._programPass1.uniform1f(fsh.ntscPass1.uniform.fringing, 1);\n        } else {\n            this._programPass1.uniform1f(fsh.ntscPass1.uniform.artifacting, 0);\n            this._programPass1.uniform1f(fsh.ntscPass1.uniform.fringing, 0);\n        }\n    }\n\n    private _pass(textureIn: WebGLTexture, textureOut: WebGLTexture, program: Program, width: number): void {\n        const gl = this._gl;\n\n        program.use();\n\n        program.bindVertexAttribArray(\n            vsh.plain.attribute.vertexPosition,\n            this._vertexCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        program.bindVertexAttribArray(\n            vsh.plain.attribute.textureCoordinate,\n            this._textureCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textureIn);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, textureOut, 0);\n\n        gl.viewport(0, 0, width, this._height);\n\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    private _textureType(): number {\n        const gl = this._gl;\n\n        if (this._capabilities.floatTextures) {\n            return gl.FLOAT;\n        }\n\n        if (this._capabilities.halfFloatTextures) {\n            return gl.getExtension('OES_texture_half_float').HALF_FLOAT_OES;\n        }\n\n        return gl.UNSIGNED_BYTE;\n    }\n\n    private _height = 0;\n\n    private _programPass1: Program = null;\n    private _programPass2: Program = null;\n    private _targetPass1: WebGLTexture = null;\n    private _targetPass2: WebGLTexture = null;\n    private _framebuffer: WebGLFramebuffer = null;\n    private _vertexCoordinateBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _initialized = false;\n}\n\nnamespace NtscProcessor {\n    export const enum mode {\n        composite = 'composite',\n        svideo = 'svideo',\n    }\n}\n\nexport default NtscProcessor;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Processor from './Processor';\nimport Program from './Program';\nimport { vsh, fsh } from './shader';\nimport { Capabilities } from './Capabilities';\n\nclass PhosphorProcessor implements Processor {\n    constructor(private _gl: WebGLRenderingContext, private _capabilities: Capabilities) {}\n\n    init(): void {\n        if (this._initialized) return;\n\n        const gl = this._gl;\n\n        this._framebuffer = gl.createFramebuffer();\n        this._program = Program.compile(\n            gl,\n            vsh.plain.source(this._capabilities),\n            fsh.phosphor.source(this._capabilities)\n        );\n\n        this._program.use();\n        this._program.uniform1i(fsh.phosphor.uniform.textureUnitNew, 0);\n        this._program.uniform1i(fsh.phosphor.uniform.textureUnitPrevious, 1);\n\n        this._vertexCoordinateBuffer = gl.createBuffer();\n        this._textureCoordinateBuffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);\n\n        this._initialized = true;\n    }\n\n    destroy(): void {\n        if (!this._initialized) return;\n\n        const gl = this._gl;\n\n        this._program.delete();\n        gl.deleteFramebuffer(this._framebuffer);\n        gl.deleteBuffer(this._vertexCoordinateBuffer);\n        gl.deleteBuffer(this._textureCoordinateBuffer);\n\n        if (this._texture0) gl.deleteTexture(this._texture0);\n        if (this._texture1) gl.deleteTexture(this._texture1);\n\n        this._initialized = false;\n    }\n\n    render(texture: WebGLTexture): void {\n        const gl = this._gl;\n\n        this._program.use();\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.vertexPosition,\n            this._vertexCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.textureCoordinate,\n            this._textureCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, this._texture0);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture1, 0);\n\n        gl.viewport(0, 0, this._width, this._height);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n        const t = this._texture1;\n        this._texture1 = this._texture0;\n        this._texture0 = t;\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    getTexture(): WebGLTexture {\n        return this._texture0;\n    }\n\n    resize(width: number, height: number): void {\n        if (!this._initialized) return;\n\n        this._width = width;\n        this._height = height;\n\n        const gl = this._gl;\n\n        if (this._texture0) gl.deleteTexture(this._texture0);\n        if (this._texture1) gl.deleteTexture(this._texture1);\n\n        this._texture0 = gl.createTexture();\n        this._texture1 = gl.createTexture();\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.viewport(0, 0, width, height);\n        gl.clearColor(0, 0, 0, 1);\n        gl.activeTexture(gl.TEXTURE0);\n\n        for (const texture of [this._texture0, this._texture1]) {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    configure(level: number) {\n        if (!this._initialized) return;\n\n        this._program.use();\n        this._program.uniform1f(fsh.phosphor.uniform.level, level);\n    }\n\n    private _width = 0;\n    private _height = 0;\n\n    private _texture0: WebGLTexture = null;\n    private _texture1: WebGLTexture = null;\n    private _framebuffer: WebGLFramebuffer = null;\n    private _program: Program = null;\n    private _vertexCoordinateBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _initialized = false;\n}\n\nexport default PhosphorProcessor;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nfunction compileShader(gl: WebGLRenderingContext, type: GLenum, source: string): WebGLShader {\n    const shader = gl.createShader(type);\n\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        throw new Error(`failed to compile shader:\\n\\n${gl.getShaderInfoLog(shader)}\\n\\n${source}`);\n    }\n\n    return shader;\n}\n\nclass Program {\n    private constructor(\n        private _gl: WebGLRenderingContext,\n        private _program: WebGLProgram,\n        private _vsh: WebGLShader,\n        private _fsh: WebGLShader\n    ) {}\n\n    static compile(\n        gl: WebGLRenderingContext,\n        vshSource: string,\n        fshSource: string,\n        layout: Record<string, number> = { a_VertexPosition: 0 }\n    ): Program {\n        const vsh = compileShader(gl, gl.VERTEX_SHADER, vshSource);\n        const fsh = compileShader(gl, gl.FRAGMENT_SHADER, fshSource);\n        const program = gl.createProgram();\n\n        for (const attrib of Object.keys(layout)) {\n            gl.bindAttribLocation(program, layout[attrib], attrib);\n        }\n\n        gl.attachShader(program, vsh);\n        gl.attachShader(program, fsh);\n        gl.linkProgram(program);\n\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            throw new Error(`failed to link program:\\n\\n${gl.getProgramInfoLog(program)}`);\n        }\n\n        return new Program(gl, program, vsh, fsh);\n    }\n\n    delete(): void {\n        const gl = this._gl;\n\n        gl.deleteProgram(this._program);\n        gl.deleteShader(this._vsh);\n        gl.deleteShader(this._fsh);\n    }\n\n    use(): void {\n        this._gl.useProgram(this._program);\n    }\n\n    getAttribLocation(name: string): number {\n        if (!this._attributeLocations.has(name)) {\n            const location = this._gl.getAttribLocation(this._program, name);\n\n            if (location < 0) {\n                throw new Error(`invalid attribute ${name}`);\n            }\n\n            this._attributeLocations.set(name, location);\n        }\n\n        return this._attributeLocations.get(name);\n    }\n\n    getUniformLocation(name: string): WebGLUniformLocation {\n        if (!this._uniformLocations.has(name)) {\n            const location = this._gl.getUniformLocation(this._program, name);\n\n            if (location === null) {\n                throw new Error(`invalid uniform ${name}`);\n            }\n\n            this._uniformLocations.set(name, location);\n        }\n\n        return this._uniformLocations.get(name);\n    }\n\n    bindVertexAttribArray(\n        attribute: string,\n        buffer: WebGLBuffer,\n        size: number,\n        type: number,\n        normalized: boolean,\n        stride: number,\n        offset: number\n    ): void {\n        const gl = this._gl;\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(this.getAttribLocation(attribute), size, type, normalized, stride, offset);\n        gl.enableVertexAttribArray(this.getAttribLocation(attribute));\n    }\n\n    uniform1i(uniform: string, value: number) {\n        this._gl.uniform1i(this.getUniformLocation(uniform), value);\n    }\n\n    uniform1f(uniform: string, value: number) {\n        this._gl.uniform1f(this.getUniformLocation(uniform), value);\n    }\n\n    private _attributeLocations = new Map<string, number>();\n    private _uniformLocations = new Map<string, WebGLUniformLocation>();\n}\n\nexport default Program;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Processor from './Processor';\nimport Program from './Program';\nimport { fsh, vsh } from './shader';\nimport { Capabilities } from './Capabilities';\n\nclass ScanlineProcessor implements Processor {\n    constructor(private _gl: WebGLRenderingContext, private _capabilities: Capabilities) {}\n\n    init(): void {\n        if (this._initialized) return;\n\n        const gl = this._gl;\n\n        this._framebuffer = gl.createFramebuffer();\n        this._program = Program.compile(\n            gl,\n            vsh.plain.source(this._capabilities),\n            fsh.scanlines.source(this._capabilities)\n        );\n\n        this._program.use();\n        this._program.uniform1i(fsh.scanlines.uniform.textureUnit, 0);\n\n        this._vertexCoordinateBuffer = gl.createBuffer();\n        this._textureCoordinateBuffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, -1, 1, 1, -1, -1, -1]), gl.STATIC_DRAW);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._textureCoordinateBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);\n\n        this._initialized = true;\n    }\n\n    destroy(): void {\n        if (!this._initialized) return;\n\n        const gl = this._gl;\n\n        this._program.delete();\n        gl.deleteFramebuffer(this._framebuffer);\n        gl.deleteBuffer(this._vertexCoordinateBuffer);\n        gl.deleteBuffer(this._textureCoordinateBuffer);\n\n        if (this._texture) gl.deleteTexture(this._texture);\n\n        this._initialized = false;\n    }\n\n    render(texture: WebGLTexture): void {\n        const gl = this._gl;\n\n        this._program.use();\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.vertexPosition,\n            this._vertexCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        this._program.bindVertexAttribArray(\n            vsh.plain.attribute.textureCoordinate,\n            this._textureCoordinateBuffer,\n            2,\n            gl.FLOAT,\n            false,\n            0,\n            0\n        );\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._texture, 0);\n\n        gl.viewport(0, 0, this._width, 2 * this._height);\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return 2 * this._height;\n    }\n\n    getTexture(): WebGLTexture {\n        return this._texture;\n    }\n\n    resize(width: number, height: number): void {\n        if (!this._initialized) return;\n\n        this._width = width;\n        this._height = height;\n\n        const gl = this._gl;\n\n        if (this._texture) gl.deleteTexture(this._texture);\n        this._texture = gl.createTexture();\n\n        gl.activeTexture(gl.TEXTURE0);\n\n        gl.bindTexture(gl.TEXTURE_2D, this._texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, 2 * height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n        this._program.use();\n        this._program.uniform1f(fsh.scanlines.uniform.height, 2 * this._height);\n    }\n\n    configure(level: number): void {\n        if (!this._initialized) return;\n\n        this._program.use();\n        this._program.uniform1f(fsh.scanlines.uniform.level, 1 - level);\n    }\n\n    private _width = 0;\n    private _height = 0;\n\n    private _texture: WebGLTexture = null;\n    private _program: Program = null;\n    private _framebuffer: WebGLFramebuffer = null;\n    private _vertexCoordinateBuffer: WebGLBuffer = null;\n    private _textureCoordinateBuffer: WebGLBuffer = null;\n\n    private _initialized = false;\n}\n\nexport default ScanlineProcessor;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Capabilities } from './Capabilities';\n\nfunction precisionFsh(capabilities: Capabilities): string {\n    return `precision ${capabilities.highpInVsh ? 'highp' : 'mediump'} float;`;\n}\n\nfunction precisionVsh(capabilities: Capabilities): string {\n    return `precision ${capabilities.highpInVsh ? 'highp' : 'mediump'} float;`;\n}\n\nexport namespace vsh {\n    export namespace plain {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionVsh(capabilities)}\n\n            attribute vec2 a_VertexPosition;\n            attribute vec2 a_TextureCoordinate;\n\n            varying vec2 v_TextureCoordinate;\n\n            void main() {\n                v_TextureCoordinate = a_TextureCoordinate;\n                gl_Position = vec4(a_VertexPosition, 0, 1);\n            }\n        `;\n\n        export const enum attribute {\n            vertexPosition = 'a_VertexPosition',\n            textureCoordinate = 'a_TextureCoordinate',\n        }\n    }\n}\n\nexport namespace fsh {\n    export namespace blit {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            varying vec2 v_TextureCoordinate;\n\n            uniform sampler2D u_Sampler0;\n\n            void main() {\n                gl_FragColor = vec4(texture2D(u_Sampler0, v_TextureCoordinate).rgb, 1.0);\n            }\n        `;\n\n        export const enum uniform {\n            textureUnit = 'u_Sampler0',\n        }\n    }\n\n    export namespace blitWithGamma {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            varying vec2 v_TextureCoordinate;\n\n            uniform sampler2D u_Sampler0;\n            uniform float u_Gamma;\n\n            void main() {\n                vec4 texel = texture2D(u_Sampler0, v_TextureCoordinate);\n\n                gl_FragColor = vec4(pow(texel.rgb, vec3(u_Gamma)), 1.);\n            }\n        `;\n\n        export const enum uniform {\n            textureUnit = 'u_Sampler0',\n            gamma = 'u_Gamma',\n        }\n    }\n\n    export namespace phosphor {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            varying vec2 v_TextureCoordinate;\n\n            uniform float u_PhosphorLevel;\n            uniform sampler2D u_Sampler_NewImage;\n            uniform sampler2D u_Sampler_PreviousImage;\n\n            float applyPhosphor(float new, float previous) {\n                float decayed = previous * u_PhosphorLevel;\n                decayed = step(0.5, (previous - decayed) * 255.0) * decayed;\n\n                return max(new, decayed);\n            }\n\n            void main() {\n                vec4 new = texture2D(u_Sampler_NewImage, v_TextureCoordinate);\n                vec4 previous = texture2D(u_Sampler_PreviousImage, v_TextureCoordinate);\n\n                gl_FragColor = vec4(\n                    applyPhosphor(new.r, previous.r),\n                    applyPhosphor(new.g, previous.g),\n                    applyPhosphor(new.b, previous.b),\n                    1.0\n                );\n            }\n        `;\n\n        export const enum uniform {\n            level = 'u_PhosphorLevel',\n            textureUnitNew = 'u_Sampler_NewImage',\n            textureUnitPrevious = 'u_Sampler_PreviousImage',\n        }\n    }\n\n    export namespace ntscPass1 {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            #define PI 3.14159265\n\n            #define CHROMA_MOD_FREQ (PI / 3.0)\n\n            #define SATURATION 1.0\n            #define BRIGHTNESS 1.0\n\n            uniform sampler2D u_Sampler0;\n            uniform float u_Fringing;\n            uniform float u_Artifacting;\n\n            varying vec2 v_TextureCoordinate;\n\n            const mat3 yiq_mat = mat3(\n                0.2989, 0.5870, 0.1140,\n                0.5959, -0.2744, -0.3216,\n                0.2115, -0.5229, 0.3114\n            );\n\n            vec3 rgb2yiq(vec3 col) {\n                return col * yiq_mat;\n            }\n\n            ${\n                capabilities.floatTextures || capabilities.halfFloatTextures\n                    ? ''\n                    : `\n                vec4 pack(vec3 yiq) {\n                    yiq += 1.2;\n                    yiq /= 3.4;\n\n                    int y_byte = int(yiq.r * 1024.0);\n                    int i_byte = int(yiq.g * 1024.0);\n                    int q_byte = int(yiq.b * 1024.0);\n\n                    int y_high = (y_byte / 4) * 4;\n                    int i_high = (i_byte / 4) * 4;\n                    int q_high = (q_byte / 4) * 4;\n                    int alpha = (q_byte - q_high) * 16 + (i_byte - i_high) * 4 + (y_byte - y_high);\n\n                    return vec4(\n                        float(y_high / 4) / 255.0,\n                        float(i_high / 4) / 255.0,\n                        float(q_high / 4) / 255.0,\n                        float(alpha) / 255.0\n                    );\n                }\n                `\n            }\n\n            void main() {\n                mat3 mix_mat = mat3(\n                    BRIGHTNESS, u_Fringing, u_Fringing,\n                    u_Artifacting, 2.0 * SATURATION, 0.0,\n                    u_Artifacting, 0.0, 2.0 * SATURATION\n                );\n\n                vec3 col = texture2D(u_Sampler0, v_TextureCoordinate).rgb;\n                vec3 yiq = rgb2yiq(col);\n\n                float mod_phase = v_TextureCoordinate.x * 960.0 * CHROMA_MOD_FREQ;\n\n                float i_mod = cos(mod_phase);\n                float q_mod = sin(mod_phase);\n\n                yiq.yz *= vec2(i_mod, q_mod); // Modulate.\n                yiq *= mix_mat; // Cross-talk.\n                yiq.yz *= vec2(i_mod, q_mod); // Demodulate.\n\n                gl_FragColor = ${\n                    capabilities.floatTextures || capabilities.halfFloatTextures ? 'vec4(yiq, 1.0)' : 'pack(yiq)'\n                };\n            }\n        `;\n\n        export const enum uniform {\n            textureUnit = 'u_Sampler0',\n            artifacting = 'u_Artifacting',\n            fringing = 'u_Fringing',\n        }\n    }\n\n    export namespace ntscPass2 {\n        const lumaFilter = [\n            0.00001202,\n            0.000022146,\n            0.000013155,\n            0.00001202,\n            0.000049979,\n            0.00011394,\n            0.00012215,\n            0.000005612,\n            0.000170516,\n            0.000237199,\n            0.00016964,\n            0.000285688,\n            0.000984574,\n            0.002018683,\n            0.002002275,\n            -0.000909882,\n            -0.007049081,\n            -0.01322286,\n            -0.012606931,\n            0.00246086,\n            0.035868225,\n            0.084016453,\n            0.1355635,\n            0.175261268,\n            0.190176552,\n        ];\n\n        const chromaFilter = [\n            0.000118847,\n            0.000271306,\n            0.000502642,\n            0.000930833,\n            0.001451013,\n            0.002064744,\n            0.002700432,\n            0.003241276,\n            0.003524948,\n            -0.003350284,\n            -0.002491729,\n            -0.000721149,\n            0.002164659,\n            0.006313635,\n            0.011789103,\n            0.01854566,\n            0.026414396,\n            0.03510071,\n            0.044196567,\n            0.053207202,\n            0.061590275,\n            0.068803602,\n            0.074356193,\n            0.077856564,\n            0.079052396,\n        ];\n\n        function maybeUnpack(capabilities: Capabilities, expr: string): string {\n            return capabilities.floatTextures || capabilities.halfFloatTextures ? `${expr}.rgb` : `unpack(${expr})`;\n        }\n\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            uniform sampler2D u_Sampler0;\n            varying vec2 v_TextureCoordinate;\n\n            const mat3 yiq2rgb_mat = mat3(\n                1.0, 0.956, 0.6210,\n                1.0, -0.2720, -0.6474,\n                1.0, -1.1060, 1.7046\n            );\n\n            vec3 yiq2rgb(vec3 yiq) {\n                return yiq * yiq2rgb_mat;\n            }\n\n            ${\n                capabilities.floatTextures || capabilities.halfFloatTextures\n                    ? ''\n                    : `\n                vec3 unpack(vec4 yiqPacked) {\n                    int y_high = int(yiqPacked.r * 1024.0);\n                    int i_high = int(yiqPacked.g * 1024.0);\n                    int q_high = int(yiqPacked.b * 1024.0);\n                    int alpha = int(yiqPacked.a * 256.0);\n\n                    int y_low = alpha - (alpha / 4) * 4;\n                    int i_low = alpha - y_low - (alpha / 16) * 16;\n                    int q_low = alpha - i_low - y_low;\n\n                    return vec3(\n                        float(y_high + y_low) / 1023.0,\n                        float(i_high + i_low) / 1023.0,\n                        float(q_high + q_low) / 1023.0\n                    ) * 3.4 - 1.2;\n                }\n                `\n            }\n\n            vec3 fetch_offset(int offset) {\n                float x = (floor(v_TextureCoordinate.x * 960.0) + 0.5 + float(offset)) / 960.0;\n\n                return step(0.0, x) * step(-1.0, -x) *\n                    ${maybeUnpack(capabilities, 'texture2D(u_Sampler0, vec2(x, v_TextureCoordinate.y))')};\n            }\n\n            void main() {\n                float one_x = 1.0 / 960.0;\n                vec3 signal = vec3(0.0);\n\n                ${new Array(24)\n                    .fill(0)\n                    .map(\n                        (_, i) => `\n                signal +=\n                    (fetch_offset(${i - 24}) + fetch_offset(${24 - i})) *\n                        vec3(${lumaFilter[i]}, ${chromaFilter[i]}, ${chromaFilter[i]});\n                `\n                    )\n                    .join('\\n')}\n\n                signal += ${maybeUnpack(capabilities, 'texture2D(u_Sampler0, v_TextureCoordinate)')} *\n                    vec3(${lumaFilter[24]}, ${chromaFilter[24]}, ${chromaFilter[24]});\n\n                vec3 rgb = yiq2rgb(signal);\n                gl_FragColor = vec4(rgb, 1.0);\n            }\n        `;\n\n        export const enum uniform {\n            textureUnit = 'u_Sampler0',\n        }\n    }\n\n    export namespace scanlines {\n        export const source = (capabilities: Capabilities) => `\n            ${precisionFsh(capabilities)}\n\n            uniform sampler2D u_Sampler0;\n            uniform float u_Level;\n            uniform float u_Height;\n\n            varying vec2 v_TextureCoordinate;\n\n            void main() {\n                vec3 texel = texture2D(u_Sampler0, v_TextureCoordinate).rgb;\n\n                gl_FragColor = vec4(\n                    (step(1.0, mod(v_TextureCoordinate.y * u_Height, 2.0)) * (1.0 - u_Level) + u_Level) * texel, 1.0);\n            }\n        `;\n\n        export const enum uniform {\n            textureUnit = 'u_Sampler0',\n            level = 'u_Level',\n            height = 'u_Height',\n        }\n    }\n}\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Switch from './Switch';\nimport SwitchProxy from './SwitchProxy';\nimport ControlPanel from './ControlPanel';\nimport StellaControlPanel from '../../../machine/stella/ControlPanelInterface';\n\nclass ControlPanelProxy implements ControlPanel {\n    bind(controlPanel: StellaControlPanel): void {\n        this.unbind();\n\n        this._boundControlPanel = controlPanel;\n\n        this._reset.bind(this._boundControlPanel.getResetButton());\n        this._select.bind(this._boundControlPanel.getSelectSwitch());\n        this._difficultyPlayer1.bind(this._boundControlPanel.getDifficultySwitchP0());\n        this._difficultyPlayer2.bind(this._boundControlPanel.getDifficultySwitchP1());\n        this._color.bind(this._boundControlPanel.getColorSwitch());\n\n        this._difficultyPlayer1.toggle(true);\n        this._difficultyPlayer2.toggle(true);\n    }\n\n    unbind(): void {\n        if (!this._boundControlPanel) {\n            return;\n        }\n\n        this._reset.unbind();\n        this._select.unbind();\n        this._difficultyPlayer1.unbind();\n        this._difficultyPlayer2.unbind();\n        this._color.unbind();\n\n        this._boundControlPanel = null;\n    }\n\n    reset(): Switch {\n        return this._reset;\n    }\n\n    select(): Switch {\n        return this._select;\n    }\n\n    difficultyPlayer1(): Switch {\n        return this._difficultyPlayer1;\n    }\n\n    difficultyPlayer2(): Switch {\n        return this._difficultyPlayer2;\n    }\n\n    color(): Switch {\n        return this._color;\n    }\n\n    private _reset = new SwitchProxy();\n    private _select = new SwitchProxy();\n    private _difficultyPlayer1 = new SwitchProxy();\n    private _difficultyPlayer2 = new SwitchProxy();\n    private _color = new SwitchProxy();\n\n    private _boundControlPanel: StellaControlPanel = null;\n}\n\nexport { ControlPanelProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Mutex } from 'async-mutex';\nimport { EventInterface as Event, Event as EventImplementation } from 'microevent.ts';\n\nimport EmulationServiceInterface from '../../stella/service/EmulationServiceInterface';\nimport EmulationService from '../../stella/service/worker/EmulationService';\nimport DriverManager from '../../stella/service/DriverManager';\n\nimport VideoDriver from '../../driver/Video';\n\nimport AudioDriver from '../../stella/driver/WebAudio';\nimport KeyboardIO from '../../stella/driver/KeyboardIO';\nimport TouchIO from '../../stella/driver/TouchIO';\nimport Paddle from '../../driver/MouseAsPaddle';\nimport Gamepad from '../../driver/Gamepad';\nimport FullscreenDriver from '../../driver/FullscreenVideo';\n\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport StellaConfig from '../../../machine/stella/Config';\n\nimport { decode as decodeBase64 } from '../../../tools/base64';\n\nimport ControlPanel from './ControlPanel';\nimport ControlPanelProxy from './ControlPanelProxy';\nimport { Target } from '../../driver/gamepad/Mapping';\nimport CpuFactory from '../../../machine/cpu/Factory';\nimport AsyncIO from '../../driver/AsyncIO';\n\nfunction cpuType(config = Stellerator.CpuAccuracy.cycle): CpuFactory.Type {\n    switch (config) {\n        case Stellerator.CpuAccuracy.cycle:\n            return CpuFactory.Type.stateMachine;\n\n        case Stellerator.CpuAccuracy.instruction:\n            return CpuFactory.Type.batchedAccess;\n\n        default:\n            throw new Error(`invalid CPU Accuracy: ${config}`);\n    }\n}\n\n/**\n * The stellerator class and namespace. In a typical application, a single instance is\n * created and bound to a canvas element. This instance can than be used to run many\n * different ROMs during its lifetime.\n *\n * Notes on reading this documentation:\n * * All code examples are ES6\n * * The actual emulation runs on a web worker, and all methods that control emulation\n *   are asynchronous and return [ES6 Promises](http://exploringjs.com/es6/ch_promises.html)\n * * Check out the [microevent.ts](https://github.com/DirtyHairy/microevent) documentation\n *   for the event API\n *\n * Basic example:\n * ```typescript\n *     const stellerator = new Stellerator(\n *         document.getElementById('stellerator-canvas'),\n *         'js/stellerator_worker.js'\n *     );\n *\n *     stellerator.run(rom, Stellerator.TvMode.ntsc);\n * ```\n */\nexport class Stellerator {\n    /**\n     * Creates an instance of Stellerator.\n     * @param canvasElt The canvas element that is used to display the TIA image.\n     * The `height` and `width` attributes of the canvas will be automatically\n     * maintained by Stellerator, so there is not requirement to set those to\n     * specific values.\n     *\n     * @param workerUrl The URL from which the web worker will be loaded.\n     * In order to avoid cross domain issues, the worker should be hosted on the same\n     * domain as the stellerator build, and this parameter should read e.g.\n     * `js/stellerator_worker.js`\n     *\n     * @param config Optional configuration to\n     * customize emulator behavior. See [[Config]] for a full explanation of the values\n     * and their default.\n     */\n    constructor(\n        canvasElt: HTMLCanvasElement | null = null,\n        workerUrl: string,\n        config: Partial<Stellerator.Config> = {}\n    ) {\n        this._canvasElt = canvasElt;\n\n        this._config = {\n            gamma: 1,\n            scalingMode: Stellerator.ScalingMode.qis,\n            tvEmulation: Stellerator.TvEmulation.svideo,\n            phosphorLevel: 0.5,\n            scanlineLevel: 0.2,\n            audio: true,\n            volume: 0.5,\n            enableKeyboard: true,\n            enableTouch: true,\n            touchLeftHanded: false,\n            touchJoystickSensitivity: 15,\n            keyboardTarget: document,\n            fullscreenViaKeyboard: true,\n            paddleViaMouse: true,\n            pauseViaKeyboard: true,\n            pauseViaTouch: true,\n            fullscreenViaTouch: true,\n            enableGamepad: true,\n            resetViaKeyboard: true,\n\n            ...config,\n        };\n\n        this._emulationService = new EmulationService(workerUrl);\n\n        this.frequencyUpdate = this._emulationService.frequencyUpdate;\n\n        const stateChange = new EventImplementation<Stellerator.State>();\n        this._emulationService.stateChanged.addHandler((newState) => stateChange.dispatch(this._mapState(newState)));\n        this.stateChange = stateChange;\n\n        this._createDrivers();\n\n        this._driverManager.addDriver(this._controlPanel, (context) =>\n            this._controlPanel.bind(context.getControlPanel())\n        );\n        this._driverManager.bind(this._emulationService);\n\n        this._serviceInitialized = this._emulationService.init().then(undefined, (e) => {\n            console.log(e);\n            throw e;\n        });\n    }\n\n    /**\n     * Set the gamma correction factor. Will take effect **only** if WebGL is available.\n     *\n     * @param gamma\n     */\n    setGamma(gamma: number): this {\n        this._config.gamma = gamma;\n        this._createVideoDriver();\n\n        return this;\n    }\n\n    /**\n     * Query the current gamme correction factor.\n     *\n     * @returns {number}\n     */\n    getGamma(): number {\n        return this._config.gamma;\n    }\n\n    /**\n     * Configures the scaling mode.\n     *\n     * @param scalingMode\n     */\n    setScalingMode(scalingMode: Stellerator.ScalingMode): this {\n        this._config.scalingMode = scalingMode;\n        this._createVideoDriver();\n\n        return this;\n    }\n\n    /**\n     * Query the current scaling mode.\n     */\n    getScalingMode(): Stellerator.ScalingMode {\n        return this._config.scalingMode;\n    }\n\n    /**\n     * Configures the TV emulation mode.\n     *\n     * @param tvEmulation\n     */\n    setTvEmulation(tvEmulation: Stellerator.TvEmulation): this {\n        this._config.tvEmulation = tvEmulation;\n        this._createVideoDriver();\n\n        return this;\n    }\n\n    /**\n     * Query the current TV emulation mode.\n     */\n    getTvEmulation(): Stellerator.TvEmulation {\n        return this._config.tvEmulation;\n    }\n\n    /**\n     * Configure the phosphore level.\n     *\n     * @param phosphorLevel\n     */\n    setPhosphorLevel(phosphorLevel: number): this {\n        this._config.phosphorLevel = phosphorLevel;\n        this._createVideoDriver();\n\n        return this;\n    }\n\n    /**\n     * Query the current phosphor level\n     */\n    getPhosphorLevel(): number {\n        return this._config.phosphorLevel;\n    }\n\n    /**\n     * Configure the scanline level.\n     *\n     * @param scanlineLevel\n     */\n    setScanlineLevel(scanlineLevel: number): this {\n        this._config.scanlineLevel = scanlineLevel;\n        this._createVideoDriver();\n\n        return this;\n    }\n\n    /**\n     * Query the current scanline level.\n     */\n    getScanlineLevel(): number {\n        return this._config.scanlineLevel;\n    }\n\n    /**\n     * Enable / disable fullscreen mode.\n     *\n     * @param fullscreen\n     * @returns {this}\n     */\n    toggleFullscreen(fullscreen?: boolean): this {\n        if (!this._fullscreenVideo) {\n            return this;\n        }\n\n        if (typeof fullscreen === 'undefined') {\n            this._fullscreenVideo.toggle();\n        } else {\n            fullscreen ? this._fullscreenVideo.engage() : this._fullscreenVideo.disengage();\n        }\n\n        return this;\n    }\n\n    /**\n     * Query if emulator is running fullscreen.\n     *\n     * @returns {boolean}\n     */\n    isFullscreen(): boolean {\n        return this._fullscreenVideo ? this._fullscreenVideo.isEngaged() : false;\n    }\n\n    /**\n     * Change the master volume.\n     *\n     * @param volume Will be clipped to the range 0 .. 1\n     * @returns {this}\n     */\n    setVolume(volume: number): this {\n        if (this._audioDriver) {\n            this._audioDriver.setMasterVolume(Math.max(Math.min(volume, 1), 0));\n        }\n\n        return this;\n    }\n\n    /**\n     * Query whether audio has been enabled on this instance.\n     *\n     * @returns {boolean}\n     */\n    audioEnabled(): boolean {\n        return !!this._audioDriver;\n    }\n\n    /**\n     * Query the master volume.\n     *\n     * @returns {number}\n     */\n    getVolume(): number {\n        return this._audioDriver ? this._audioDriver.getMasterVolume() : 0;\n    }\n\n    /**\n     * Notify the video driver of a change of the visible dimensions (client size) of\n     * the canvas element. This will cause the driver to adjust the resolution to match.\n     */\n    resize(): this {\n        if (this._videoDriver) {\n            this._videoDriver.resize();\n        }\n\n        return this;\n    }\n\n    /**\n     * Query the current state of the emulation.\n     *\n     * @returns {Stellerator.State}\n     */\n    getState(): Stellerator.State {\n        return this._state;\n    }\n\n    /**\n     * Get the console control panel. This allows you to monitor and control\n     * the console switches (select, reset, difficulty P1 / P2, color / BW).\n     */\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    /**\n     * Trigger a keyboard action by name.\n     */\n    triggerKeydownAction(name: string) {\n        this._keyboardIO.triggerAction(KeyboardIO.Actions[name], true);\n    }\n\n    /**\n     * Trigger a keyboard action by name.\n     */\n    triggerKeyupAction(name: string) {\n        this._keyboardIO.triggerAction(KeyboardIO.Actions[name], false);\n    }\n\n    setCanvas(canvas: HTMLCanvasElement): this {\n        this._canvasElt = canvas;\n\n        this._createVideoDriver();\n        this._createTouchDriver();\n\n        return this;\n    }\n\n    releaseCanvas(): this {\n        this._removeVideoDriver();\n        this._removeTouchDriver();\n\n        this._canvasElt = null;\n\n        return this;\n    }\n\n    /**\n     * Start emulation of a cartridge image. This method is **async** and returns\n     * a promise for the resulting emulation state.\n     *\n     * **IMPORTANT:** The emulator will start up in [[State.paused]] mode. Use the `run` method\n     * below in order to start and run the emulation immediatelly.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    start(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        return this._mutex.runExclusive(async () => {\n            if (typeof cartridge === 'string') {\n                cartridge = decodeBase64(cartridge);\n            }\n\n            const stellaConfig = StellaConfig.create({\n                tvMode: this._convertTvMode(tvMode),\n                pcmAudio: true,\n            });\n\n            if (typeof config.randomSeed !== 'undefined' && config.randomSeed > 0) {\n                stellaConfig.randomSeed = config.randomSeed;\n            }\n\n            if (typeof config.emulatePaddles !== 'undefined') {\n                stellaConfig.emulatePaddles = config.emulatePaddles;\n            }\n\n            if (typeof config.controllerPort0 !== 'undefined') {\n                stellaConfig.controllerPort0 = this._convertControllerType(config.controllerPort0);\n            }\n\n            if (typeof config.controllerPort1 !== 'undefined') {\n                stellaConfig.controllerPort1 = this._convertControllerType(config.controllerPort1);\n            }\n\n            if (typeof config.frameStart !== 'undefined') {\n                stellaConfig.frameStart = config.frameStart;\n            }\n\n            stellaConfig.cpuType = cpuType(config.cpuAccuracy);\n\n            if (stellaConfig.controllerPort0 === StellaConfig.ControllerType.keypad) {\n                this._keyboardIO.overlay(KeyboardIO.keypad0Mappings);\n            }\n\n            if (stellaConfig.controllerPort1 === StellaConfig.ControllerType.keypad) {\n                this._keyboardIO.overlay(KeyboardIO.keypad1Mappings);\n            }\n\n            await this._serviceInitialized;\n\n            return (this._state = this._mapState(\n                await this._emulationService.start(\n                    cartridge,\n                    { ...stellaConfig, asyncIO: config.asyncIO },\n                    config.cartridgeType\n                )\n            ));\n        });\n    }\n\n    /**\n     * Like [[start]], but run the emulator immediatelly instead of starting\n     * in paused mode.\n     *\n     * Just like its counterpart, this method is **async** and returns a promise\n     * for the resulting emualtion state.\n     *\n     * @param cartridge The cartridge image. Can be either\n     * an array / typed array of byte values or a base64 encoded string.\n     *\n     * @param tvMode The TV mode (NTSC / PAL / SECAM)\n     *\n     * @param config Optional configuration\n     * values to customize emulation behavior. See [[CartridgeConfig]] for a full list of supported\n     * settings and their defaults.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async run(\n        cartridge: ArrayLike<number> | string,\n        tvMode: Stellerator.TvMode,\n        config: Partial<Stellerator.CartridgeConfig> = {}\n    ): Promise<Stellerator.State> {\n        if ((await this.start(cartridge, tvMode, config)) === Stellerator.State.paused) {\n            return this.resume();\n        }\n    }\n\n    /**\n     * Pause a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async pause(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.pause()))\n        );\n    }\n\n    /**\n     * Resume a paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async resume(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.resume()))\n        );\n    }\n\n    /**\n     * Stop a running or paused emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async stop(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.stop()))\n        );\n    }\n\n    /**\n     * Reset a running emulation session. This method is **async** and returns a\n     * promise for the resulting emulation state.\n     *\n     * @returns {Promise<Stellerator.State>}\n     */\n    async reset(): Promise<Stellerator.State> {\n        await this._serviceInitialized;\n\n        return this._mutex.runExclusive(\n            async () => (this._state = this._mapState(await this._emulationService.reset()))\n        );\n    }\n\n    /**\n     * Retrieve the last emulation error.\n     *\n     * **IMPORTANT:** Don't use this to check whether an error occurred; use [[getState]]\n     * and check for [[State.error]] instead.\n     *\n     * @returns {Error}\n     */\n    lastError(): Error {\n        return this._emulationService.getLastError();\n    }\n\n    asyncIOSend(message: ArrayLike<number>): this {\n        this._asyncIO.send(message);\n\n        return this;\n    }\n\n    private _convertTvMode(tvMode: Stellerator.TvMode): StellaConfig.TvMode {\n        switch (tvMode) {\n            case Stellerator.TvMode.ntsc:\n                return StellaConfig.TvMode.ntsc;\n\n            case Stellerator.TvMode.pal:\n                return StellaConfig.TvMode.pal;\n\n            case Stellerator.TvMode.secam:\n                return StellaConfig.TvMode.secam;\n\n            default:\n                throw new Error(`invalid TV mode '${tvMode}'`);\n        }\n    }\n\n    private _convertControllerType(controllerType: Stellerator.ControllerType): StellaConfig.ControllerType {\n        switch (controllerType) {\n            case Stellerator.ControllerType.joystick:\n                return StellaConfig.ControllerType.joystick;\n\n            case Stellerator.ControllerType.paddles:\n                return StellaConfig.ControllerType.paddles;\n\n            case Stellerator.ControllerType.keypad:\n                return StellaConfig.ControllerType.keypad;\n\n            default:\n                throw new Error(`invalid controller type '${controllerType}'`);\n        }\n    }\n\n    private _createDrivers(): void {\n        this._createVideoDriver();\n\n        if (this._config.audio) {\n            try {\n                this._audioDriver = new AudioDriver();\n                this._audioDriver.init();\n                this._audioDriver.setMasterVolume(this._config.volume);\n\n                this._driverManager.addDriver(this._audioDriver, (context) =>\n                    this._audioDriver.bind(true, [context.getPCMChannel()])\n                );\n\n                this._emulationService.stateChanged.addHandler((newState) => {\n                    switch (newState) {\n                        case EmulationServiceInterface.State.running:\n                            this._audioDriver.resume();\n                            break;\n\n                        default:\n                            this._audioDriver.pause();\n                            break;\n                    }\n                });\n            } catch (e) {\n                console.error(`failed to initialize audio: ${e && e.message}`);\n            }\n        }\n\n        this._createTouchDriver();\n\n        if (this._config.enableKeyboard) {\n            this._keyboardIO = new KeyboardIO(this._config.keyboardTarget);\n\n            this._driverManager.addDriver(this._keyboardIO, (context) =>\n                this._keyboardIO.bind(\n                    context.getJoystick(0),\n                    context.getJoystick(1),\n                    context.getKeypad(0),\n                    context.getKeypad(1),\n                    context.getControlPanel())\n            );\n\n            if (this._config.fullscreenViaKeyboard) {\n                this._keyboardIO.toggleFullscreen.addHandler(\n                    () => this._fullscreenVideo && this._fullscreenVideo.toggle()\n                );\n            }\n\n            if (this._config.pauseViaKeyboard) {\n                this._keyboardIO.togglePause.addHandler(this._pauseHandler);\n            }\n\n            if (this._config.resetViaKeyboard) {\n                this._keyboardIO.hardReset.addHandler(() => this.reset());\n            }\n        }\n\n        if (this._config.enableGamepad) {\n            this._gamepad = new Gamepad();\n            this._gamepad.init();\n\n            this._driverManager.addDriver(this._gamepad, (context) =>\n                this._gamepad.bind([context.getJoystick(0), context.getJoystick(1)], {\n                    [Target.start]: context.getControlPanel().getResetButton(),\n                    [Target.select]: context.getControlPanel().getSelectSwitch(),\n                })\n            );\n        }\n\n        if (this._config.paddleViaMouse) {\n            this._paddle = new Paddle();\n\n            this._driverManager.addDriver(this._paddle, (context) => this._paddle.bind(context.getPaddle(0)));\n        }\n\n        this._asyncIO = new AsyncIO();\n        this.asyncIOMessage = this._asyncIO.message;\n        this._driverManager.addDriver(this._asyncIO, (context, driver: AsyncIO) => driver.bind(context.getAsyncIO()));\n    }\n\n    private _removeVideoDriver(): void {\n        if (!this._videoDriver) {\n            return;\n        }\n\n        this._videoDriver.unbind();\n\n        this._driverManager.removeDriver(this._videoDriver);\n\n        this._fullscreenVideo.disengage();\n\n        this._fullscreenVideo = null;\n        this._videoDriver = null;\n    }\n\n    private _createVideoDriver(): void {\n        if (this._videoDriver) {\n            this._removeVideoDriver();\n        }\n\n        if (!this._canvasElt) {\n            return;\n        }\n\n        // FIXME: configuration\n        this._videoDriver = new VideoDriver(this._canvasElt, {\n            gamma: this._config.gamma,\n            scalingMode: this._config.scalingMode as any,\n            tvEmulation: this._config.tvEmulation as any,\n            phosphorLevel: this._config.phosphorLevel,\n            scanlineLevel: this._config.scanlineLevel,\n        }).init();\n\n        this._driverManager.addDriver(this._videoDriver, (context) => this._videoDriver.bind(context.getVideo()));\n\n        this._fullscreenVideo = new FullscreenDriver(this._videoDriver);\n    }\n\n    private _removeTouchDriver() {\n        if (!this._touchIO) {\n            return;\n        }\n\n        this._touchIO.unbind();\n\n        this._driverManager.removeDriver(this._touchIO);\n\n        this._touchIO = null;\n    }\n\n    private _createTouchDriver() {\n        if (this._touchIO) {\n            this._removeTouchDriver();\n        }\n        if (this._config.enableTouch) {\n            this._touchIO = new TouchIO(\n                this._canvasElt,\n                this._config.touchJoystickSensitivity,\n                this._config.touchLeftHanded\n            );\n\n            this._driverManager.addDriver(this._touchIO, (context) =>\n                this._touchIO.bind(context.getJoystick(0), context.getControlPanel())\n            );\n\n            if (this._config.pauseViaTouch) {\n                this._touchIO.togglePause.addHandler(this._pauseHandler);\n            }\n\n            if (this._config.fullscreenViaTouch) {\n                this._touchIO.toggleFullscreen.addHandler(\n                    () => this._fullscreenVideo && this._fullscreenVideo.toggle()\n                );\n            }\n        }\n    }\n\n    private _mapState(state: EmulationServiceInterface.State): Stellerator.State {\n        switch (state) {\n            case EmulationServiceInterface.State.stopped:\n                return Stellerator.State.stopped;\n\n            case EmulationServiceInterface.State.running:\n                return Stellerator.State.running;\n\n            case EmulationServiceInterface.State.paused:\n                return Stellerator.State.paused;\n\n            case EmulationServiceInterface.State.error:\n                return Stellerator.State.error;\n\n            default:\n                throw new Error('cannot happen');\n        }\n    }\n\n    private _pauseHandler: () => void = () => {\n        switch (this._emulationService.getState()) {\n            case EmulationServiceInterface.State.paused:\n                this.resume();\n                break;\n\n            case EmulationServiceInterface.State.running:\n                this.pause();\n                break;\n        }\n    };\n\n    /**\n     * Subscribe to this event to receive periodic updates on the frequency of the\n     * emulated system. The unit is Hz. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display emulation speed):\n     * ```typescript\n     *     stellerator.frequencyUpdate.addHandler(\n     *         frequency => $('emulation-speed').text(`System speed: ${(frequency / 1e6).toFixed(2)} MHz`)\n     *     );\n     * ```\n     */\n    frequencyUpdate: Event<number>;\n\n    /**\n     * Subscribe to this event to receive messages that are sent from the ROM running\n     * inside the emulator via the data tap.\n     *\n     * @type {Event<ArrayLike<number>>}\n     * @memberof Stellerator\n     */\n    asyncIOMessage: Event<ArrayLike<number>>;\n\n    /**\n     * This event is dispatched whenever emulation state changes. Check out the\n     * [microevent.ts](https://github.com/DirtyHairy/microevent)\n     * documentation on the event API.\n     *\n     * Example (using JQuery to display an error message):\n     * ```typescript\n     *     stellerator.stateChange.addHandler(\n     *         state => {\n     *             if (state === Stellerator.State.error) {\n     *                  $('error-message').text(stellerator.lastError().message);\n     *             }\n     *         }\n     *     );\n     * ```\n     */\n    stateChange: Event<Stellerator.State>;\n\n    private _canvasElt: HTMLCanvasElement = null;\n    private _config: Stellerator.Config = null;\n    private _emulationService: EmulationServiceInterface = null;\n    private _serviceInitialized: Promise<void> = null;\n\n    private _videoDriver: VideoDriver = null;\n    private _fullscreenVideo: FullscreenDriver = null;\n    private _audioDriver: AudioDriver = null;\n    private _keyboardIO: KeyboardIO = null;\n    private _asyncIO: AsyncIO = null;\n    private _touchIO: TouchIO = null;\n    private _paddle: Paddle = null;\n    private _gamepad: Gamepad = null;\n\n    private _controlPanel = new ControlPanelProxy();\n\n    private _state = Stellerator.State.stopped;\n\n    private _driverManager = new DriverManager();\n\n    private _mutex = new Mutex();\n}\n\nexport namespace Stellerator {\n    /**\n     * General emulator configuration. The configuration is set on construction of the\n     * stellerator instance. Each setting is strictly optional and has a default\n     * value.\n     */\n    export interface Config {\n        /**\n         * Gamma correction. Will take effect **only** if WebGL is available.\n         *\n         * Default: true\n         */\n        gamma: number;\n\n        /**\n         * Scaling mode.\n         *\n         * Default: qis (quasi-integer scaling)\n         */\n        scalingMode: ScalingMode;\n\n        /**\n         * TV emulation\n         *\n         * Default: composite\n         */\n        tvEmulation: TvEmulation;\n\n        /**\n         * Phosphor level. Valid values are between 0 and 1.\n         * A value of 0 disables phosphor emulation.\n         *\n         * Default: 0.5\n         */\n        phosphorLevel: number;\n\n        /**\n         * Scanlone leve. Valid values are between 0 an 1. A value of 0 disables scanlines.\n         *\n         * Default: 0.2\n         */\n        scanlineLevel: number;\n\n        /**\n         * Enable audio.\n         *\n         * Default: true\n         */\n        audio: boolean;\n\n        /**\n         * Master volume.\n         *\n         * Default: 0.5\n         */\n        volume: number;\n\n        /**\n         * Enable keyboard for joysticks and reset / resume.\n         *\n         * Default: true\n         *\n         */\n        enableKeyboard: boolean;\n\n        /**\n         * Enable touch controls for left joystick and reset / resume.\n         *\n         * Default: true\n         */\n        enableTouch: boolean;\n\n        /**\n         * Mirror touch controls for left handed users.\n         *\n         * Default: false\n         */\n        touchLeftHanded: boolean;\n\n        /**\n         * Touch control joystick emulation sensitivity (in pixels).\n         *\n         * Default: 15\n         */\n        touchJoystickSensitivity: number;\n\n        /**\n         * Specify an HTML element on which the driver listens for keyboard\n         * events.\n         *\n         * Default: document\n         */\n        keyboardTarget: HTMLElement | HTMLDocument;\n\n        /**\n         * Toggle fullscreen with \"enter\". Applicable **only** if `enableKeyboard`\n         * is set.\n         *\n         * Default: true\n         */\n        fullscreenViaKeyboard: boolean;\n\n        /**\n         * Toggle pause with \"p\". Applicable **only** if `enableKeyboard` is set.\n         *\n         * Default: true\n         */\n        pauseViaKeyboard: boolean;\n\n        /**\n         * Reset emulation with \"shift-r\".\n         *\n         * Default: true\n         */\n        resetViaKeyboard: boolean;\n\n        /**\n         * Toggle pause via touch controls. Applicable **only** if `enableTouch` is set.\n         *\n         * Default: true\n         */\n        pauseViaTouch: boolean;\n\n        /**\n         * Toggle fullscreen via touch controls. Applicable **only** if `enableTouch` is set.\n         */\n        fullscreenViaTouch: boolean;\n\n        /**\n         * Emulate the first paddlewith the horizontal movement of the mouse.\n         *\n         * Default: true\n         *\n         */\n        paddleViaMouse: boolean;\n\n        /**\n         * Enable gamepad support.\n         *\n         * Default: true\n         */\n        enableGamepad: boolean;\n    }\n\n    /**\n     * TV mode constants\n     */\n    export enum TvMode {\n        /**\n         * NTSC\n         */\n        ntsc = 'ntsc',\n        /**\n         * PAL\n         */\n        pal = 'pal',\n        /**\n         * SECAM\n         */\n        secam = 'secam',\n    }\n\n    export enum ControllerType {\n        /**\n         * Joystick\n         */\n        joystick = 'joystick',\n        /**\n         * PAL\n         */\n        paddles = 'paddles',\n        /**\n         * SECAM\n         */\n        keypad = 'keypad',\n    }\n\n    /**\n     * TV emulation modes. Enabling TV emulation may cause visual artifacts on some\n     * (ancient) GPUs\n     */\n    export enum TvEmulation {\n        /**\n         * Composite\n         */\n        composite = VideoDriver.TvEmulation.composite,\n        /**\n         * S-Video\n         */\n        svideo = VideoDriver.TvEmulation.svideo,\n        /**\n         * No TV emulation\n         */\n        none = VideoDriver.TvEmulation.none,\n    }\n\n    /**\n     * Scaling algorithm\n     */\n    export enum ScalingMode {\n        /**\n         * Quasi-integer scaling. This is slightly more expensive than bilinear scaling\n         * but gives a nice, sharp image while avoiding Moirée patterns.\n         */\n        qis = VideoDriver.ScalingMode.qis,\n        /**\n         * Plain bilinear scaling. Blurry and fast, avoids Moirée patterns.\n         */\n        bilinear = VideoDriver.ScalingMode.bilinear,\n        /**\n         * Nearest neighbour interpolation\n         */\n        none = VideoDriver.ScalingMode.none,\n    }\n\n    /**\n     * Optional configuration for a specific cartridge. This configuration is passed to\n     * the emulator together with a cartridge image for emulation. Each setting\n     * is strictly optional and has a default value.\n     */\n    export interface CartridgeConfig {\n        /**\n         * Specify the cartridge type. The default is autodetection which should\n         * work fine in almost all cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        cartridgeType: CartridgeInfo.CartridgeType;\n\n        /**\n         * Random number generator seed. This is used to initialize the initial\n         * hardware state. The default is automatic, which uses a random seed.\n         *\n         * Default: undefined [automatic]\n         */\n        randomSeed: number;\n\n        /**\n         * Emulate paddles.\n         *\n         * Default: true\n         */\n        emulatePaddles: boolean;\n\n        /**\n         * Enable specific controller type for port 0\n         *\n         * Default: true\n         */\n        controllerPort0: ControllerType;\n\n        /**\n         * Enable specific controllers\n         *\n         * Default: true\n         */\n        controllerPort1: ControllerType;\n\n        /**\n         * The first visible scanline of the frame. The default is autodetection, which\n         * should work fine for most cases.\n         *\n         * Default: undefined [autodetect]\n         */\n        frameStart: number;\n\n        /**\n         * The accuracy of the CPU core (see below).\n         *\n         * Default: cycle (high precision)\n         */\n        cpuAccuracy: CpuAccuracy;\n\n        /**\n         * Enable the data tap.\n         *\n         * Default: false\n         */\n        asyncIO: boolean;\n    }\n\n    /**\n     * The CartridgeType enum. Reexported from the `CartridgeInfo` module. Please check the\n     * [source](https://github.com/6502ts/6502.ts/blob/master/src/machine/stella/cartridge/CartridgeInfo.ts)\n     * for the various possible values if you really need this setting.\n     *\n     * Example:\n     * ```typescript\n     *     stellerator.run(cartridgeImage, Stellerator.TvMode.ntsc, {\n     *         cartridgeType: Stellerator.CartridgeType.bankswitch_DPC\n     *     });\n     * ```\n     */\n    export const CartridgeType = CartridgeInfo.CartridgeType;\n\n    /**\n     * This function takes a cartridge type and returns a human readable\n     * description suitable for building an UI. Reexported from the `CartridgeInfo` module.\n     *\n     * Example:\n     * ```typescript\n     *     const description = Stellerator.describeCartridgeType(\n     *         Stellerator.CartridgeType.bankswitch_DPC\n     *     );\n     * ```\n     */\n    export const describeCartridgeType: (cartridgeType: CartridgeInfo.CartridgeType) => string =\n        CartridgeInfo.describeCartridgeType;\n\n    /**\n     * This function returns an array of all possible cartridge types suitable for building an UI.\n     * Reexported from the `CartridgeInfo` module.\n     */\n    export const allCartridgeTypes: () => Array<CartridgeInfo.CartridgeType> = CartridgeInfo.getAllTypes;\n\n    /**\n     * The different possible states of the emulation.\n     */\n    export enum State {\n        running = 'running',\n        /**\n         * Emulation has been paused and can be stopped or continued.\n         */\n        paused = 'paused',\n        /**\n         * Emulation has been stopped regularily.\n         */\n        stopped = 'stopped',\n        /**\n         * Emulation has been stopped by an error.\n         */\n        error = 'error',\n    }\n\n    /**\n     * The different possible CPU emulation modes.\n     */\n    export enum CpuAccuracy {\n        /**\n         * True cycle-exact CPU emulation. High accuracy.\n         */\n        cycle = 'cycle',\n        /**\n         * Less accurate memory access patters. Slightly less accurate, but faster\n         */\n        instruction = 'instruction',\n    }\n}\n\nexport { Stellerator as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport Switch from './Switch';\nimport SwitchIO from '../../../machine/io/SwitchInterface';\n\nclass SwitchProxy implements Switch {\n    bind(swtch: SwitchIO): void {\n        this.unbind();\n\n        this._boundSwitch = swtch;\n        this._boundSwitch.toggle(this._state);\n\n        this._boundSwitch.stateChanged.addHandler(SwitchProxy._onBoundStateChange, this);\n        this._setState(this._boundSwitch.read());\n    }\n\n    unbind(): void {\n        if (!this._boundSwitch) {\n            return;\n        }\n\n        this._boundSwitch.stateChanged.removeHandler(SwitchProxy._onBoundStateChange, this);\n        this._boundSwitch = null;\n    }\n\n    toggle(state: boolean): this {\n        if (this._boundSwitch) {\n            this._boundSwitch.toggle(state);\n        } else {\n            this._setState(state);\n        }\n\n        return this;\n    }\n\n    read(): boolean {\n        return this._state;\n    }\n\n    private static _onBoundStateChange(newState: boolean, self: SwitchProxy) {\n        self._setState(newState);\n    }\n\n    private _setState(newState: boolean) {\n        if (newState !== this._state) {\n            this._state = newState;\n            this.stateChange.dispatch(this._state);\n        }\n    }\n\n    stateChange = new Event<boolean>();\n\n    private _state = false;\n    private _boundSwitch: SwitchIO = null;\n}\n\nexport { SwitchProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport JoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\nimport KeypadControllerInterface from '../../../machine/io/KeypadControllerInterface';\n\nconst enum DispatchType {\n    swtch,\n    triggerDown\n}\n\ninterface SwitchDispatch {\n    type: DispatchType.swtch;\n    swtch: SwitchInterface;\n}\n\ninterface TriggerDispatch {\n    type: DispatchType.triggerDown;\n    trigger: Event<void>;\n}\n\ntype Dispatch = SwitchDispatch | TriggerDispatch;\n\nfunction mkSwitch(swtch: SwitchInterface): SwitchDispatch {\n    return {\n        type: DispatchType.swtch,\n        swtch\n    };\n}\n\nfunction mkTrigger(event: Event<void>): TriggerDispatch {\n    return {\n        type: DispatchType.triggerDown,\n        trigger: event\n    };\n}\n\nclass KeyboardIO {\n    constructor(\n        private _target: HTMLElement | HTMLDocument,\n        // tslint:disable-next-line\n        mappings: Array<KeyboardIO.Mapping> = KeyboardIO.defaultMappings\n    ) {\n        this._compileMappings(mappings);\n    }\n\n    bind(\n        joystick0: JoystickInterface,\n        joystick1: JoystickInterface,\n        keypad0: KeypadControllerInterface,\n        keypad1: KeypadControllerInterface,\n        controlPanel: ControlPanelInterface): void {\n        if (this._joystick0) {\n            return;\n        }\n\n        this._joystick0 = joystick0;\n        this._joystick1 = joystick1;\n        this._keypad0 = keypad0;\n        this._keypad1 = keypad1;\n        this._controlPanel = controlPanel;\n\n        this._updateActionTable();\n\n        this._keydownListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            const modifiers =\n                (e.shiftKey ? KeyboardIO.Modifier.shift : 0) |\n                (e.ctrlKey ? KeyboardIO.Modifier.ctrl : 0) |\n                (e.altKey ? KeyboardIO.Modifier.alt : 0);\n\n            if (!this._compiledMappings.get(e.keyCode).has(modifiers)) {\n                return;\n            }\n\n            const action = this._compiledMappings.get(e.keyCode).get(modifiers);\n\n            if (typeof action !== 'undefined') {\n                e.preventDefault();\n                this.triggerAction(action, true);\n            }\n        };\n\n        this._keyupListener = e => {\n            if (!this._compiledMappings.has(e.keyCode)) {\n                return;\n            }\n\n            for (const action of this._compiledMappings.get(e.keyCode).values()) {\n                e.preventDefault();\n                this.triggerAction(action, false);\n            }\n        };\n\n        this._target.addEventListener('keydown', this._keydownListener);\n        this._target.addEventListener('keyup', this._keyupListener);\n    }\n\n    triggerAction(action: KeyboardIO.Action, position: boolean): void {\n        const dispatch = this._dispatchTable[action];\n        if (dispatch) {\n            switch (dispatch.type) {\n                case DispatchType.swtch:\n                    dispatch.swtch.toggle(position);\n                    break;\n\n                case DispatchType.triggerDown:\n                    if (position) {\n                        dispatch.trigger.dispatch(undefined);\n                    }\n                    break;\n\n                default:\n            }\n        }\n    }\n\n    overlay(mappings: Array<KeyboardIO.Mapping>): void {\n        this._compileMappings(mappings);\n    }\n\n    unbind(): void {\n        if (!this._joystick0) {\n            return;\n        }\n\n        this._target.removeEventListener('keydown', this._keydownListener);\n        this._target.removeEventListener('keyup', this._keyupListener);\n\n        this._joystick0 = this._joystick1 = this._keypad0 = this._keypad1 = this._controlPanel = null;\n        this._keydownListener = this._keyupListener = null;\n    }\n\n    private _updateActionTable(): void {\n        this._dispatchTable[KeyboardIO.Action.fullscreen] = mkTrigger(this.toggleFullscreen);\n        this._dispatchTable[KeyboardIO.Action.hardReset] = mkTrigger(this.hardReset);\n        this._dispatchTable[KeyboardIO.Action.togglePause] = mkTrigger(this.togglePause);\n        this._dispatchTable[KeyboardIO.Action.select] = mkSwitch(this._controlPanel.getSelectSwitch());\n        this._dispatchTable[KeyboardIO.Action.reset] = mkSwitch(this._controlPanel.getResetButton());\n        this._dispatchTable[KeyboardIO.Action.left0] = mkSwitch(this._joystick0.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right0] = mkSwitch(this._joystick0.getRight());\n        this._dispatchTable[KeyboardIO.Action.up0] = mkSwitch(this._joystick0.getUp());\n        this._dispatchTable[KeyboardIO.Action.down0] = mkSwitch(this._joystick0.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire0] = mkSwitch(this._joystick0.getFire());\n        this._dispatchTable[KeyboardIO.Action.left1] = mkSwitch(this._joystick1.getLeft());\n        this._dispatchTable[KeyboardIO.Action.right1] = mkSwitch(this._joystick1.getRight());\n        this._dispatchTable[KeyboardIO.Action.up1] = mkSwitch(this._joystick1.getUp());\n        this._dispatchTable[KeyboardIO.Action.down1] = mkSwitch(this._joystick1.getDown());\n        this._dispatchTable[KeyboardIO.Action.fire1] = mkSwitch(this._joystick1.getFire());\n        this._dispatchTable[KeyboardIO.Action.keypad0r0c0] = mkSwitch(this._keypad0.getKey(0, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad0r0c1] = mkSwitch(this._keypad0.getKey(0, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad0r0c2] = mkSwitch(this._keypad0.getKey(0, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad0r1c0] = mkSwitch(this._keypad0.getKey(1, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad0r1c1] = mkSwitch(this._keypad0.getKey(1, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad0r1c2] = mkSwitch(this._keypad0.getKey(1, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad0r2c0] = mkSwitch(this._keypad0.getKey(2, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad0r2c1] = mkSwitch(this._keypad0.getKey(2, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad0r2c2] = mkSwitch(this._keypad0.getKey(2, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad0r3c0] = mkSwitch(this._keypad0.getKey(3, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad0r3c1] = mkSwitch(this._keypad0.getKey(3, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad0r3c2] = mkSwitch(this._keypad0.getKey(3, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad1r0c0] = mkSwitch(this._keypad1.getKey(0, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad1r0c1] = mkSwitch(this._keypad1.getKey(0, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad1r0c2] = mkSwitch(this._keypad1.getKey(0, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad1r1c0] = mkSwitch(this._keypad1.getKey(1, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad1r1c1] = mkSwitch(this._keypad1.getKey(1, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad1r1c2] = mkSwitch(this._keypad1.getKey(1, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad1r2c0] = mkSwitch(this._keypad1.getKey(2, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad1r2c1] = mkSwitch(this._keypad1.getKey(2, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad1r2c2] = mkSwitch(this._keypad1.getKey(2, 2));\n        this._dispatchTable[KeyboardIO.Action.keypad1r3c0] = mkSwitch(this._keypad1.getKey(3, 0));\n        this._dispatchTable[KeyboardIO.Action.keypad1r3c1] = mkSwitch(this._keypad1.getKey(3, 1));\n        this._dispatchTable[KeyboardIO.Action.keypad1r3c2] = mkSwitch(this._keypad1.getKey(3, 2));\n    }\n\n    private _compileMappings(mappings: Array<KeyboardIO.Mapping>): void {\n        const compileMapping = (action: KeyboardIO.Action, keycode: number, modifiers: number) => {\n            if ((modifiers & ~(KeyboardIO.Modifier.shift | KeyboardIO.Modifier.ctrl | KeyboardIO.Modifier.alt)) !== 0) {\n                throw new Error(`invalid modifier set ${modifiers}`);\n            }\n\n            if (!this._compiledMappings.has(keycode)) {\n                this._compiledMappings.set(keycode, new Map<number, KeyboardIO.Action>());\n            }\n\n            this._compiledMappings.get(keycode).set(modifiers, action);\n        };\n\n        mappings.forEach(mapping => {\n            const action = mapping.action,\n                specs = Array.isArray(mapping.spec) ? mapping.spec : [mapping.spec];\n\n            specs.forEach(spec =>\n                compileMapping(\n                    action,\n                    typeof spec === 'object' ? spec.keycode : spec,\n                    typeof spec === 'object' ? spec.modifiers : 0\n                )\n            );\n        });\n    }\n\n    toggleFullscreen = new Event<void>();\n    hardReset = new Event<void>();\n    togglePause = new Event<void>();\n\n    private _keydownListener: (e: KeyboardEvent) => void = null;\n    private _keyupListener: (e: KeyboardEvent) => void = null;\n\n    private _joystick0: JoystickInterface = null;\n    private _joystick1: JoystickInterface = null;\n    private _keypad0: KeypadControllerInterface = null;\n    private _keypad1: KeypadControllerInterface = null;\n    private _controlPanel: ControlPanelInterface = null;\n\n    private _dispatchTable: { [action: number]: Dispatch } = {};\n    private _compiledMappings = new Map<number, Map<number, KeyboardIO.Action>>();\n\n}\n\nnamespace KeyboardIO {\n    export const enum Action {\n        select,\n        reset,\n        left0,\n        right0,\n        up0,\n        down0,\n        left1,\n        right1,\n        up1,\n        down1,\n        fire0,\n        fire1,\n\n        keypad0r0c0,\n        keypad0r0c1,\n        keypad0r0c2,\n        keypad0r1c0,\n        keypad0r1c1,\n        keypad0r1c2,\n        keypad0r2c0,\n        keypad0r2c1,\n        keypad0r2c2,\n        keypad0r3c0,\n        keypad0r3c1,\n        keypad0r3c2,\n\n        keypad1r0c0,\n        keypad1r0c1,\n        keypad1r0c2,\n        keypad1r1c0,\n        keypad1r1c1,\n        keypad1r1c2,\n        keypad1r2c0,\n        keypad1r2c1,\n        keypad1r2c2,\n        keypad1r3c0,\n        keypad1r3c1,\n        keypad1r3c2,\n\n        fullscreen,\n        hardReset,\n        togglePause\n    }\n\n    export const Actions: Record<string, Action> = {\n        'select': Action.select,\n        'reset': Action.reset,\n        'left0': Action.left0,\n        'right0': Action.right0,\n        'up0': Action.up0,\n        'down0': Action.down0,\n        'left1': Action.left1,\n        'right1': Action.right1,\n        'up1': Action.up1,\n        'down1': Action.down1,\n        'fire0': Action.fire0,\n        'fire1': Action.fire1,\n        'keypad0r0c0': Action.keypad0r0c0,\n        'keypad0r0c1': Action.keypad0r0c1,\n        'keypad0r0c2': Action.keypad0r0c2,\n        'keypad0r1c0': Action.keypad0r1c0,\n        'keypad0r1c1': Action.keypad0r1c1,\n        'keypad0r1c2': Action.keypad0r1c2,\n        'keypad0r2c0': Action.keypad0r2c0,\n        'keypad0r2c1': Action.keypad0r2c1,\n        'keypad0r2c2': Action.keypad0r2c2,\n        'keypad0r3c0': Action.keypad0r3c0,\n        'keypad0r3c1': Action.keypad0r3c1,\n        'keypad0r3c2': Action.keypad0r3c2,\n        'keypad1r0c0': Action.keypad1r0c0,\n        'keypad1r0c1': Action.keypad1r0c1,\n        'keypad1r0c2': Action.keypad1r0c2,\n        'keypad1r1c0': Action.keypad1r1c0,\n        'keypad1r1c1': Action.keypad1r1c1,\n        'keypad1r1c2': Action.keypad1r1c2,\n        'keypad1r2c0': Action.keypad1r2c0,\n        'keypad1r2c1': Action.keypad1r2c1,\n        'keypad1r2c2': Action.keypad1r2c2,\n        'keypad1r3c0': Action.keypad1r3c0,\n        'keypad1r3c1': Action.keypad1r3c1,\n        'keypad1r3c2': Action.keypad1r3c2,\n        'fullscreen': Action.fullscreen,\n        'hardReset': Action.hardReset,\n        'togglePause': Action.togglePause,\n    }\n\n    export const enum Modifier {\n        ctrl = 1,\n        alt = 2,\n        shift = 4\n    }\n\n    export interface ComplexKeySpec {\n        keycode: number;\n        modifiers: number;\n    }\n\n    export type keySpec = number | ComplexKeySpec;\n\n    export interface Mapping {\n        action: Action;\n        spec: keySpec | Array<keySpec>;\n    }\n\n    export const defaultMappings: Array<Mapping> = [\n        {\n            action: Action.select,\n            spec: {\n                keycode: 32, // space\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.reset,\n            spec: {\n                keycode: 13, // enter\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.left0,\n            spec: [\n                65, // a\n                37 // left\n            ]\n        },\n        {\n            action: Action.right0,\n            spec: [\n                68, // d\n                39 // right\n            ]\n        },\n        {\n            action: Action.up0,\n            spec: [\n                87, // w\n                38 // up\n            ]\n        },\n        {\n            action: Action.down0,\n            spec: [\n                83, // s\n                40 // down\n            ]\n        },\n        {\n            action: Action.fire0,\n            spec: [\n                32, // space\n                86 // v\n            ]\n        },\n        {\n            action: Action.left1,\n            spec: 74 // j\n        },\n        {\n            action: Action.right1,\n            spec: 76 // l\n        },\n        {\n            action: Action.up1,\n            spec: 73 // i\n        },\n        {\n            action: Action.down1,\n            spec: 75 // k\n        },\n        {\n            action: Action.fire1,\n            spec: 66 // b\n        },\n        {\n            action: Action.fullscreen,\n            spec: 13 // enter\n        },\n        {\n            action: Action.hardReset,\n            spec: {\n                keycode: 82, // r\n                modifiers: Modifier.shift\n            }\n        },\n        {\n            action: Action.togglePause,\n            spec: 80 // p\n        }\n    ];\n\n    export const keypad0Mappings: Array<Mapping> = [\n        {\n            action: Action.keypad0r0c0,\n            spec: 49 // 1\n        },\n        {\n            action: Action.keypad0r0c1,\n            spec: 50 // 2\n        },\n        {\n            action: Action.keypad0r0c2,\n            spec: 51 // 3\n        },\n        {\n            action: Action.keypad0r1c0,\n            spec: 81 // q\n        },\n        {\n            action: Action.keypad0r1c1,\n            spec: 87 // w\n        },\n        {\n            action: Action.keypad0r1c2,\n            spec: 69 // e\n        },\n        {\n            action: Action.keypad0r2c0,\n            spec: 65 // a\n        },\n        {\n            action: Action.keypad0r2c1,\n            spec: 83 // s\n        },\n        {\n            action: Action.keypad0r2c2,\n            spec: 68 // d\n        },\n        {\n            action: Action.keypad0r3c0,\n            spec: 90 // z\n        },\n        {\n            action: Action.keypad0r3c1,\n            spec: 88 // x\n        },\n        {\n            action: Action.keypad0r3c2,\n            spec: 67 // c\n        }\n    ];\n\n    export const keypad1Mappings: Array<Mapping> = [\n        {\n            action: Action.keypad1r0c0,\n            spec: 55// 7\n        },\n        {\n            action: Action.keypad1r0c1,\n            spec: 56// 8\n        },\n        {\n            action: Action.keypad1r0c2,\n            spec: 57 // 9\n        },\n        {\n            action: Action.keypad1r1c0,\n            spec: 85 // u\n        },\n        {\n            action: Action.keypad1r1c1,\n            spec: 73 // i\n        },\n        {\n            action: Action.keypad1r1c2,\n            spec: 79 // o\n        },\n        {\n            action: Action.keypad1r2c0,\n            spec: 74 // j\n        },\n        {\n            action: Action.keypad1r2c1,\n            spec: 75 // k\n        },\n        {\n            action: Action.keypad1r2c2,\n            spec: 76 // l\n        },\n        {\n            action: Action.keypad1r3c0,\n            spec: 77 // m\n        },\n        {\n            action: Action.keypad1r3c1,\n            spec: 188 // ,\n        },\n        {\n            action: Action.keypad1r3c2,\n            spec: 190 // .\n        }\n    ];\n\n}\n\n\nexport { KeyboardIO as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport DoubleTapDetector from './touch/DoubleTapDetector';\nimport DigitalJoystickInterface from '../../../machine/io/DigitalJoystickInterface';\nimport SwitchInterface from '../../../machine/io/SwitchInterface';\nimport ControlPanelInterface from '../../../machine/stella/ControlPanelInterface';\n\nconst enum TouchType {\n    alt = 'alt',\n    fire = 'fire',\n    joystick = 'joystick',\n    select = 'select',\n    reset = 'reset',\n    pause = 'pause',\n    unknown = 'unknown'\n}\n\nclass TouchIO {\n    constructor(private _canvas: HTMLCanvasElement, private _joystickSensitivity = 15, private _leftHanded = false) {\n        this.toggleFullscreen = this._fullscreenDoubleTapDetector.trigger;\n    }\n\n    static isSupported(): boolean {\n        return 'ontouchstart' in window;\n    }\n\n    bind(joystick: DigitalJoystickInterface, controlPanel: ControlPanelInterface): void {\n        if (this._bound) {\n            return;\n        }\n\n        this._bound = true;\n\n        this._joystick = joystick;\n        this._select = controlPanel.getSelectSwitch();\n        this._reset = controlPanel.getResetButton();\n\n        this._bindListeners();\n    }\n\n    unbind(): void {\n        if (!this._bound) {\n            return;\n        }\n\n        this._unbindListeners();\n\n        (this._bound = false), (this._joystick = this._reset = this._select = null);\n    }\n\n    private _bindListeners(): void {\n        this._canvas.addEventListener('touchstart', this._onTouchStart);\n        this._canvas.addEventListener('touchend', this._onTouchEnd);\n        this._canvas.addEventListener('touchmove', this._onTouchMove);\n    }\n\n    private _unbindListeners(): void {\n        this._canvas.removeEventListener('touchstart', this._onTouchStart);\n        this._canvas.removeEventListener('touchend', this._onTouchEnd);\n        this._canvas.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    private _onTouchStart = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const normalizedTouch = new NormalizedTouch(e.changedTouches.item(i), this._canvas),\n                id = normalizedTouch.touch.identifier;\n\n            if (this._leftHanded ? normalizedTouch.x > 0.5 : normalizedTouch.x <= 0.5) {\n                if (normalizedTouch.y <= 0.5) {\n                    // NW\n                    normalizedTouch.type = TouchType.alt;\n                } else {\n                    // SW\n                    normalizedTouch.type = this._isAlt ? TouchType.pause : TouchType.fire;\n                }\n            } else {\n                if (normalizedTouch.y <= 0.5) {\n                    // NE\n                    normalizedTouch.type = this._isAlt ? TouchType.select : TouchType.joystick;\n                } else {\n                    // SE\n                    normalizedTouch.type = this._isAlt ? TouchType.reset : TouchType.joystick;\n                }\n            }\n\n            if (this._pendingTouches.has(id) || this._pendingTouches.has(normalizedTouch.type)) {\n                continue;\n            }\n\n            this._pendingTouches.set(id, normalizedTouch);\n            this._pendingTouches.set(normalizedTouch.type, normalizedTouch);\n\n            switch (normalizedTouch.type) {\n                case TouchType.alt:\n                    this._isAlt = true;\n                    this._fullscreenDoubleTapDetector.startTouch();\n                    break;\n\n                case TouchType.fire:\n                    this._joystick.getFire().toggle(true);\n                    break;\n\n                case TouchType.pause:\n                    this.togglePause.dispatch(undefined);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.select:\n                    this._select.toggle(true);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.reset:\n                    this._reset.toggle(true);\n                    this._fullscreenDoubleTapDetector.cancelTouch();\n                    break;\n\n                case TouchType.joystick:\n                    break;\n\n                default:\n                    throw new Error('invalid touch type');\n            }\n        }\n\n        e.preventDefault();\n    };\n\n    private _onTouchEnd = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const normalizedTouch = this._pendingTouches.get(e.changedTouches.item(i).identifier);\n\n            if (!normalizedTouch) {\n                continue;\n            }\n\n            switch (normalizedTouch.type) {\n                case TouchType.alt:\n                    this._isAlt = false;\n                    this._fullscreenDoubleTapDetector.endTouch();\n                    break;\n\n                case TouchType.fire:\n                    this._joystick.getFire().toggle(false);\n                    break;\n\n                case TouchType.select:\n                    this._select.toggle(false);\n                    break;\n\n                case TouchType.reset:\n                    this._reset.toggle(false);\n                    break;\n\n                case TouchType.joystick:\n                    this._joystick.getDown().toggle(false);\n                    this._joystick.getUp().toggle(false);\n                    this._joystick.getLeft().toggle(false);\n                    this._joystick.getRight().toggle(false);\n                    break;\n\n                case TouchType.pause:\n                    break;\n\n                default:\n                    throw new Error('invalid touch type');\n            }\n\n            this._pendingTouches.delete(normalizedTouch.type);\n            this._pendingTouches.delete(normalizedTouch.touch.identifier);\n        }\n\n        e.preventDefault();\n    };\n\n    private _onTouchMove = (e: TouchEvent): void => {\n        for (let i = 0; i < e.changedTouches.length; i++) {\n            const touch = e.changedTouches.item(i),\n                normalizedTouch = this._pendingTouches.get(touch.identifier);\n\n            if (!normalizedTouch) {\n                continue;\n            }\n\n            if (normalizedTouch.type !== TouchType.joystick) {\n                continue;\n            }\n\n            const deltaX = touch.clientX - normalizedTouch.x0,\n                deltaY = touch.clientY - normalizedTouch.y0,\n                abs = Math.sqrt(deltaX * deltaX + deltaY * deltaY),\n                sin = Math.abs(deltaY / abs),\n                cos = Math.abs(deltaX / abs),\n                trigger = abs > this._joystickSensitivity;\n\n            this._joystick.getLeft().toggle(trigger && deltaX < 0 && cos > 0.5);\n            this._joystick.getRight().toggle(trigger && deltaX > 0 && cos > 0.5);\n            this._joystick.getUp().toggle(trigger && deltaY < 0 && sin > 0.5);\n            this._joystick.getDown().toggle(trigger && deltaY > 0 && sin > 0.5);\n\n            if (abs > 3 * this._joystickSensitivity) {\n                normalizedTouch.x0 += (deltaX / abs) * (abs - 3 * this._joystickSensitivity);\n                normalizedTouch.y0 += (deltaY / abs) * (abs - 3 * this._joystickSensitivity);\n            }\n        }\n\n        e.preventDefault();\n    };\n\n    toggleFullscreen: Event<void>;\n    togglePause = new Event<void>();\n\n    private _fullscreenDoubleTapDetector = new DoubleTapDetector();\n\n    private _bound = false;\n\n    private _joystick: DigitalJoystickInterface = null;\n    private _select: SwitchInterface = null;\n    private _reset: SwitchInterface = null;\n\n    private _isAlt = false;\n\n    private _pendingTouches = new Map<number | TouchType, NormalizedTouch>();\n}\n\nclass NormalizedTouch {\n    constructor(public touch: Touch, canvas: HTMLCanvasElement) {\n        const boundingRect = canvas.getBoundingClientRect();\n\n        this.x = (touch.clientX - boundingRect.left) / boundingRect.width;\n        this.y = (touch.clientY - boundingRect.top) / boundingRect.height;\n\n        this.x0 = touch.clientX;\n        this.y0 = touch.clientY;\n    }\n\n    x0: number;\n    y0: number;\n\n    x: number;\n    y: number;\n    type = TouchType.unknown;\n}\n\nexport default TouchIO;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport VanillaDriver from '../../driver/WebAudio';\nimport WaveformAudioOutputInterface from '../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../driver/PCMAudioEndpointInterface';\n\nclass WebAudioDriver {\n    constructor(private _fragmentSize?: number) {}\n\n    init(): void {}\n\n    bind(pcmAudio: boolean, channels: WebAudioDriver.Channels): void {\n        if (this._channels) {\n            return;\n        }\n        this._channels = [...channels] as any;\n\n        if (!this._driver || this._pcmAudio !== pcmAudio) {\n            if (this._driver) {\n                this._driver.close();\n            }\n\n            this._driver = pcmAudio\n                ? new VanillaDriver(0, this._channels.length, this._fragmentSize)\n                : new VanillaDriver(this._channels.length, 0, this._fragmentSize);\n            this._driver.init();\n        }\n\n        if (pcmAudio) {\n            this._driver.bind([], this._channels as Array<PCMAudioEndpointInterface>);\n        } else {\n            this._driver.bind(this._channels as Array<WaveformAudioOutputInterface>, []);\n        }\n\n        for (let i = 0; i < this._channels.length; i++) {\n            this._driver.setMasterVolume(i, this._volume);\n        }\n\n        this._pcmAudio = pcmAudio;\n    }\n\n    unbind(): void {\n        if (!this._channels) {\n            return;\n        }\n\n        this._driver.unbind();\n\n        this._channels = null;\n    }\n\n    setMasterVolume(volume: number): void {\n        this._volume = volume;\n\n        if (this._channels) {\n            for (let i = 0; i < this._channels.length; i++) {\n                this._driver.setMasterVolume(i, this._volume);\n            }\n        }\n    }\n\n    getMasterVolume(): number {\n        return this._volume;\n    }\n\n    async pause(): Promise<void> {\n        if (this._driver) {\n            await this._driver.pause();\n        }\n    }\n\n    async resume(): Promise<void> {\n        if (this._driver) {\n            await this._driver.resume();\n        }\n    }\n\n    private _driver: VanillaDriver;\n    private _pcmAudio = false;\n    private _volume = 1;\n    private _channels: WebAudioDriver.Channels;\n}\n\nnamespace WebAudioDriver {\n    export type Channels = Array<WaveformAudioOutputInterface> | Array<PCMAudioEndpointInterface>;\n}\n\nexport { WebAudioDriver as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nclass DoubleTapDetector {\n    constructor(private _maxTapLength = 500, private _timeout = 200) {}\n\n    startTouch(): void {\n        this._lastTouchStart = Date.now();\n\n        if (this._touching) {\n            return;\n        }\n\n        this._touching = true;\n\n        this._dispatch = this._lastTouchEligible && this._lastTouchStart - this._lastTouchEnd < this._timeout;\n    }\n\n    endTouch(): void {\n        this._lastTouchEnd = Date.now();\n\n        // We need to dispatch on touchend in order to enable the fullscreen API in chrome. wtf.\n        if (this._dispatch) {\n            this._dispatch = false;\n            this.trigger.dispatch(undefined);\n        }\n\n        if (!this._touching) {\n            return;\n        }\n\n        this._touching = false;\n\n        this._lastTouchEligible = this._lastTouchStart - this._lastTouchEnd < this._maxTapLength;\n    }\n\n    cancelTouch(): void {\n        this.endTouch();\n        this._lastTouchEligible = false;\n    }\n\n    isDispatching(): boolean {\n        return this._dispatch;\n    }\n\n    trigger = new Event<void>();\n\n    private _dispatch = false;\n    private _touching = false;\n    private _lastTouchEligible = false;\n    private _lastTouchStart = 0;\n    private _lastTouchEnd = 0;\n}\n\nexport default DoubleTapDetector;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport EmulationServiceInterface from './EmulationServiceInterface';\nimport EmulationContextInterface from './EmulationContextInterface';\n\nclass DriverManager {\n    bind(emulationService: EmulationServiceInterface): this {\n        if (this._driversBound) {\n            return this;\n        }\n\n        this._emulationService = emulationService;\n\n        if (this._shouldBindDrivers()) {\n            this._bindDrivers();\n        }\n\n        this._emulationService.stateChanged.addHandler(DriverManager._onEmuStateChange, this);\n\n        return this;\n    }\n\n    unbind(): this {\n        if (!this._emulationService) {\n            return this;\n        }\n\n        this._unbindDrivers();\n\n        this._emulationService.stateChanged.removeHandler(DriverManager._onEmuStateChange, this);\n\n        this._emulationService = null;\n\n        return this;\n    }\n\n    addDriver(driver: DriverManager.Driver, binder: DriverManager.Binder): this {\n        this._drivers.set(driver, new DriverManager.DriverContext(driver, binder));\n\n        if (this._driversBound) {\n            binder(this._emulationService.getEmulationContext(), driver);\n        }\n\n        return this;\n    }\n\n    removeDriver(driver: DriverManager.Driver): this {\n        if (!this._drivers.get(driver)) {\n            return this;\n        }\n\n        driver.unbind();\n\n        this._drivers.delete(driver);\n\n        return this;\n    }\n\n    private static _onEmuStateChange(newState: EmulationServiceInterface.State, self: DriverManager): void {\n        if (self._shouldBindDrivers(newState)) {\n            self._bindDrivers();\n        } else {\n            self._unbindDrivers();\n        }\n    }\n\n    private _shouldBindDrivers(\n        state = this._emulationService ? this._emulationService.getState() : undefined\n    ): boolean {\n        return (\n            this._emulationService &&\n            (state === EmulationServiceInterface.State.running || state === EmulationServiceInterface.State.paused)\n        );\n    }\n\n    private _bindDrivers(): void {\n        if (this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach((driverContext) =>\n            driverContext.binder(this._emulationService.getEmulationContext(), driverContext.driver)\n        );\n\n        this._driversBound = true;\n    }\n\n    private _unbindDrivers(): void {\n        if (!this._driversBound) {\n            return;\n        }\n\n        this._drivers.forEach((driverContext) => driverContext.driver.unbind());\n\n        this._driversBound = false;\n    }\n\n    private _emulationService: EmulationServiceInterface;\n    private _drivers = new Map<DriverManager.Driver, DriverManager.DriverContext>();\n    private _driversBound = false;\n}\n\nnamespace DriverManager {\n    export interface Driver {\n        unbind(): void;\n    }\n\n    export interface Binder {\n        (context: EmulationContextInterface, driver: Driver): void;\n    }\n\n    export class DriverContext {\n        constructor(public driver: Driver, public binder: Binder) {}\n    }\n}\n\nexport { DriverManager as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { EventInterface } from 'microevent.ts';\n\nimport StellaConfig from '../../../machine/stella/Config';\nimport CartridgeInfo from '../../../machine/stella/cartridge/CartridgeInfo';\nimport EmulationContextInterface from './EmulationContextInterface';\n\ninterface EmulationServiceInterface {\n    init(): Promise<void>;\n\n    start(\n        buffer: { [i: number]: number; length: number },\n        config: EmulationServiceInterface.Config,\n        cartridgeType?: CartridgeInfo.CartridgeType\n    ): Promise<EmulationServiceInterface.State>;\n\n    stop(): Promise<EmulationServiceInterface.State>;\n\n    pause(): Promise<EmulationServiceInterface.State>;\n\n    resume(): Promise<EmulationServiceInterface.State>;\n\n    reset(): Promise<EmulationServiceInterface.State>;\n\n    peek(index: number): Promise<number>;\n\n    poke(index: number, value: number): Promise<void>;\n\n    setRateLimit(enforce: boolean): Promise<void>;\n\n    getRateLimit(): boolean;\n\n    getState(): EmulationServiceInterface.State;\n\n    getLastError(): Error;\n\n    getEmulationContext(): EmulationContextInterface;\n\n    getFrequency(): number;\n\n    stateChanged: EventInterface<EmulationServiceInterface.State>;\n\n    frequencyUpdate: EventInterface<number>;\n}\n\nnamespace EmulationServiceInterface {\n    export enum State {\n        stopped = 'stopped',\n        running = 'running',\n        paused = 'paused',\n        error = 'error'\n    }\n\n    export interface Config extends StellaConfig {\n        asyncIO?: boolean;\n    }\n}\n\nexport { EmulationServiceInterface as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport AsyncIOInterface from '../../../../machine/io/AsyncIOInterface';\nimport { RpcProviderInterface } from 'worker-rpc';\nimport { SIGNAL_TYPE, MessageToAsyncIOMessage } from './messages';\nimport { Event } from 'microevent.ts';\n\nclass AsyncIOProxy implements AsyncIOInterface {\n    constructor(private _rpc: RpcProviderInterface) {}\n\n    init(): void {\n        this._rpc.registerSignalHandler<Array<number>>(SIGNAL_TYPE.messageFromAsyncIO, data =>\n            this.message.dispatch(data)\n        );\n    }\n\n    send(message: ArrayLike<number>): void {\n        this._rpc.signal<MessageToAsyncIOMessage>(SIGNAL_TYPE.messageToAsyncIO, Array.from(message));\n    }\n\n    message = new Event<Array<number>>();\n}\n\nexport default AsyncIOProxy;\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Joystick from '../../../../machine/io/DigitalJoystick';\nimport ControlPanel from '../../../../machine/stella/ControlPanel';\nimport Paddle from '../../../../machine/io/Paddle';\nimport ControlState from './ControlState';\nimport { RpcProviderInterface } from 'worker-rpc';\n\nimport { SIGNAL_TYPE } from './messages';\nimport KeypadController from '../../../../machine/io/KeypadController';\n\nclass ControlProxy {\n    constructor(private _rpc: RpcProviderInterface) {\n        for (let i = 0; i < 2; i++) {\n            this._joysticks[i] = new Joystick();\n        }\n\n        for (let i = 0; i < 2; i++) {\n            this._keypads[i] = new KeypadController();\n        }\n\n        for (let i = 0; i < 4; i++) {\n            this._paddles[i] = new Paddle();\n        }\n    }\n\n    sendUpdate(): void {\n        this._rpc.signal<ControlState>(SIGNAL_TYPE.controlStateUpdate, {\n            joystickState: this._joysticks.map(ControlProxy._joystickState),\n            keypadState: this._keypads.map(ControlProxy._keypadState),\n            paddleState: this._paddles.map(ControlProxy._paddleState),\n            controlPanelState: ControlProxy._controlPanelState(this._controlPanel)\n        });\n    }\n\n    getJoystick(i: number): Joystick {\n        if (i < 0 || i > 1) {\n            throw new Error(`invalid joystick index ${i}`);\n        }\n\n        return this._joysticks[i];\n    }\n\n    getKeypad(i: number): KeypadController {\n        if (i < 0 || i > 1) {\n            throw new Error(`invalid keypad index ${i}`);\n        }\n        return this._keypads[i];\n    }\n\n    getControlPanel(): ControlPanel {\n        return this._controlPanel;\n    }\n\n    getPaddle(i: number): Paddle {\n        if (i < 0 || i > 3) {\n            throw new Error(`invalid paddle index ${i}`);\n        }\n\n        return this._paddles[i];\n    }\n\n    private static _joystickState(joystick: Joystick): ControlState.JoystickState {\n        return {\n            up: joystick.getUp().read(),\n            down: joystick.getDown().read(),\n            left: joystick.getLeft().read(),\n            right: joystick.getRight().read(),\n            fire: joystick.getFire().read()\n        };\n    }\n\n    private static _keypadState(keypad: KeypadController): ControlState.KeypadState {\n        const state = {\n            rows: new Array(4)\n        };\n        for (var row = 0; row < 4; row++) {\n            state.rows[row] = new Array(3);\n            for (var col = 0; col < 3; col++) {\n                state.rows[row][col] = keypad.getKey(row, col).read();\n            }\n        }\n        return state;\n    }\n\n    private static _paddleState(paddle: Paddle): ControlState.PaddleState {\n        return {\n            value: paddle.getValue(),\n            fire: paddle.getFire().read()\n        };\n    }\n\n    private static _controlPanelState(controlPanel: ControlPanel): ControlState.ControlPanelState {\n        return {\n            difficulty0: controlPanel.getDifficultySwitchP0().read(),\n            difficulty1: controlPanel.getDifficultySwitchP1().read(),\n            select: controlPanel.getSelectSwitch().read(),\n            reset: controlPanel.getResetButton().read(),\n            color: controlPanel.getColorSwitch().read()\n        };\n    }\n\n    private _joysticks = new Array<Joystick>(2);\n    private _paddles = new Array<Paddle>(4);\n    private _keypads = new Array<KeypadController>(2);\n    private _controlPanel = new ControlPanel();\n\n}\n\nexport { ControlProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport JoystickInterface from '../../../../machine/io/DigitalJoystickInterface';\nimport ControlPanelInterface from '../../../../machine/stella/ControlPanelInterface';\nimport PaddleInterface from '../../../../machine/io/PaddleInterface';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport Config from '../../../../machine/stella/Config';\n\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\nimport AsyncIOProxy from './AsyncIOProxy';\nimport KeypadControllerInterface from '../../../../machine/io/KeypadControllerInterface';\nclass EmulationContext implements EmulationContextInterface {\n    constructor(\n        private _videoProxy: VideoProxy,\n        private _controlProxy: ControlProxy,\n        private _waveformChannels: Array<WaveformAudioProxy>,\n        private _pcmChannel: PCMAudioProxy,\n        private _asyncIOProxy: AsyncIOProxy\n    ) {\n        if (this._waveformChannels.length !== 2) {\n            throw new Error(`invalid channel count ${this._waveformChannels.length}`);\n        }\n    }\n\n    setConfig(config: Config): void {\n        this._config = config;\n    }\n\n    getConfig(): Config {\n        return this._config;\n    }\n\n    getVideo(): VideoEndpointInterface {\n        return this._videoProxy;\n    }\n\n    getJoystick(i: number): JoystickInterface {\n        return this._controlProxy.getJoystick(i);\n    }\n\n    getKeypad(i: number): KeypadControllerInterface {\n        return this._controlProxy.getKeypad(i);\n    }\n\n    getControlPanel(): ControlPanelInterface {\n        return this._controlProxy.getControlPanel();\n    }\n\n    getPaddle(i: number): PaddleInterface {\n        return this._controlProxy.getPaddle(i);\n    }\n\n    getWaveformChannels(): Array<WaveformAudioOutputInterface> {\n        return this._waveformChannels;\n    }\n\n    getPCMChannel(): PCMAudioEndpointInterface {\n        return this._pcmChannel;\n    }\n\n    getVideoProxy(): VideoProxy {\n        return this._videoProxy;\n    }\n\n    getAsyncIO(): AsyncIOProxy {\n        return this._asyncIOProxy;\n    }\n\n    private _config: Config = null;\n}\n\nexport { EmulationContext as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\nimport { RpcProvider } from 'worker-rpc';\n\nimport EmulationServiceInterface from '../EmulationServiceInterface';\nimport EmulationContext from './EmulationContext';\nimport EmulationContextInterface from '../EmulationContextInterface';\nimport VideoProxy from './VideoProxy';\nimport ControlProxy from './ControlProxy';\nimport WaveformAudioProxy from './WaveformAudioProxy';\nimport PCMAudioProxy from './PCMAudioProxy';\n\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\n\nimport { Mutex } from 'async-mutex';\n\nimport { RPC_TYPE, SIGNAL_TYPE, EmulationStartMessage, EmulationPokeMessage } from './messages';\nimport AsyncIOProxy from './AsyncIOProxy';\n\nconst CONTROL_PROXY_UPDATE_INTERVAL = 25;\n\nconst enum ProxyState {\n    stopped,\n    running,\n    paused\n}\n\nclass EmulationService implements EmulationServiceInterface {\n    constructor(private _stellaWorkerUri: string) { }\n\n    async init(): Promise<void> {\n        this._worker = new Worker(this._stellaWorkerUri);\n        this._rpc = new RpcProvider((message, transfer?) => this._worker.postMessage(message, transfer));\n\n        this._pcmChannel = new PCMAudioProxy(0, this._rpc).init();\n\n        for (let i = 0; i < 2; i++) {\n            this._waveformChannels[i] = new WaveformAudioProxy(i, this._rpc).init();\n        }\n\n        const videoProxy = new VideoProxy(this._rpc),\n            controlProxy = new ControlProxy(this._rpc),\n            asyncIOProxy = new AsyncIOProxy(this._rpc);\n\n        asyncIOProxy.init();\n        videoProxy.init();\n\n        this._emulationContext = new EmulationContext(\n            videoProxy,\n            controlProxy,\n            this._waveformChannels,\n            this._pcmChannel,\n            asyncIOProxy\n        );\n\n        this._worker.onmessage = messageEvent => this._rpc.dispatch(messageEvent.data);\n\n        this._rpc\n            .registerSignalHandler<number>(SIGNAL_TYPE.emulationFrequencyUpdate, this._onFrequencyUpdate.bind(this))\n            .registerSignalHandler<string>(SIGNAL_TYPE.emulationError, this._onEmulationError.bind(this));\n\n        this._controlProxy = controlProxy;\n    }\n\n    async start(\n        buffer: { [i: number]: number; length: number },\n        config: EmulationServiceInterface.Config,\n        cartridgeType?: CartridgeInfo.CartridgeType\n    ): Promise<EmulationServiceInterface.State> {\n        await this.stop();\n\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<EmulationStartMessage, EmulationServiceInterface.State>(\n                RPC_TYPE.emulationStart,\n                {\n                    buffer,\n                    config,\n                    cartridgeType\n                }\n            );\n\n            if (state === EmulationServiceInterface.State.paused) {\n                this._savedConfig = config;\n                this._emulationContext.setConfig(config);\n\n                await this._startProxies(config);\n            } else {\n                this._savedConfig = null;\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    pause(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationPause).then(state => {\n                this._pauseProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    stop(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationStop).then(state => {\n                this._stopProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    reset(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(async () => {\n            const state = await this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationReset);\n\n            // Try to restart the proxies if the reset recovered from an an error\n            if (\n                this._state === EmulationServiceInterface.State.error &&\n                (state === EmulationServiceInterface.State.running ||\n                    state === EmulationServiceInterface.State.paused) &&\n                this._savedConfig\n            ) {\n                await this._startProxies(this._savedConfig);\n            }\n\n            return this._applyState(state);\n        });\n    }\n\n    resume(): Promise<EmulationServiceInterface.State> {\n        return this._mutex.runExclusive(() =>\n            this._rpc.rpc<void, EmulationServiceInterface.State>(RPC_TYPE.emulationResume).then(state => {\n                this._resumeProxies();\n                return this._applyState(state);\n            })\n        );\n    }\n\n    setRateLimit(enforce: boolean): Promise<void> {\n        this._rateLimitEnforced = enforce;\n\n        return this._rpc.rpc<boolean, void>(RPC_TYPE.emulationSetRateLimit, enforce);\n    }\n\n    peek(index: number): Promise<number> {\n        return this._rpc.rpc<number, number>(RPC_TYPE.emulationPeek, index);\n    }\n\n    poke(index: number, value: number): Promise<void> {\n        return this._rpc.rpc<EmulationPokeMessage, void>(RPC_TYPE.emulationPoke, { index, value });\n    }\n\n    getFrequency(): number {\n        return this._frequency;\n    }\n\n    getRateLimit(): boolean {\n        return this._rateLimitEnforced;\n    }\n\n    getState(): EmulationServiceInterface.State {\n        return this._state;\n    }\n\n    getLastError(): Error {\n        return this._lastError;\n    }\n\n    getEmulationContext(): EmulationContextInterface {\n        switch (this._state) {\n            case EmulationServiceInterface.State.running:\n            case EmulationServiceInterface.State.paused:\n                return this._emulationContext;\n\n            default:\n                return null;\n        }\n    }\n\n    private _fetchLastError(): Promise<Error> {\n        return this._rpc\n            .rpc<void, string>(RPC_TYPE.emulationFetchLastError)\n            .then(message => (message ? new Error(message) : null));\n    }\n\n    private _applyState(\n        state: EmulationServiceInterface.State\n    ): Promise<EmulationServiceInterface.State> | EmulationServiceInterface.State {\n        if (state === EmulationServiceInterface.State.error) {\n            return this._fetchLastError().then(error => {\n                this._state = state;\n                this._lastError = error;\n\n                this._stopProxies();\n\n                this.stateChanged.dispatch(state);\n\n                return state;\n            });\n        } else {\n            this._state = state;\n            this.stateChanged.dispatch(state);\n\n            return state;\n        }\n    }\n\n    private _onFrequencyUpdate(message: number): void {\n        this._frequency = message;\n        this.frequencyUpdate.dispatch(this._frequency);\n    }\n\n    private _onEmulationError(message: string): void {\n        this._lastError = new Error(message || '');\n\n        this._stopProxies();\n        this._state = EmulationServiceInterface.State.error;\n        this.stateChanged.dispatch(this._state);\n    }\n\n    private async _startProxies(config: EmulationServiceInterface.Config): Promise<void> {\n        await this._emulationContext.getVideoProxy().start();\n\n        for (let i = 0; i < this._waveformChannels.length; i++) {\n            await this._waveformChannels[i].start(config);\n        }\n        await this._pcmChannel.start();\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _stopProxies(): void {\n        if (this._proxyState === ProxyState.stopped) {\n            return;\n        }\n\n        this._emulationContext.getVideoProxy().stop();\n        this._pcmChannel.stop();\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.stopped;\n    }\n\n    private _pauseProxies(): void {\n        if (this._proxyState !== ProxyState.running) {\n            return;\n        }\n\n        this._stopControlUpdates();\n\n        this._proxyState = ProxyState.paused;\n    }\n\n    private _resumeProxies(): void {\n        if (this._proxyState !== ProxyState.paused) {\n            return;\n        }\n\n        this._startControlUpdates();\n\n        this._proxyState = ProxyState.running;\n    }\n\n    private _startControlUpdates(): void {\n        if (this._controlProxyUpdateHandle === null) {\n            this._controlProxyUpdateHandle = setInterval(\n                () => this._controlProxy.sendUpdate(),\n                CONTROL_PROXY_UPDATE_INTERVAL\n            );\n        }\n    }\n\n    private _stopControlUpdates(): void {\n        if (this._controlProxyUpdateHandle !== null) {\n            clearInterval(this._controlProxyUpdateHandle);\n            this._controlProxyUpdateHandle = null;\n        }\n    }\n\n    stateChanged = new Event<EmulationServiceInterface.State>();\n    frequencyUpdate = new Event<number>();\n\n    private _rateLimitEnforced = true;\n\n    private _mutex = new Mutex();\n    private _worker: Worker = null;\n    private _rpc: RpcProvider = null;\n\n    private _state = EmulationServiceInterface.State.stopped;\n    private _lastError: Error = null;\n\n    private _emulationContext: EmulationContext = null;\n    private _frequency = 0;\n\n    private _waveformChannels = new Array<WaveformAudioProxy>(2);\n    private _pcmChannel: PCMAudioProxy = null;\n\n    private _controlProxy: ControlProxy = null;\n    private _controlProxyUpdateHandle: any = null;\n    private _proxyState = ProxyState.stopped;\n\n    private _savedConfig: EmulationServiceInterface.Config = null;\n}\n\nexport { EmulationService as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport { Event } from 'microevent.ts';\n\nimport Pool from '../../../../tools/pool/Pool';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\nimport PCMAudioEndpointInterface from '../../../driver/PCMAudioEndpointInterface';\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    PCMAudioReturnFrameMessage,\n    PCMAudioNewFrameMessage,\n    PCMAudioTogglePauseMessage,\n    PCMAudioParametersResponse\n} from './messages';\n\nclass PCMAudioProxy implements PCMAudioEndpointInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {\n        this._framePool.event.release.addHandler(PCMAudioProxy._onReleaseFragment, this);\n\n        this._signalReturnFrame = SIGNAL_TYPE.pcmAudioReturnFrame(this._index);\n    }\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioNewFrame(this._index), this._onNewFrame.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.pcmAudioTogglePause(this._index), this._onTogglePause.bind(this));\n\n        return this;\n    }\n\n    async start(): Promise<void> {\n        if (this._enabled) {\n            return;\n        }\n\n        const params = await this._rpc.rpc<void, PCMAudioParametersResponse>(\n            RPC_TYPE.getPCMAudioParameters(this._index)\n        );\n\n        this._sampleRate = params.sampleRate;\n        this._frameSize = params.frameSize;\n        this._paused = params.paused;\n\n        this._enabled = true;\n    }\n\n    stop(): void {\n        this._enabled = false;\n    }\n\n    isPaused(): boolean {\n        return this._paused;\n    }\n\n    getSampleRate(): number {\n        return this._sampleRate;\n    }\n\n    getFrameSize(): number {\n        return this._frameSize;\n    }\n\n    private static _onReleaseFragment(frame: Float32Array, self: PCMAudioProxy): void {\n        if (!self._frameMap.has(frame)) {\n            return;\n        }\n\n        self._rpc.signal<PCMAudioReturnFrameMessage>(\n            self._signalReturnFrame,\n            {\n                id: self._frameMap.get(frame),\n                buffer: frame.buffer\n            },\n            [frame.buffer]\n        );\n    }\n\n    private _onNewFrame(msg: PCMAudioNewFrameMessage): void {\n        if (!this._enabled) {\n            return;\n        }\n\n        const frame = this._framePool.get(),\n            data = new Float32Array(msg.buffer);\n\n        frame.adopt(data);\n        this._frameMap.set(data, msg.id);\n\n        this.newFrame.dispatch(frame);\n    }\n\n    private _onTogglePause(msg: PCMAudioTogglePauseMessage): void {\n        if (msg.paused === this._paused) {\n            return;\n        }\n\n        this._paused = msg.paused;\n        this.togglePause.dispatch(this._paused);\n    }\n\n    newFrame = new Event<PoolMemberInterface<Float32Array>>();\n\n    togglePause = new Event<boolean>();\n\n    private _sampleRate = 0;\n    private _frameSize = 0;\n    private _paused = false;\n\n    private _framePool = new Pool<Float32Array>(() => null);\n    private _frameMap = new WeakMap<Float32Array, number>();\n\n    private _enabled = false;\n\n    private _signalReturnFrame = '';\n}\n\nexport { PCMAudioProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport VideoEndpointInterface from '../../../driver/VideoEndpointInterface';\nimport { RpcProviderInterface } from 'worker-rpc';\nimport PoolMemberInterface from '../../../../tools/pool/PoolMemberInterface';\nimport Pool from '../../../../tools/pool/Pool';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    VideoNewFrameMessage,\n    VideoReturnSurfaceMessage,\n    VideoParametersResponse\n} from './messages';\n\nclass VideoProxy implements VideoEndpointInterface {\n    constructor(private _rpc: RpcProviderInterface) {\n        this._framePool.event.release.addHandler(VideoProxy._onDisposeFrame, this);\n    }\n\n    init(): void {\n        this._rpc.registerSignalHandler(SIGNAL_TYPE.videoNewFrame, this._onNewFrame.bind(this));\n    }\n\n    async start(): Promise<void> {\n        if (this._active) {\n            this.stop();\n        }\n\n        const videoParameters = await this._rpc.rpc<void, VideoParametersResponse>(RPC_TYPE.getVideoParameters);\n\n        this._active = true;\n        this._width = videoParameters.width;\n        this._height = videoParameters.height;\n        this._frameMap = new WeakMap<ImageData, number>();\n    }\n\n    stop(): void {\n        this._active = false;\n    }\n\n    getWidth(): number {\n        return this._width;\n    }\n\n    getHeight(): number {\n        return this._height;\n    }\n\n    private static _onDisposeFrame(imageData: ImageData, self: VideoProxy): void {\n        if (!self._active) return;\n\n        if (!self._frameMap.has(imageData)) {\n            console.warn('unknown imageData returned to proxy');\n            return;\n        }\n\n        const id = self._frameMap.get(imageData);\n        self._frameMap.delete(imageData);\n\n        self._rpc.signal<VideoReturnSurfaceMessage>(\n            SIGNAL_TYPE.videoReturnSurface,\n            {\n                id,\n                buffer: imageData.data.buffer\n            },\n            [imageData.data.buffer]\n        );\n    }\n\n    private _onNewFrame(message: VideoNewFrameMessage): void {\n        if (!this._active) {\n            console.warn('video proxy deactivated: ignoring frame');\n            return;\n        }\n\n        if (this._width !== message.width || this._height !== message.height) {\n            console.warn(`surface dimensions do not match; ignoring frame`);\n            return;\n        }\n\n        const frame = this._framePool.get();\n        const imageData = new ImageData(new Uint8ClampedArray(message.buffer), message.width, message.height);\n\n        frame.adopt(imageData);\n        this._frameMap.set(imageData, message.id);\n\n        this.newFrame.dispatch(frame);\n    }\n\n    newFrame = new Event<PoolMemberInterface<ImageData>>();\n\n    private _framePool = new Pool<ImageData>(() => null);\n    private _frameMap: WeakMap<ImageData, number> = null;\n\n    private _active = false;\n    private _width = 0;\n    private _height = 0;\n}\n\nexport { VideoProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport { Event } from 'microevent.ts';\n\nimport { RpcProviderInterface } from 'worker-rpc';\nimport WaveformAudioOutputInterface from '../../../../machine/io/WaveformAudioOutputInterface';\nimport ToneGenerator from '../../../../machine/stella/tia/ToneGenerator';\nimport StellaConfig from '../../../../machine/stella/Config';\nimport AudioOutputBuffer from '../../../../tools/AudioOutputBuffer';\n\nimport {\n    SIGNAL_TYPE,\n    RPC_TYPE,\n    WaveformAudioBufferChangeMessage,\n    WaveformAudioVolumeChangeMessage,\n    WaveformAudioParametersResponse\n} from './messages';\n\nclass WaveformAudioProxy implements WaveformAudioOutputInterface {\n    constructor(private _index: number, private _rpc: RpcProviderInterface) {}\n\n    init(): this {\n        this._rpc\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioBufferChange, this._onBufferChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.waveformAudioVolumeChange, this._onVolumeChangeSignal.bind(this))\n            .registerSignalHandler(SIGNAL_TYPE.audioStop, this._onStopSignal.bind(this));\n\n        return this;\n    }\n\n    async start(config: StellaConfig): Promise<void> {\n        const parameters = await this._rpc.rpc<void, WaveformAudioParametersResponse>(\n            RPC_TYPE.getWaveformAudioParameters(this._index)\n        );\n\n        this._toneGenerator.setConfig(config);\n        this.setVolume(parameters.volume);\n    }\n\n    setVolume(value: number): this {\n        this._volume = value;\n\n        return this;\n    }\n\n    getVolume(): number {\n        return this._volume;\n    }\n\n    getBuffer(key: number): AudioOutputBuffer {\n        return this._toneGenerator.getBuffer(key);\n    }\n\n    private _onVolumeChangeSignal(message: WaveformAudioVolumeChangeMessage): void {\n        if (message.index === this._index) {\n            this._volume = message.value;\n            this.volumeChanged.dispatch(this._volume);\n        }\n    }\n\n    private _onBufferChangeSignal(message: WaveformAudioBufferChangeMessage): void {\n        if (message.index === this._index) {\n            this.bufferChanged.dispatch(message.key);\n        }\n    }\n\n    private _onStopSignal(index: number): void {\n        if (index === this._index) {\n            this.stop.dispatch(undefined);\n        }\n    }\n\n    bufferChanged = new Event<number>();\n    volumeChanged = new Event<number>();\n    stop = new Event<void>();\n\n    private _toneGenerator = new ToneGenerator();\n    private _volume = 0;\n}\n\nexport { WaveformAudioProxy as default };\n","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport EventServiceInterface from '../EmulationServiceInterface';\nimport CartridgeInfo from '../../../../machine/stella/cartridge/CartridgeInfo';\n\nexport const RPC_TYPE = {\n    emulationPause: 'emulation/pause',\n    emulationReset: 'emulation/reset',\n    emulationResume: 'emulation/resume',\n    emulationSetRateLimit: 'emulation/setRateLimit',\n    emulationStart: 'emulation/start',\n    emulationStop: 'emulation/stop',\n    emulationFetchLastError: 'emulation/fetchLastError',\n    emulationPeek: 'emulation/peek',\n    emulationPoke: 'emulation/poke',\n    getVideoParameters: 'video/getParameters',\n    getWaveformAudioParameters: (index: number) => `audio/waveform/getParameters/${index}`,\n    getPCMAudioParameters: (index: number) => `audio/pcm/getParameters/${index}`,\n    setup: '/setup',\n};\nObject.freeze(RPC_TYPE);\n\nexport const SIGNAL_TYPE = {\n    emulationError: 'emulation/error',\n    emulationFrequencyUpdate: 'emulation/frequencyUpdate',\n    videoNewFrame: 'video/newFrame',\n    videoReturnSurface: 'video/returnSurface',\n    controlStateUpdate: 'control/stateUpdate',\n    waveformAudioVolumeChange: 'audio/waveform/volumeChange',\n    waveformAudioBufferChange: 'audio/waveform/bufferChange',\n    pcmAudioNewFrame: (index: number) => `audio/pcm/newFrame/${index}`,\n    pcmAudioTogglePause: (index: number) => `audio/pcm/togglePause/${index}`,\n    pcmAudioReturnFrame: (index: number) => `audio/pcm/returnFrame/${index}`,\n    audioStop: 'audio/stop',\n    messageFromAsyncIO: 'asyncIO/messageFrom',\n    messageToAsyncIO: 'asyncIO/messageTo'\n};\nObject.freeze(SIGNAL_TYPE);\n\nexport interface SetupMessage { }\n\nexport interface EmulationStartMessage {\n    buffer: { [i: number]: number; length: number };\n    config: EventServiceInterface.Config;\n    cartridgeType?: CartridgeInfo.CartridgeType;\n}\n\nexport interface EmulationPokeMessage {\n    index: number;\n    value: number;\n}\n\nexport interface VideoParametersResponse {\n    width: number;\n    height: number;\n}\n\nexport interface WaveformAudioParametersResponse {\n    volume: number;\n}\n\nexport interface VideoNewFrameMessage {\n    id: number;\n    width: number;\n    height: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface VideoReturnSurfaceMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n\nexport interface WaveformAudioVolumeChangeMessage {\n    index: number;\n    value: number;\n}\n\nexport interface WaveformAudioBufferChangeMessage {\n    index: number;\n    key: number;\n}\n\nexport interface PCMAudioParametersResponse {\n    sampleRate: number;\n    frameSize: number;\n    paused: boolean;\n}\n\nexport interface PCMAudioNewFrameMessage {\n    buffer: ArrayBuffer;\n    id: number;\n}\n\nexport interface PCMAudioTogglePauseMessage {\n    paused: boolean;\n}\n\nexport interface PCMAudioReturnFrameMessage {\n    id: number;\n    buffer: ArrayBuffer;\n}\n\nexport type MessageFromAsyncIOMessage = ArrayLike<number>;\n\nexport type MessageToAsyncIOMessage = Array<number>;\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar microevent_ts_1 = require(\"microevent.ts\");\nvar MSG_RESOLVE_TRANSACTION = \"resolve_transaction\", MSG_REJECT_TRANSACTION = \"reject_transaction\", MSG_ERROR = \"error\";\nvar RpcProvider = /** @class */ (function () {\n    function RpcProvider(_dispatch, _rpcTimeout) {\n        if (_rpcTimeout === void 0) { _rpcTimeout = 0; }\n        this._dispatch = _dispatch;\n        this._rpcTimeout = _rpcTimeout;\n        this.error = new microevent_ts_1.Event();\n        this._rpcHandlers = {};\n        this._signalHandlers = {};\n        this._pendingTransactions = {};\n        this._nextTransactionId = 0;\n    }\n    RpcProvider.prototype.dispatch = function (payload) {\n        var message = payload;\n        switch (message.type) {\n            case RpcProvider.MessageType.signal:\n                return this._handleSignal(message);\n            case RpcProvider.MessageType.rpc:\n                return this._handeRpc(message);\n            case RpcProvider.MessageType.internal:\n                return this._handleInternal(message);\n            default:\n                this._raiseError(\"invalid message type \" + message.type);\n        }\n    };\n    RpcProvider.prototype.rpc = function (id, payload, transfer) {\n        var _this = this;\n        var transactionId = this._nextTransactionId++;\n        this._dispatch({\n            type: RpcProvider.MessageType.rpc,\n            transactionId: transactionId,\n            id: id,\n            payload: payload\n        }, transfer ? transfer : undefined);\n        return new Promise(function (resolve, reject) {\n            var transaction = _this._pendingTransactions[transactionId] = {\n                id: transactionId,\n                resolve: resolve,\n                reject: reject\n            };\n            if (_this._rpcTimeout > 0) {\n                _this._pendingTransactions[transactionId].timeoutHandle =\n                    setTimeout(function () { return _this._transactionTimeout(transaction); }, _this._rpcTimeout);\n            }\n        });\n    };\n    ;\n    RpcProvider.prototype.signal = function (id, payload, transfer) {\n        this._dispatch({\n            type: RpcProvider.MessageType.signal,\n            id: id,\n            payload: payload,\n        }, transfer ? transfer : undefined);\n        return this;\n    };\n    RpcProvider.prototype.registerRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            throw new Error(\"rpc handler for \" + id + \" already registered\");\n        }\n        this._rpcHandlers[id] = handler;\n        return this;\n    };\n    ;\n    RpcProvider.prototype.registerSignalHandler = function (id, handler) {\n        if (!this._signalHandlers[id]) {\n            this._signalHandlers[id] = [];\n        }\n        this._signalHandlers[id].push(handler);\n        return this;\n    };\n    RpcProvider.prototype.deregisterRpcHandler = function (id, handler) {\n        if (this._rpcHandlers[id]) {\n            delete this._rpcHandlers[id];\n        }\n        return this;\n    };\n    ;\n    RpcProvider.prototype.deregisterSignalHandler = function (id, handler) {\n        if (this._signalHandlers[id]) {\n            this._signalHandlers[id] = this._signalHandlers[id].filter(function (h) { return handler !== h; });\n        }\n        return this;\n    };\n    RpcProvider.prototype._raiseError = function (error) {\n        this.error.dispatch(new Error(error));\n        this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_ERROR,\n            payload: error\n        });\n    };\n    RpcProvider.prototype._handleSignal = function (message) {\n        if (!this._signalHandlers[message.id]) {\n            return this._raiseError(\"invalid signal \" + message.id);\n        }\n        this._signalHandlers[message.id].forEach(function (handler) { return handler(message.payload); });\n    };\n    RpcProvider.prototype._handeRpc = function (message) {\n        var _this = this;\n        if (!this._rpcHandlers[message.id]) {\n            return this._raiseError(\"invalid rpc \" + message.id);\n        }\n        Promise.resolve(this._rpcHandlers[message.id](message.payload))\n            .then(function (result) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_RESOLVE_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: result\n        }); }, function (reason) { return _this._dispatch({\n            type: RpcProvider.MessageType.internal,\n            id: MSG_REJECT_TRANSACTION,\n            transactionId: message.transactionId,\n            payload: reason\n        }); });\n    };\n    RpcProvider.prototype._handleInternal = function (message) {\n        var transaction = typeof (message.transactionId) !== 'undefined' ? this._pendingTransactions[message.transactionId] : undefined;\n        switch (message.id) {\n            case MSG_RESOLVE_TRANSACTION:\n                if (!transaction || typeof (message.transactionId) === 'undefined') {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                transaction.resolve(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_REJECT_TRANSACTION:\n                if (!transaction || typeof (message.transactionId) === 'undefined') {\n                    return this._raiseError(\"no pending transaction with id \" + message.transactionId);\n                }\n                this._pendingTransactions[message.transactionId].reject(message.payload);\n                this._clearTransaction(this._pendingTransactions[message.transactionId]);\n                break;\n            case MSG_ERROR:\n                this.error.dispatch(new Error(\"remote error: \" + message.payload));\n                break;\n            default:\n                this._raiseError(\"unhandled internal message \" + message.id);\n                break;\n        }\n    };\n    RpcProvider.prototype._transactionTimeout = function (transaction) {\n        transaction.reject('transaction timed out');\n        this._raiseError(\"transaction \" + transaction.id + \" timed out\");\n        delete this._pendingTransactions[transaction.id];\n        return;\n    };\n    RpcProvider.prototype._clearTransaction = function (transaction) {\n        if (typeof (transaction.timeoutHandle) !== 'undefined') {\n            clearTimeout(transaction.timeoutHandle);\n        }\n        delete this._pendingTransactions[transaction.id];\n    };\n    return RpcProvider;\n}());\n(function (RpcProvider) {\n    var MessageType;\n    (function (MessageType) {\n        MessageType[MessageType[\"signal\"] = 0] = \"signal\";\n        MessageType[MessageType[\"rpc\"] = 1] = \"rpc\";\n        MessageType[MessageType[\"internal\"] = 2] = \"internal\";\n    })(MessageType = RpcProvider.MessageType || (RpcProvider.MessageType = {}));\n    ;\n})(RpcProvider || (RpcProvider = {}));\nexports.default = RpcProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RpcProvider_1 = require(\"./RpcProvider\");\nexports.RpcProvider = RpcProvider_1.default;\n","/* eslint-disable promise/prefer-await-to-then */\n\nconst methodMap = [\n\t[\n\t\t'requestFullscreen',\n\t\t'exitFullscreen',\n\t\t'fullscreenElement',\n\t\t'fullscreenEnabled',\n\t\t'fullscreenchange',\n\t\t'fullscreenerror',\n\t],\n\t// New WebKit\n\t[\n\t\t'webkitRequestFullscreen',\n\t\t'webkitExitFullscreen',\n\t\t'webkitFullscreenElement',\n\t\t'webkitFullscreenEnabled',\n\t\t'webkitfullscreenchange',\n\t\t'webkitfullscreenerror',\n\n\t],\n\t// Old WebKit\n\t[\n\t\t'webkitRequestFullScreen',\n\t\t'webkitCancelFullScreen',\n\t\t'webkitCurrentFullScreenElement',\n\t\t'webkitCancelFullScreen',\n\t\t'webkitfullscreenchange',\n\t\t'webkitfullscreenerror',\n\n\t],\n\t[\n\t\t'mozRequestFullScreen',\n\t\t'mozCancelFullScreen',\n\t\t'mozFullScreenElement',\n\t\t'mozFullScreenEnabled',\n\t\t'mozfullscreenchange',\n\t\t'mozfullscreenerror',\n\t],\n\t[\n\t\t'msRequestFullscreen',\n\t\t'msExitFullscreen',\n\t\t'msFullscreenElement',\n\t\t'msFullscreenEnabled',\n\t\t'MSFullscreenChange',\n\t\t'MSFullscreenError',\n\t],\n];\n\nconst nativeAPI = (() => {\n\tif (typeof document === 'undefined') {\n\t\treturn false;\n\t}\n\n\tconst unprefixedMethods = methodMap[0];\n\tconst returnValue = {};\n\n\tfor (const methodList of methodMap) {\n\t\tconst exitFullscreenMethod = methodList?.[1];\n\t\tif (exitFullscreenMethod in document) {\n\t\t\tfor (const [index, method] of methodList.entries()) {\n\t\t\t\treturnValue[unprefixedMethods[index]] = method;\n\t\t\t}\n\n\t\t\treturn returnValue;\n\t\t}\n\t}\n\n\treturn false;\n})();\n\nconst eventNameMap = {\n\tchange: nativeAPI.fullscreenchange,\n\terror: nativeAPI.fullscreenerror,\n};\n\n// eslint-disable-next-line import/no-mutable-exports\nlet screenfull = {\n\t// eslint-disable-next-line default-param-last\n\trequest(element = document.documentElement, options) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst onFullScreenEntered = () => {\n\t\t\t\tscreenfull.off('change', onFullScreenEntered);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tscreenfull.on('change', onFullScreenEntered);\n\n\t\t\tconst returnPromise = element[nativeAPI.requestFullscreen](options);\n\n\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\treturnPromise.then(onFullScreenEntered).catch(reject);\n\t\t\t}\n\t\t});\n\t},\n\texit() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!screenfull.isFullscreen) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst onFullScreenExit = () => {\n\t\t\t\tscreenfull.off('change', onFullScreenExit);\n\t\t\t\tresolve();\n\t\t\t};\n\n\t\t\tscreenfull.on('change', onFullScreenExit);\n\n\t\t\tconst returnPromise = document[nativeAPI.exitFullscreen]();\n\n\t\t\tif (returnPromise instanceof Promise) {\n\t\t\t\treturnPromise.then(onFullScreenExit).catch(reject);\n\t\t\t}\n\t\t});\n\t},\n\ttoggle(element, options) {\n\t\treturn screenfull.isFullscreen ? screenfull.exit() : screenfull.request(element, options);\n\t},\n\tonchange(callback) {\n\t\tscreenfull.on('change', callback);\n\t},\n\tonerror(callback) {\n\t\tscreenfull.on('error', callback);\n\t},\n\ton(event, callback) {\n\t\tconst eventName = eventNameMap[event];\n\t\tif (eventName) {\n\t\t\tdocument.addEventListener(eventName, callback, false);\n\t\t}\n\t},\n\toff(event, callback) {\n\t\tconst eventName = eventNameMap[event];\n\t\tif (eventName) {\n\t\t\tdocument.removeEventListener(eventName, callback, false);\n\t\t}\n\t},\n\traw: nativeAPI,\n};\n\nObject.defineProperties(screenfull, {\n\tisFullscreen: {\n\t\tget: () => Boolean(document[nativeAPI.fullscreenElement]),\n\t},\n\telement: {\n\t\tenumerable: true,\n\t\tget: () => document[nativeAPI.fullscreenElement] ?? undefined,\n\t},\n\tisEnabled: {\n\t\tenumerable: true,\n\t\t// Coerce to boolean in case of old WebKit.\n\t\tget: () => Boolean(document[nativeAPI.fullscreenEnabled]),\n\t},\n});\n\nif (!nativeAPI) {\n\tscreenfull = {isEnabled: false};\n}\n\nexport default screenfull;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\n *   This file is part of 6502.ts, an emulator for 6502 based systems built\n *   in Typescript\n *\n *   Copyright (c) 2014 -- 2020 Christian Speckner and contributors\n *\n *   Permission is hereby granted, free of charge, to any person obtaining a copy\n *   of this software and associated documentation files (the \"Software\"), to deal\n *   in the Software without restriction, including without limitation the rights\n *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the Software is\n *   furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included in all\n *   copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n *   SOFTWARE.\n */\n\nimport Stellerator from './Stellerator';\n\nexport default {\n    Stellerator\n};\n"],"names":["root","factory","exports","module","define","amd","self","Object","defineProperty","value","tslib_1","Semaphore_1","Mutex","cancelError","this","_semaphore","default","prototype","acquire","__awaiter","__generator","_b","label","sent","runExclusive","callback","isLocked","waitForUnlock","release","cancel","errors_1","Semaphore","_value","_cancelError","E_CANCELED","_weightedQueues","_weightedWaiters","weight","_this","Error","concat","Promise","resolve","reject","push","_dispatch","_a","trys","getValue","setValue","forEach","queue","entry","queueEntry","shift","previousValue","previousWeight","_newReleaser","_drainUnlockWaiters","called","waiter","E_ALREADY_LOCKED","E_TIMEOUT","tryAcquire","withTimeout","Mutex_1","enumerable","get","withTimeout_1","tryAcquire_1","__exportStar","sync","alreadyAcquiredError","timeout","timeoutError","undefined","isTimeout","handle","ticket","e_1","setTimeout","Array","isArray","clearTimeout","then","factories","context","payload","Event","hasHandlers","_handlers","_contexts","_createDispatcher","addHandler","handler","isHandlerAttached","_updateHasHandlers","removeHandler","idx","_getHandlerIndex","splice","length","handlerCount","dispatch","src","argsHandlers","argsContexts","i","Function","bind","apply","compileFactory","Event_1","opBoot","state","bus","p","readWord","dispatchInterrupt","vector","nextOpAddr","nmi","irq","write","s","flags","opIrq","opNmi","constructor","_bus","_rng","executionState","State","_opCycles","_instructionCallback","_invalidInstructionCallback","_interruptPending","_nmiPending","_interuptCheck","_halted","_operand","_lastInstructionPointer","_currentAddressingMode","_dereference","reset","setInterrupt","isInterrupt","halt","resume","isHalt","setInvalidInstructionCallback","getInvalidInstructionCallback","getLastInstructionPointer","a","int","x","y","cycle","read","_checkForInterrupts","_fetch","instruction","opcodes","base","addressingMode","dereference","slowIndexedAccess","operation","ops","opAdc","opAnd","opAslAcc","opAslMem","opNop","opJmp","opBit","opBrk","opClc","opCld","opCli","opClv","opCmp","opCpx","opCpy","opDec","opDex","opDey","opEor","opInc","opInx","opIny","opJsr","opLda","opLdx","opLdy","opLsrAcc","opLsrMem","opOra","opPhp","opPha","opPla","opPlp","opRolAcc","opRolMem","opRorAcc","opRorMem","opRti","opRts","opSbc","opSec","opSed","opSei","opSta","opStx","opSty","opTax","opTay","opTsx","opTxa","opTxs","opTya","opArr","opAlr","opAxs","opDcp","opLax","opSlo","opAax","opLar","opIsc","opAac","opAtx","opRra","opRla","CpuInterface","Factory","_type","create","rng","Type","stateMachine","batchedAccess","Instruction","effectiveAddressingMode","getSize","OperationMap","__init","opcode","j","set","_opcode","_operation","_addressingMode","_effectiveAdressingMode","_halt","_pollInterruptsAfterLastInstruction","_operations","_opBoot","boot","_opIrq","_opNmi","compiler","op","compile","_lastResult","cycleType","address","pollInterrupts","_pollInterrupts","nextStep","restoreFlagsFromStack","setFlagsNZ","operand","d0","d1","sum","result","old","diff","returnPtr","addrLo","_state","_createAddressing","adc","deref","o","genUnary","nullaryOneCycle","aslImmediate","readModifyWrite","aslRmw","writeOp","bit","brk","cmp","genRmw","genNullary","jsr","lsrImmediate","lsrRmw","pull","rolImmediate","rolRmw","rorImmediate","rorRmw","rti","rts","sbc","branch","aac","aax","alr","arr","axs","dcp","isc","rla","rra","slo","next","immediate","zeroPage","absolute","zeroPageX","zeroPageY","absoluteX","absoluteY","indexedIndirectX","indirectIndexedY","indirect","poll","Absolute","_result","_fetchLo","_fetchHi","_next","freezeImmutables","Immutable","AbsoluteIndexed","indexExtractor","index","_indexExtractor","_carry","_writeOp","_dereferenceAndCarry","Dereference","Immediate","_fetchOperand","IndexedIndirectX","_fetchAddress","_address","_addIndex","Indirect","_fetchAddressLo","_fetchAddressHi","IndexedIndirectY","ZeroPage","ZeroPageIndexed","static","Branch","predicate","_fetchTarget","_predicate","_firstDummyRead","_target","_secondDummyRead","Jsr","_fetchPcl","_addressLo","_dummyStackRead","_pushPch","_pushPcl","_fetchPch","NullaryOneCycle","_executeOperation","Pull","_dummyRead","_incrementS","_pull","Push","_push","ReadModifyWrite","_read","_dummyWrite","_write","Rti","_dummyOperandRead","_popP","_popPcl","_popPch","Rts","_incrementP","Write","getRegister","Boot","_pre1Step","_pre2Step","_stack1Step","_stack2Step","_stack3Step","_readTargetLoStep","_targetAddress","_readTargetHiStep","Interrupt","defaultVector","isBrk","_isBrk","_vector","_defaultVector","_pushFlags","_left","_right","_up","_down","_fire","getLeft","getRight","getUp","getDown","getFire","_rows","row","col","getKey","valueChanged","_fireSwitch","stateChanged","beforeRead","peek","toggle","Config","config","tvMode","enableAudio","randomSeed","emulatePaddles","frameStart","pcmAudio","cpuType","controllerPort0","controllerPort1","getClockHz","_selectSwitch","_resetButton","_colorSwitch","_difficutlyP0","_difficutlyP1","getSelectSwitch","getResetButton","getColorSwitch","getDifficultySwitchP0","getDifficultySwitchP1","CartridgeInfo","CartridgeType","getAllTypes","vanilla_2k","vanilla_4k","bankswitch_2k_cv","bankswitch_8k_F8","bankswitch_8k_E0","bankswitch_8k_3F","bankswitch_8k_FE","bankswitch_8k_UA","bankswitch_8k_econobanking","bankswitch_8k_pp","bankswitch_12k_FA","bankswitch_8k_DPC","bankswitch_16k_F6","bankswitch_16k_E7","bankswitch_FA2","bankswitch_32k_F4","bankswitch_3E","bankswitch_64k_F0","bankswitch_64k_EF","bankswitch_supercharger","bankswitch_dpc_plus","bankswitch_cdf","unknown","describeCartridgeType","cartridgeType","FREQUENCY_DIVISIORS","decode","POLY0","Int8Array","POLY1","POLY2","POLY4","POLY5","POLY9","POLY68","POLYS","_config","setConfig","tone","frequency","getBuffer","key","poly","content","Float32Array","sampleRate","f","count","offset","_content","_sampleRate","getLength","getContent","getSampleRate","replaceUnderlyingBuffer","buffer","_capacity","evict","_size","_index","_buffer","size","pop","item","fn","clear","capacity","encodings","Uint8Array","decodeChar","data","charCodeAt","decodeNibble","nibbles","decodedSize","padding","getPadding","decoded","nibble","isSafari","window","isIOS","navigator","platform","match","maxTouchPoints","immutables","Symbol","target","immutableProperties","prop","writable","configurable","_factory","event","dispose","_pool","_poolSize","member","newItem","victim","_releaseMember","_disposeMember","_isAvailable","_isDisposed","position","_poolPosition","_releaseCB","_disposeCB","adopt","AsyncIO","message","_io","io","_onAsyncIOMessage","unbind","send","noFullscrenApi","_videoDriver","_zIndex","_fullscreenClass","_resizeListener","_resizeHandle","_adjustSizeForFullscreen","_changeListener","_onChange","_engaged","engage","addEventListener","on","request","getCanvas","disengage","_resetSize","removeEventListener","exit","isEngaged","isFullscreen","off","element","style","width","height","maxWidth","maxHeight","top","left","zIndex","document","body","classList","remove","resize","innerWidth","innerHeight","add","readButton","button","pressed","joystickTargets","auxTargets","GamepadDriver","_onGamepadConnect","probeGamepads","_onGamepadDisconnect","gamepadCountChanged","_shadows","_mappings","Map","_mappingStates","WeakMap","_mappingTargets","_bound","_joysticks","_auxSwitches","_gamepadCount","_lastPoll","setMapping","defaultMapping","cnt","gamepads","getGamepads","init","deinit","joysticks","auxSwitches","_controlledSwitches","swtch","shadow","setState","_onBeforeSwitchRead","getGamepadCount","mapping","id","states","targets","m","indexOf","clearMapping","delete","_readGamepads","probeGamepadCount","_getSwitchForTarget","joystick","switches","keys","map","now","Date","joystickIndex","gamepad","mappingEntry","type","buttons","axis","axes","sign","_x","_listener","_onDocumentMouseMove","paddle","_paddle","e","dx","screenX","Video","_canvas","_onContextLost","preventDefault","_gl","_mainProgram","_vertexCoordinateBuffer","_textureCoordinateBuffer","_sourceTexture","_phosphorProcessor","_ntscProcessor","_integerScalingProcessor","_scanlineProcessor","_processors","_onContextRestored","_getRenderingContext","_video","_capabilities","_anmiationFrameHandle","_pendingFrames","_consecutiveUnderflows","_hasFrame","gamma","scalingMode","phosphorLevel","scanlineLevel","tvEmulation","frame","_updateCanvasSize","vsh","plain","source","fsh","blitWithGamma","use","uniform1i","_createVertexCoordinateBuffer","_createTextureCoordinateBuffer","_configureSourceTexture","_applyConfiguration","close","gl","_cancelDraw","deleteBuffer","deleteTexture","destroy","_updateVertexBuffer","_configureProcessors","_scheduleDraw","_draw","video","newFrame","_frameHandler","getConfig","updateConfig","imageDataPoolMember","contextOptions","alpha","depth","antialias","getContext","detect","requestAnimationFrame","_onAnimationFrame","cancelAnimationFrame","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texture","processor","render","getTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","LINEAR","TEXTURE_MAG_FILTER","bindVertexAttribArray","FLOAT","bindFramebuffer","FRAMEBUFFER","viewport","drawingBufferWidth","drawingBufferHeight","clearColor","COLOR_BUFFER_BIT","drawArrays","TRIANGLE_STRIP","targetWidth","targetHeight","scaleX","scaleY","west","north","Math","floor","vertexData","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","clientWidth","clientHeight","pixelRatio","devicePixelRatio","createTexture","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","configure","getWidth","getHeight","uniform1f","INTERACTION_EVENTS","audioContextCtor","AudioContext","webkitAudioContext","waitMax","waitFor","r","PreallocatedContext","_interactionListener","interactionRequired","mutex","suspend","destination","channelCount","console","warn","stopListening","preallocatedContext","waveformChannels","pcmChannels","fragmentSize","_touchListener","_context","_mutex","_suspended","_merger","_waveformChannels","_pcmChannels","_channels","_cache","_isBound","createChannelMerger","connect","channel","waveformSources","pcmSources","pause","setMasterVolume","volume","_fractionalIndex","_needsData","_ratio","sourceRate","targetRate","sample","needsData","PCMChannel","_hostFragmentSize","_outputSampleRate","_bufferSize","_volume","_gain","_processor","_bufferUnderrun","_fragmentRing","_fragmentSize","_inputSampleRate","_fragmentIndex","_currentFragment","_lastFragment","_resampler","createGain","gain","createScriptProcessor","bufferSize","onaudioprocess","_processAudio","getChannelData","audio","_audio","getFrameSize","ceil","b","_onNewFragment","fragment","outputBuffer","bufferIndex","fillBuffer","until","previousFragmentBuffer","isPaused","fragmentBuffer","WaveformChannel","_source","_masterVolume","getVolume","_updateGain","volumeChanged","_onVolumeChanged","bufferChanged","_onBufferChanged","stop","_onStop","has","sampleBuffer","audioBuffer","createBufferSource","loop","start","_dirty","framebufferSupportTextureType","framebuffer","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","fbStatus","checkFramebufferStatus","deleteFramebuffer","FRAMEBUFFER_COMPLETE","detectFloatTextureSupport","getExtension","detectHalfFloatTextureSupport","extHalfFLoat","HALF_FLOAT_OES","shaderSupportsPrecision","shaderType","precisionType","format","getShaderPrecisionFormat","precision","canvas","createElement","floatTextures","halfFloatTextures","highpInFsh","FRAGMENT_SHADER","HIGH_FLOAT","highpInVsh","VERTEX_SHADER","_width","_height","_widthFrom","_heightFrom","_widthTo","_heightTo","_texture","_program","_framebuffer","_initialized","blit","_reconfigure","widthTo","heightTo","_programPass1","_programPass2","_targetPass1","_targetPass2","ntscPass1","ntscPass2","_pass","_textureType","mode","textureIn","textureOut","program","_texture0","_texture1","phosphor","TEXTURE1","t","level","compileShader","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","Program","_vsh","_fsh","_attributeLocations","_uniformLocations","vshSource","fshSource","layout","a_VertexPosition","createProgram","attrib","bindAttribLocation","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","deleteShader","useProgram","getAttribLocation","name","location","getUniformLocation","attribute","normalized","stride","vertexAttribPointer","enableVertexAttribArray","uniform","scanlines","precisionFsh","capabilities","precisionVsh","lumaFilter","chromaFilter","maybeUnpack","expr","fill","_","join","_reset","_select","_difficultyPlayer1","_difficultyPlayer2","_color","_boundControlPanel","controlPanel","select","difficultyPlayer1","difficultyPlayer2","color","Stellerator","canvasElt","workerUrl","_pauseHandler","_emulationService","getState","paused","running","_canvasElt","_serviceInitialized","_fullscreenVideo","_audioDriver","_keyboardIO","_asyncIO","_touchIO","_gamepad","_controlPanel","stopped","_driverManager","ScalingMode","qis","TvEmulation","svideo","enableKeyboard","enableTouch","touchLeftHanded","touchJoystickSensitivity","keyboardTarget","fullscreenViaKeyboard","paddleViaMouse","pauseViaKeyboard","pauseViaTouch","fullscreenViaTouch","enableGamepad","resetViaKeyboard","frequencyUpdate","stateChange","newState","_mapState","_createDrivers","addDriver","getControlPanel","log","setGamma","_createVideoDriver","getGamma","setScalingMode","getScalingMode","setTvEmulation","getTvEmulation","setPhosphorLevel","getPhosphorLevel","setScanlineLevel","getScanlineLevel","toggleFullscreen","fullscreen","setVolume","max","min","audioEnabled","getMasterVolume","triggerKeydownAction","triggerAction","Actions","triggerKeyupAction","setCanvas","_createTouchDriver","releaseCanvas","_removeVideoDriver","_removeTouchDriver","cartridge","stellaConfig","_convertTvMode","_convertControllerType","CpuAccuracy","cpuAccuracy","overlay","keypad0Mappings","keypad1Mappings","asyncIO","run","lastError","getLastError","asyncIOSend","TvMode","ntsc","pal","secam","controllerType","ControllerType","paddles","keypad","getPCMChannel","error","getJoystick","getKeypad","togglePause","hardReset","getPaddle","asyncIOMessage","driver","getAsyncIO","removeDriver","getVideo","allCartridgeTypes","SwitchProxy","_boundSwitch","_onBoundStateChange","_setState","mkSwitch","mkTrigger","trigger","KeyboardIO","mappings","defaultMappings","_keydownListener","_keyupListener","_joystick0","_joystick1","_keypad0","_keypad1","_dispatchTable","_compiledMappings","_compileMappings","joystick0","joystick1","keypad0","keypad1","_updateActionTable","keyCode","modifiers","shiftKey","ctrlKey","altKey","action","values","compileMapping","keycode","spec","NormalizedTouch","touch","boundingRect","getBoundingClientRect","clientX","clientY","x0","y0","_joystickSensitivity","_leftHanded","_onTouchStart","changedTouches","normalizedTouch","identifier","_isAlt","_pendingTouches","_fullscreenDoubleTapDetector","startTouch","_joystick","cancelTouch","_onTouchEnd","endTouch","_onTouchMove","deltaX","deltaY","abs","sqrt","sin","cos","_bindListeners","_unbindListeners","_pcmAudio","channels","_driver","_maxTapLength","_timeout","_touching","_lastTouchEligible","_lastTouchStart","_lastTouchEnd","isDispatching","DriverManager","_drivers","_driversBound","emulationService","_shouldBindDrivers","_bindDrivers","_onEmuStateChange","_unbindDrivers","binder","DriverContext","getEmulationContext","driverContext","EmulationServiceInterface","_rpc","registerSignalHandler","SIGNAL_TYPE","messageFromAsyncIO","signal","messageToAsyncIO","from","ControlProxy","_paddles","_keypads","sendUpdate","controlStateUpdate","joystickState","_joystickState","keypadState","_keypadState","paddleState","_paddleState","controlPanelState","_controlPanelState","up","down","right","fire","rows","difficulty0","difficulty1","_videoProxy","_controlProxy","_pcmChannel","_asyncIOProxy","getWaveformChannels","getVideoProxy","_stellaWorkerUri","_rateLimitEnforced","_worker","_lastError","_emulationContext","_frequency","_controlProxyUpdateHandle","_proxyState","_savedConfig","Worker","RpcProvider","transfer","postMessage","videoProxy","controlProxy","asyncIOProxy","onmessage","messageEvent","emulationFrequencyUpdate","_onFrequencyUpdate","emulationError","_onEmulationError","rpc","RPC_TYPE","emulationStart","_startProxies","_applyState","emulationPause","_pauseProxies","emulationStop","_stopProxies","emulationReset","emulationResume","_resumeProxies","setRateLimit","enforce","emulationSetRateLimit","emulationPeek","poke","emulationPoke","getFrequency","getRateLimit","_fetchLastError","emulationFetchLastError","_startControlUpdates","_stopControlUpdates","setInterval","clearInterval","PCMAudioProxy","_frameSize","_paused","_framePool","_frameMap","_enabled","_signalReturnFrame","_onReleaseFragment","pcmAudioReturnFrame","pcmAudioNewFrame","_onNewFrame","pcmAudioTogglePause","_onTogglePause","params","getPCMAudioParameters","frameSize","msg","VideoProxy","_active","_onDisposeFrame","videoNewFrame","videoParameters","getVideoParameters","imageData","videoReturnSurface","ImageData","Uint8ClampedArray","_toneGenerator","waveformAudioBufferChange","_onBufferChangeSignal","waveformAudioVolumeChange","_onVolumeChangeSignal","audioStop","_onStopSignal","parameters","getWaveformAudioParameters","setup","freeze","extendStatics","d","setPrototypeOf","__proto__","hasOwnProperty","call","__extends","TypeError","String","__","__assign","assign","n","arguments","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","c","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","fulfilled","step","rejected","done","g","verb","iterator","v","__createBinding","k","k2","__esModule","__values","__read","ar","__spread","__spreadArrays","il","jl","__spreadArray","to","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__importDefault","__classPrivateFieldGet","receiver","kind","__classPrivateFieldSet","__classPrivateFieldIn","microevent_ts_1","MSG_RESOLVE_TRANSACTION","MSG_REJECT_TRANSACTION","MSG_ERROR","_rpcTimeout","_rpcHandlers","_signalHandlers","_pendingTransactions","_nextTransactionId","MessageType","_handleSignal","_handeRpc","internal","_handleInternal","_raiseError","transactionId","transaction","timeoutHandle","_transactionTimeout","registerRpcHandler","deregisterRpcHandler","deregisterSignalHandler","filter","h","reason","_clearTransaction","RpcProvider_1","methodMap","nativeAPI","unprefixedMethods","returnValue","methodList","exitFullscreenMethod","method","entries","eventNameMap","change","fullscreenchange","fullscreenerror","screenfull","documentElement","options","onFullScreenEntered","returnPromise","requestFullscreen","catch","onFullScreenExit","exitFullscreen","onchange","onerror","eventName","defineProperties","Boolean","fullscreenElement","isEnabled","fullscreenEnabled","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","obj","toStringTag"],"sourceRoot":""}