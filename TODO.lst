INITIAL GOALS
 Joystick compatible
 Repl Fib(n) from SICP
 X Repl Sqrt(x) from SICP - cancelled
 Play Music 
 Change bkfg colors
 Change sprite
 Be able to ~play the pong game from Basic Programming
 See https://huguesjohnson.com/programming/atari-2600-basic/ 
   - move player(s) around with joystick 
   - midpoint and slope of line
   - greatest common divisor
   - something with collision detection
 See sample programs in Atari Basic manual
   - https://atariage.com/manual_html_page.php?SoftwareID=852
 See uLisp sample programs

DONE
  - basic eval
  - stubbed out math functions
  - bcd conversion function
  - tail recursion optimization
  - display tester 1 (all positions indent with separators)
  - display tester 2 (symmetric indent)
    - create display plan in vblank to allow closer spacing of cells
    - encode indent level + display type
  - tester 3 (cursor movement dynamics)
    - bracket current line
    - scrolling
    - joystick to move cursor around
    - line highlight
  - tester 4 (editor)
    - display cursor to point at current cell
    - display cursor stays in bounds of cells
    - display cursor can be at end of a list
  - virtual keyboard 1
    - button press opens keyboard
    - with open keyboard movement selects new value
    - keyboard opens on curr cell value 
    - scrolls through appropriate values
    - with press display cursor locates curr cell and replaces
    - add new cell 
    - delete cell
  - demo 1
      - start with blank program, make + 1 2
  - game modes 1
      - scratch
  - controls 1
      - moving past last line goes to menu
      - moving above first line goes to menu
      - eval when button push in menu
  - demo 2
      - eval demo program + 1 2
  - menu 1
      - function menu displayed on screen
  - menu 2
      - function assignment when push in menu
  - demo 3
      - fib program
      - eval demo program + 1 99
  - display 4 
      - show numbers
      - screen layout is ... better
  - virtual keyboard 2
      - number edit
      - up to go back
      - number edit shouldn't return right away
      - number cursor is at digit being edited
  - library 1
      - beep (as continuation)
      - multiply (as continuation)
  - demo 5
      - play beep
  - controls 2
      - game mode switch when push in menu
  - interpreter
     - safety against no free mem left
     - crude safety (inexact) against stack overflow
  - code 2
    - compaction pass
  - code 2
      - compaction pass
        - don't use extra HMOV for shims
        - 75 logo color bytes removed
        - 375 bytes of logo
        - 80 bytes of symbol function lookup
        - 32 bytes of symbol / menu lookup
        - 196 unused bytes between symbol lookup and symbol data
   - reduce need for extra lookups
   - bigger symbol table? 
   - game modes 2
      - calc mode
  - bugs
    - blank program is weird
    - binary to decimal conversion is slow, blows out display
    - adding removing numbers at end messes up program (probably free memory issues)
    - beep goes too fast (need to take a beat after we eval)
    - suspect if the repl begins with an if, we don't evaluate the test properly
    - in general a const in an if hasn't been tested
    - if try to delete and recreate fib, crashes (probably free memory issue)
    - hmove bar in menu
    - music note length too short
    - sprites in display area bleed
    - unstable frame size per mode
    - evaluating empty list has random results
    - fix bug in ?
    - progn ignoring last entry
    - ? of non-funcall results in immediate return
    - loop not tested
    - progn doesn't tail recurse
  - menu 3
      - allow cyclical switching
      - separate lines for function vs mode
      - mode switch show all the names of modes
      - different colors depending on function selection
  - game modes 2
      - music game (simon?)
        - stable-ish framerate
        - changes color with different beeps
      - ball game
        - stable-ish framerate
        - draw players
        - reset game
      - towers of hanoi
        - stable-ish framerate
        - draw disks
        - move disks
        - reset game
      - calc
        - stable-ish framerate
  - library 2
      - modulo function
      - music functions (map... or progn?)
      - game functions
  - lang 1
     - loop implemented
     - car, cdr implemented
     - quote, apply implemented
     - cons implemented
  - dev support
     - self hosted stellerator page
       - display and editing of programs as text
       - allow load/save of programs
  - virtual keyboard 3
      - extend to all commands
   - virtual keyboard 4
    - too slow to scroll through keys
  - eval mode
     - be able to interrupt eval with switch (reset? select?)
  - dedicated executable for steps game
BETA
  - lang 1
      - gc of cons implemented
  - library 1
      - div functions working
      - beep function retune?
      - examples of all functions (make sure all basically work)
  - game modes 2
      - ball game
        - pong-like example
        - stable framerate both repl and eval
        - change player graphics
      - music game (simon?)
        - ringing changes examples
        - be able to handle DSS generative examples as demos
          - https://www.accum.se/~tjoppen/files/vcs/genmusic1/
      - towers of hanoi
        - joystick / keyboard control example
  - dev support
     - self hosted stellerator page
       - keyboard controller support
       - ide online tips
       - instruction manual
        - controls
         - navigation layout
         - commands
         - example programs
     - challenge award program
     - gitlab deployment
     - some way to do unit tests (stellerator debugger?)
     - protection against var access?
  - virtual keyboard 3
      - keyboard controller support
        - basic support
        - use switches to turn keyboard on/off
      - quote support
        - no way to properly quote a function from the editor
      - can only see numbers in number mode
  - menu 4
      - allow for mode selection and reset without switching?
  - code 2
      - hygiene
        - clean up temp variable usage
        - clean up graphics on/offs
      - compaction pass
        - use .byte $2C skip next 2 bytes trick?
        - multiple ways to repl - can consolidate?
        - multiple ways to draw - can consolidate?
        - 87 bytes of sleeps
        - 24 zp y offset lookups
      - simplify REPL
        - use PF0 to hide HMOVE + switch to std HMOVE..?.
        - use only 4 line repl
  - bugs
    - reset in eval corrupts repl display
    - clicky beeps when playing
    - sound just not right in stellerator
    - long program goes over timing limit (+ (progn (+ 1 2) (+ 3 4) (+ 5 6)) 2)
    - disks kernel adds extra line in some configurations
    - repl adds +/- 1 line
    - complex program takes too long to analyze in vblank
SPRINKLES
  - eval mode
     - real safeties against stack overflow
  - font
     - tune font / symbols
     - null display on complex lines no box
  - title screen
     - logo 
     - shoutouts
  - help / attract mode 1 
      - occasional blinkyness of controls
  - virtual keyboard 4
      - empty at first
      - blinky cursor when in repl
      - no cell boxes on numbers 
      - no cell box on quote
      - cancel move undoes changes
      - optimize for context
  - eval
     - minimum eval display time 1 second
     - transition from repl to eval..?
     - song that plays during eval?
     - show free mem / stack / heap during eval
  - lang
     - loopvar
BONUS 
  - dedicated music sequencer version
  - dedicated hanoi version
  - alt/bonus game modes/dedicated 
    - tictactoe? 
    - mastermind / cows and bulls
    - robot tanks 
    - steps + lisp dedicated (tweetmaze)
      - stable framerate both repl and eval
      - draw steps
      - move left/right commands
      - different mazes
      - reset game
      - play tune on game end
