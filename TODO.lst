INITIAL GOALS
 Joystick compatible
 Repl Fib(n) from SICP
 X Repl Sqrt(x) from SICP - cancelled
 Play Music 
 Change bkfg colors
 Change sprite
 Be able to ~play the pong game from Basic Programming
 See https://huguesjohnson.com/programming/atari-2600-basic/ 
   - move player(s) around with joystick 
   - midpoint and slope of line
   - greatest common divisor
   - something with collision detection
 See sample programs in Atari Basic manual
   - https://atariage.com/manual_html_page.php?SoftwareID=852
 See uLisp sample programs


DONE
  - basic eval
  - stubbed out math functions
  - bcd conversion function
  - tail recursion optimization
  - display tester 1 (all positions indent with separators)
  - display tester 2 (symmetric indent)
    - create display plan in vblank to allow closer spacing of cells
    - encode indent level + display type
  - tester 3 (cursor movement dynamics)
    - bracket current line
    - scrolling
    - joystick to move cursor around
    - line highlight
  - tester 4 (editor)
    - display cursor to point at current cell
    - display cursor stays in bounds of cells
    - display cursor can be at end of a list
  - virtual keyboard 1
    - button press opens keyboard
    - with open keyboard movement selects new value
    - keyboard opens on curr cell value 
    - scrolls through appropriate values
    - with press display cursor locates curr cell and replaces
    - add new cell 
    - delete cell
  - demo 1
      - start with blank program, make + 1 2
  - game modes 1
      - scratch
  - controls 1
      - moving past last line goes to menu
      - moving above first line goes to menu
      - eval when button push in menu
  - demo 2
      - eval demo program + 1 2
  - menu 1
      - function menu displayed on screen
  - menu 2
      - function assignment when push in menu
  - demo 3
      - fib program
      - eval demo program + 1 99
  - bugs
      - blank program is weird
      - binary to decimal conversion is slow, blows out display
      - adding removing numbers at end messes up program (probably free memory issues)
      - beep goes too fast (need to take a beat after we eval)
      - suspect if the repl begins with an if, we don't evaluate the test properly
      - in general a const in an if hasn't been tested
      - if try to delete and recreate fib, crashes (probably free memory issue)
  - display 4 
      - show numbers
      - screen layout is ... better
  - virtual keyboard 2
      - number edit
      - up to go back
      - number edit shouldn't return right away
      - number cursor is at digit being edited
  - library 1
      - beep (as continuation)
      - multiply (as continuation)
  - demo 5
      - play beep
  - controls 2
      - game mode switch when push in menu
  - interpreter
     - safety against no free mem left
     - crude safety (inexact) against stack overflow
  - code 2
    - compaction pass
        - 75 logo color bytes removed
        - 375 bytes of logo
        - 80 bytes of symbol function lookup
        - 32 bytes of symbol / menu lookup
        - 196 unused bytes between symbol lookup and symbol data
   - reduce need for extra lookups
   - bigger symbol table? 
   - game modes 2
      - calc mode
BUGS
  - code
    - complex program takes too long to analyze in vblank
BETA
  - dev support
     - self hosted javatari page
       - allow load/save of programs
       - display and editing of programs as text
       - allow keyboard controller
     - gitlab deployment
     - some way to do unit tests (stellerator debugger?)
  - game modes 2
      - music game (simon?)
        - changes color with different beeps
        - stable framerate both repl and eval
        - be able to handle DSS generative examples as demos
      - ball game
        - draw paddles
        - move paddles
        - change paddle graphics
        - read joystick
        - move ball
        - read collision registers
        - stable framerate both repl and eval
      - steps (tweetmaze)
        - draw steps
        - move left/right commands
        - different mazes
        - play tune on game end
        - reset game
        - stable framerate both repl and eval
      - towers of hanoi
        - draw disks
        - move disks
        - read disk positions
        - reset game
        - stable framerate both repl and eval
      - calc
        - stable framerate both repl and eval
  - menu 
        - mode switch show all the names of modes
        - allow for selection without actually switching
        - allow cyclical switching
  - virtual keyboard 3
      - extend to all commands
      - can only see numbers in number mode
      - optimize for context
      - keyboard controller support
        - use color switch to turn keyboard on/off
  - eval mode
     - be able to interrupt eval with switch (reset? select?)
     - minimum eval display time 1 second
     - transition from repl to eval..?
     - song that plays during eval?
     - show free mem / stack / heap 
     - real safeties against stack overflow
  - library 2
      - modulo function
      - music functions (map... or progn?)
      - game functions
  - display 4 
      - use PF0 to hide HMOVE + switch to std HMOVE..?.
      - different colors depending on function selection
  - library 1
      - div functions working
  - code 2
      - hygiene
        - clean up temp variable usage
        - clean up graphics on/offs
      - compaction pass
        - use .byte $2C skip next 2 bytes trick?
        - 48 unused bytes on last page 
        - multiple ways to repl - can consolidate?
        - multiple ways to draw - can consolidate?
        - 87 bytes of sleeps
        - 24 zp y offset lookups
SPRINKLES
  - font
     - tune font / symbols
     - null display on complex lines no box
  - title screen
     - logo 
     - shoutouts
  - help / attract mode 1 
      - occasional blinkyness of controls
  - virtual keyboard 4
      - empty at first
      - blinky cursor when in repl
      - no cell boxes on numbers 
      - cancel move undoes changes
      - too slow to scroll through keys

BONUS 
  - dedicated executable for steps
  - dedicated music sequencer
  - dedicated hanoi
  - alt/bonus game mode/dedicated 
     - steps + lisp
     - tictactoe? 
     - mastermind / cows and bulls
     - robot tanks 
